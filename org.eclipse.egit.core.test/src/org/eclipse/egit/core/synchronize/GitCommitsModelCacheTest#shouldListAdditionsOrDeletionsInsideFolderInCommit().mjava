	@Test
	public void shouldListAdditionsOrDeletionsInsideFolderInCommit()
			throws Exception {
		// given
		Git git = new Git(db);
		writeTrashFile(db, "folder/a.txt", "content");
		writeTrashFile(db, "folder/b.txt", "b content");
		git.add().addFilepattern("folder").call();
		RevCommit c = commit(git, "first commit");
		// when
		List<Commit> leftResult = GitCommitsModelCache.build(db,
				initialTagId(), c, null);
		List<Commit> rightResult = GitCommitsModelCache.build(db, c,
				initialTagId(), null);
		// then
		// left assertions
		assertThat(leftResult, notNullValue());
		assertThat(Integer.valueOf(leftResult.size()), is(Integer.valueOf(1)));
		assertCommit(leftResult.get(0), c, 2);
		assertThat(leftResult.get(0).getChildren().size(), is(2));
		assertFileDeletion(c,
				leftResult.get(0).getChildren().get("folder/a.txt"), "a.txt",
				LEFT);
		assertFileDeletion(c,
				leftResult.get(0).getChildren().get("folder/b.txt"), "b.txt",
				LEFT);
		// right asserts, after changing sides addition becomes deletion
		assertThat(rightResult, notNullValue());
		assertThat(Integer.valueOf(rightResult.size()), is(Integer.valueOf(1)));
		assertCommit(rightResult.get(0), c, 2);
		assertThat(rightResult.get(0).getChildren().size(), is(2));
		assertFileAddition(c,
				rightResult.get(0).getChildren().get("folder/a.txt"), "a.txt",
				RIGHT);
		assertFileAddition(c,
				rightResult.get(0).getChildren().get("folder/b.txt"), "b.txt",
				RIGHT);
	}

