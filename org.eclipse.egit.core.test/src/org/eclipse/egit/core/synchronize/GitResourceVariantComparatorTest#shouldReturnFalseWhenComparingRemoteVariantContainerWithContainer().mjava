	/**
	 * When comparing two remote variants that have different path compare
	 * method should return false
	 *
	 * @throws Exception
	 */
	@Test
	public void shouldReturnFalseWhenComparingRemoteVariantContainerWithContainer()
			throws Exception {
		// when
		GitResourceVariantComparator grvc = new GitResourceVariantComparator(
				null);

		// given
		File file1 = testRepo.createFile(iProject, "test1" + File.separator
				+ "keep1");
		File file2 = testRepo.createFile(iProject, "test2" + File.separator
				+ "keep2");
		testRepo.track(file1);
		testRepo.track(file2);
		testRepo.addToIndex(testRepo.getIFile(iProject, file1));
		testRepo.addToIndex(testRepo.getIFile(iProject, file2));
		RevCommit commit = testRepo.commit("initial commit");

		TreeWalk tw = new TreeWalk(repo);
		int nth = tw.addTree(commit.getTree());

		tw.next();
		tw.enterSubtree(); // enter project node
		tw.next();
		GitFolderResourceVariant base = new GitFolderResourceVariant(repo, null,
				tw.getObjectId(nth), tw.getNameString());

		tw.next();
		GitFolderResourceVariant remote = new GitFolderResourceVariant(repo, null,
				tw.getObjectId(nth), tw.getNameString());

		// then
		assertFalse(grvc.compare(base, remote));
	}

