	@Test
	public void shouldListConflictingChange() throws Exception {
		// given
		writeTrashFile("a.txt", "content");
		Git git = new Git(db);
		git.add().addFilepattern("a.txt").call();
		RevCommit c = git.commit().setMessage("initial commit").call();

		// when
		TreeWalk walk = new TreeWalk(db);
		walk.addTree(new EmptyTreeIterator());
		walk.addTree(c.getTree());
		walk.addTree(new EmptyTreeIterator());
		List<ThreeWayDiffEntry> result = ThreeWayDiffEntry.scan(walk);

		// then
		assertThat(result, notNullValue());
		assertThat(Integer.valueOf(result.size()), is(Integer.valueOf(1)));

		ThreeWayDiffEntry entry = result.get(0);
		assertThat(entry.getDirection(), is(Direction.CONFLICTING));
		assertThat(entry.getChangeType(), is(ChangeType.MODIFY));
		// assertThat(entry.getNewPath(), is("a.txt"));
		// assertThat(entry.getOldPath(), is(DEV_NULL));
	}

