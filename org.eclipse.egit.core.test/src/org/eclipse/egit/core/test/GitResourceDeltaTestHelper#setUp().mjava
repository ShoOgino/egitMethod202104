	public void setUp() {
		resourceChangeListener = new IResourceChangeListener() {
			public void resourceChanged(final IResourceChangeEvent event) {
				try {
					event.getDelta().accept(new IResourceDeltaVisitor() {
						public boolean visit(IResourceDelta delta)
								throws CoreException {
							final IResource resource = delta.getResource();
							IProject project = resource.getProject();
							if (project == null)
								return true;
							RepositoryMapping mapping = RepositoryMapping
									.getMapping(resource);
							if (mapping == null)
								return true;
							if (mapping.getRepository() != repository)
								return false;
							GitResourceDeltaVisitor visitor = new GitResourceDeltaVisitor(
									repository);
							try {
								event.getDelta().accept(visitor);
							} catch (CoreException e) {
								Activator.logError(e.getMessage(), e);
								return false;
							}
							IPath gitDirAbsolutePath = mapping
									.getGitDirAbsolutePath();
							for (IResource res : visitor.getResourcesToUpdate()) {
								if (ignoreTeamPrivateMember
										&& (res.isTeamPrivateMember() || gitDirAbsolutePath
												.isPrefixOf(res
														.getRawLocation()
														.makeAbsolute())))
									continue;
								changedResources.add(res);
							}
							return false;
						}
					});
				} catch (CoreException e) {
					Activator.logError(e.getMessage(), e);
					return;
				}
			}
		};
		ResourcesPlugin.getWorkspace().addResourceChangeListener(
				resourceChangeListener, IResourceChangeEvent.POST_CHANGE);
	}

