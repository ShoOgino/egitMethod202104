	/**
	 * This method deletes a file / subtree
	 *
	 * @param d
	 *            file / folder to delete
	 * @throws IOException
	 *             if file can not be deleted
	 */
	public void deleteRecursive(File d) throws IOException {
		if (!d.exists())
			return;

		File[] files = d.listFiles();
		if (files != null) {
			for (int i = 0; i < files.length; ++i) {
				if (files[i].isDirectory())
					deleteRecursive(files[i]);
				else if (!files[i].delete())
					throw new IOException(files[i] + " in use or undeletable");
			}
		}
		if (!d.delete())
			throw new IOException(d + " in use or undeletable");
		assert !d.exists();
	}

