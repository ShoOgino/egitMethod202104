	@Test
	public void addTag() throws Exception {
		assertTrue("Tags should be empty", repository1.getRepository()
				.getTags().isEmpty());
		Tag newTag = new Tag(repository1.getRepository());
		newTag.setTag("TheNewTag");
		newTag.setMessage("Well, I'm the tag");
		newTag.setTagger(new PersonIdent(TestUtils.AUTHOR));
		newTag.setObjId(repository1.getRepository()
				.resolve("refs/heads/master"));
		TagOperation top = new TagOperation(repository1.getRepository(),
				newTag, false);
		top.execute(new NullProgressMonitor());
		assertFalse("Tags should not be empty", repository1.getRepository()
				.getTags().isEmpty());

		try {
			top.execute(null);
			fail("Expected Exception not thrown");
		} catch (CoreException e) {
			// expected
		}

		top = new TagOperation(repository1.getRepository(), newTag, true);
		try {
			top.execute(null);
			fail("Expected Exception not thrown");
		} catch (CoreException e) {
			// expected
		}
		Ref tagRef = repository1.getRepository().getTags().get("TheNewTag");
		RevWalk walk = new RevWalk(repository1.getRepository());
		Tag tag = walk.parseTag(
				repository1.getRepository().resolve(tagRef.getName())).asTag(
				walk);

		newTag.setMessage("Another message");
		assertFalse("Messages should differ", tag.getMessage().equals(
				newTag.getMessage()));
		top.execute(null);
		tag = walk.parseTag(
				repository1.getRepository().resolve(tagRef.getName())).asTag(
				walk);
		assertTrue("Messages be same", tag.getMessage().equals(
				newTag.getMessage()));
	}

