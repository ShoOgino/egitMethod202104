	@Test
	public void addTag() throws Exception {
		assertTrue("Tags should be empty", repository1.getRepository()
				.getRefDatabase().getRefsByPrefix(Constants.R_TAGS).isEmpty());
		TagBuilder newTag = new TagBuilder();
		newTag.setTag("TheNewTag");
		newTag.setMessage("Well, I'm the tag");
		newTag.setTagger(RawParseUtils.parsePersonIdent(TestUtils.AUTHOR));
		newTag.setObjectId(repository1.getRepository()
				.resolve("refs/heads/master"), Constants.OBJ_COMMIT);
		TagOperation top = new TagOperation(repository1.getRepository(),
				newTag, false);
		top.execute(new NullProgressMonitor());
		assertFalse("Tags should not be empty", repository1.getRepository()
				.getRefDatabase().getRefsByPrefix(Constants.R_TAGS).isEmpty());

		top.execute(null);
		assertEquals(top.getResult(), RefUpdate.Result.NO_CHANGE);

		top = new TagOperation(repository1.getRepository(), newTag, true);

		top.execute(null);
		assertEquals(top.getResult(), RefUpdate.Result.NO_CHANGE);

		try (RevWalk walk = new RevWalk(repository1.getRepository())) {
			RevTag tag = walk.parseTag(repository1.getRepository().resolve(
					Constants.R_TAGS + "TheNewTag"));

			newTag.setMessage("Another message");
			assertFalse("Messages should differ",
					tag.getFullMessage().equals(newTag.getMessage()));
			top.execute(null);
			tag = walk.parseTag(repository1.getRepository().resolve(
					Constants.R_TAGS + "TheNewTag"));
			assertTrue("Messages be same",
					tag.getFullMessage().equals(newTag.getMessage()));
			walk.dispose();
		}
	}

