	@Test
	public void testTreeWalkBaseVariants() throws Exception {
		File file1 = testRepo.createFile(iProject, "file1");
		IFile iFile1 = testRepo.getIFile(iProject, file1);

		setupUnconflictingBranches();

		ObjectId baseId = repo.resolve(BASE_BRANCH);
		RevWalk walk = new RevWalk(repo);
		TreeWalk tw = new TreeWalk(repo);
		tw.addTree(walk.parseTree(baseId));

		while (tw.next()) {
			AbstractGitResourceVariant variant = TreeParserResourceVariant
					.create(repo, tw.getTree(0, CanonicalTreeParser.class));

			assertEquals(tw.getObjectId(0).getName(),
					variant.getContentIdentifier());
			assertEquals(tw.getObjectId(0), variant.getObjectId());
			assertEquals(tw.getRawMode(0), variant.getRawMode());
			if (iFile1.getName().equals(variant.getName())) {
				assertContentEquals(variant, INITIAL_CONTENT_1);
			} else if (!tw.isSubtree()) {
				fail("file2 shouldn't exist in our base.");
			}

			if (tw.isSubtree()) {
				tw.enterSubtree();
			}
		}
	}

