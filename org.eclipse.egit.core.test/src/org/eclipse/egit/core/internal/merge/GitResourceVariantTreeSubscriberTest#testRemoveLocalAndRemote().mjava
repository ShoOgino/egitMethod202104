	@Test
	public void testRemoveLocalAndRemote() throws Exception {
		GitResourceVariantTreeProvider provider = createTreeProviderWithDeletions();
		GitResourceVariantTreeSubscriber subscriber = new GitResourceVariantTreeSubscriber(
				provider);

		// file1 has been removed locally
		final IDiff diff1 = subscriber.getDiff(iFile1);
		assertTrue(diff1 instanceof IThreeWayDiff);
		assertEquals(IDiff.REMOVE, diff1.getKind());
		assertEquals(IThreeWayDiff.OUTGOING,
				((IThreeWayDiff) diff1).getDirection());
		final IDiff localDiff1 = ((IThreeWayDiff) diff1).getLocalChange();
		final IDiff remoteDiff1 = ((IThreeWayDiff) diff1).getRemoteChange();
		assertTrue(localDiff1 instanceof ResourceDiff);
		assertNull(remoteDiff1);
		final IFileRevision ancestorState1 = ((ResourceDiff) localDiff1)
				.getBeforeState();
		final IFileRevision localState1 = ((ResourceDiff) localDiff1)
				.getAfterState();
		assertTrue(iFile1.getName().equals(ancestorState1.getName()));
		assertNull(localState1);
		final IStorage ancestorStorage1 = ancestorState1
				.getStorage(new NullProgressMonitor());
		assertContentEquals(ancestorStorage1, INITIAL_CONTENT_1);

		// file2 has been removed remotely
		final IDiff diff2 = subscriber.getDiff(iFile2);
		assertTrue(diff2 instanceof IThreeWayDiff);
		assertEquals(IDiff.REMOVE, diff2.getKind());
		assertEquals(IThreeWayDiff.INCOMING,
				((IThreeWayDiff) diff2).getDirection());
		final IDiff localDiff2 = ((IThreeWayDiff) diff2).getLocalChange();
		final IDiff remoteDiff2 = ((IThreeWayDiff) diff2).getRemoteChange();
		assertTrue(remoteDiff2 instanceof ResourceDiff);
		assertNull(localDiff2);
		final IFileRevision ancestorState2 = ((ResourceDiff) remoteDiff2)
				.getBeforeState();
		final IFileRevision remoteState2 = ((ResourceDiff) remoteDiff2)
				.getAfterState();
		assertTrue(iFile2.getName().equals(ancestorState2.getName()));
		assertNull(remoteState2);
		final IStorage rancestorStorage2 = ancestorState2
				.getStorage(new NullProgressMonitor());
		assertContentEquals(rancestorStorage2, INITIAL_CONTENT_2);
	}

