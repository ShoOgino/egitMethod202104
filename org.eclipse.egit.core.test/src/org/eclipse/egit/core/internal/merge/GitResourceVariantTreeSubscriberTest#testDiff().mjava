	@Test
	public void testDiff() throws Exception {
		GitResourceVariantTreeProvider provider = createTreeProvider();
		GitResourceVariantTreeSubscriber subscriber = new GitResourceVariantTreeSubscriber(
				provider);

		final IDiff diff1 = subscriber.getDiff(iFile1);
		assertTrue(diff1 instanceof IThreeWayDiff);
		assertEquals(IDiff.CHANGE, diff1.getKind());
		assertEquals(IThreeWayDiff.OUTGOING,
				((IThreeWayDiff) diff1).getDirection());
		final IDiff localDiff1 = ((IThreeWayDiff) diff1).getLocalChange();
		final IDiff remoteDiff1 = ((IThreeWayDiff) diff1).getRemoteChange();
		assertNull(remoteDiff1);
		assertTrue(localDiff1 instanceof ResourceDiff);
		final IFileRevision localState1 = ((ResourceDiff) localDiff1)
				.getAfterState();
		final IFileRevision baseState1 = ((ResourceDiff) localDiff1)
				.getBeforeState();
		assertNotNull(localState1);
		assertNotNull(baseState1);
		assertTrue(iFile1.getName().equals(localState1.getName()));
		assertTrue(iFile1.getName().equals(baseState1.getName()));
		final IStorage localStorage1 = localState1
				.getStorage(new NullProgressMonitor());
		final IStorage baseStorage1 = baseState1
				.getStorage(new NullProgressMonitor());
		assertContentEquals(localStorage1, INITIAL_CONTENT_1 + MASTER_CHANGES);
		assertContentEquals(baseStorage1, INITIAL_CONTENT_1);

		final IDiff diff2 = subscriber.getDiff(iFile2);
		assertTrue(diff2 instanceof IThreeWayDiff);
		assertEquals(IDiff.CHANGE, diff2.getKind());
		assertEquals(IThreeWayDiff.INCOMING,
				((IThreeWayDiff) diff2).getDirection());
		final IDiff localDiff2 = ((IThreeWayDiff) diff2).getLocalChange();
		final IDiff remoteDiff2 = ((IThreeWayDiff) diff2).getRemoteChange();
		assertTrue(remoteDiff2 instanceof ResourceDiff);
		assertNull(localDiff2);
		final IFileRevision remoteState2 = ((ResourceDiff) remoteDiff2)
				.getAfterState();
		final IFileRevision ancestorState2 = ((ResourceDiff) remoteDiff2)
				.getBeforeState();
		assertTrue(iFile2.getName().equals(ancestorState2.getName()));
		assertTrue(iFile2.getName().equals(remoteState2.getName()));
		final IStorage ancestorStorage2 = ancestorState2
				.getStorage(new NullProgressMonitor());
		final IStorage remoteStorage2 = remoteState2
				.getStorage(new NullProgressMonitor());
		assertContentEquals(ancestorStorage2, INITIAL_CONTENT_2);
		assertContentEquals(remoteStorage2, BRANCH_CHANGES + INITIAL_CONTENT_2);
	}

