	private Map<URIish, Map<String, Set<ProjectReference>>> parseReferenceStrings()
			throws TeamException {
		final Map<URIish, Map<String, Set<ProjectReference>>> repositories = new LinkedHashMap<>();

		for (final String reference : referenceStrings) {
			if (reference == null) {
				// BundleImporterDelegate doesn't check invalid project URI's,
				// so we can receive null references.
				continue;
			}
			try {
				final ProjectReference projectReference = new ProjectReference(
						reference);
				Set<ProjectReference> projectReferences = repositories
						.computeIfAbsent(projectReference.getRepository(),
								repo -> new HashMap<>())
						.computeIfAbsent(projectReference.getBranch(),
								branch -> new LinkedHashSet<>());
				projectReferences.add(projectReference);
			} catch (final IllegalArgumentException | URISyntaxException e) {
				throw new TeamException(reference, e);
			}
		}

		return repositories;
	}

