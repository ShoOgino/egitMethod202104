		@Override
		protected char[] getPassword(URIish uri, int attempt,
				@NonNull State state) throws IOException {
			if (attempt == 0) {
				// Obtain a password from secure store and return it if
				// successful
				try {
					UserPasswordCredentials credentials = store
							.getCredentials(uri);
					if (credentials != null) {
						String password = credentials.getPassword();
						if (password != null) {
							char[] pass = password.toCharArray();
							state.setPassword(pass);
							// Don't increment the count; this attempt shall not
							// count against the limit, and we rely on count
							// still being zero when we handle the result.
							return pass;
						}
					}
				} catch (StorageException | RuntimeException e) {
					Activator.logError(e.getMessage(), e);
				}
			}
			return super.getPassword(uri, attempt, state);
		}

