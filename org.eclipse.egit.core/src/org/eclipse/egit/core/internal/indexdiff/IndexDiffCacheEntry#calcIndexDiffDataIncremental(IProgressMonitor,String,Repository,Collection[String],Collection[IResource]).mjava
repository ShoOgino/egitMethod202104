	private IndexDiffData calcIndexDiffDataIncremental(IProgressMonitor monitor,
			String jobName, Repository repository,
			Collection<String> filesToUpdate,
			Collection<IResource> resourcesToUpdate) throws IOException {
		if (indexDiffData == null)
			// Incremental update not possible without prior indexDiffData
			// -> do full refresh instead
			return calcIndexDiffDataFull(monitor, jobName, repository);

		EclipseGitProgressTransformer jgitMonitor = new EclipseGitProgressTransformer(
				monitor);

		List<String> treeFilterPaths = calcTreeFilterPaths(filesToUpdate);

		return UnitOfWork.run(repository, () -> {
			WorkingTreeIterator iterator = IteratorService
					.createInitialIterator(repository);
			if (iterator == null)
				return null; // workspace is closed
			IndexDiff diffForChangedResources = new IndexDiff(repository,
					Constants.HEAD, iterator);
			diffForChangedResources.setFilter(
					PathFilterGroup.createFromStrings(treeFilterPaths));
			diffForChangedResources.diff(jgitMonitor, 0, 0, jobName,
					() -> RepositoryCache.getInstance().getBuilder(true, true));
			IndexDiffData previous = indexDiffData;
			if (previous == null) {
				// Can happen when the index diff cache entry is already
				// disposed, but the updateJob is still running (and about to
				// cancel).
				return null;
			}
			return new IndexDiffData(previous, filesToUpdate, resourcesToUpdate,
					diffForChangedResources);
		});
	}

