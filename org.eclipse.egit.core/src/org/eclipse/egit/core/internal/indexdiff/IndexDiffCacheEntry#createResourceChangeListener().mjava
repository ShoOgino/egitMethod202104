	private void createResourceChangeListener() {
		resourceChangeListener = new IResourceChangeListener() {

			private final Map<IProject, IPath> deletedProjects = new HashMap<>();

			@Override
			public void resourceChanged(IResourceChangeEvent event) {
				Repository repository = getRepository();
				if (repository == null) {
					ResourcesPlugin.getWorkspace()
							.removeResourceChangeListener(this);
					resourceChangeListener = null;
					return;
				}
				if (event.getType() == IResourceChangeEvent.PRE_DELETE) {
					// Deletion of a project.
					IResource resource = event.getResource();
					if (resource.getType() == IResource.PROJECT) {
						IPath projectPath = resource.getLocation();
						if (projectPath != null) {
							IPath repoPath = ResourceUtil
									.getRepositoryRelativePath(projectPath,
											repository);
							if (repoPath != null) {
								deletedProjects.put((IProject) resource,
										projectPath);
							}
						}
					}
					// Recomputing the index diff on PRE_DELETE might still find
					// the files/resources. We'll handle it in the POST_CHANGE
					// event for the deletion.
					return;
				}
				GitResourceDeltaVisitor visitor = new GitResourceDeltaVisitor(
						repository, deletedProjects);
				try {
					event.getDelta().accept(visitor);
				} catch (CoreException e) {
					Activator.logError(e.getMessage(), e);
					return;
				}
				if (visitor.getGitIgnoreChanged()) {
					scheduleReloadJob("A .gitignore changed"); //$NON-NLS-1$
				} else if (visitor.isProjectDeleted()) {
					scheduleReloadJob("A project was deleted"); //$NON-NLS-1$
				} else if (indexDiffData == null) {
					scheduleReloadJob("Resource changed, no diff available"); //$NON-NLS-1$
				} else {
					Collection<String> filesToUpdate = visitor
							.getFilesToUpdate();
					Collection<IResource> resourcesToUpdate = visitor
							.getResourcesToUpdate();
					if (!filesToUpdate.isEmpty()) {
						scheduleUpdateJob(filesToUpdate, resourcesToUpdate);
					}
				}
			}

		};
		ResourcesPlugin.getWorkspace().addResourceChangeListener(
				resourceChangeListener, IResourceChangeEvent.POST_CHANGE
						| IResourceChangeEvent.PRE_DELETE);
	}

