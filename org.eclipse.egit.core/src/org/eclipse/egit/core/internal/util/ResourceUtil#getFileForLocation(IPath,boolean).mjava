	/**
	 * Return the corresponding file if it exists and has the Git repository
	 * provider.
	 * <p>
	 * If checkNested argument is true, the returned file will be relative to
	 * the most nested non-closed Git-managed project.
	 *
	 * @param location
	 * @param innerMost
	 *            check if there are multiple candidates in the workspace and
	 *            return innermost resource. <b>Note</b>, this check is
	 *            expensive and should not be used in performance critical code.
	 * @return the file, or null
	 */
	@Nullable
	public static IFile getFileForLocation(@NonNull IPath location,
			boolean innerMost) {
		IWorkspaceRoot root = ResourcesPlugin.getWorkspace().getRoot();
		IFile file = root.getFileForLocation(location);
		if (file == null) {
			return null;
		}
		if (!innerMost && isValid(file)) {
			return file;
		}
		URI uri = URIUtil.toURI(location);
		IFile file2 = getFileForLocationURI(root, uri);
		if (file2 == null && isValid(file)) {
			return file;
		}
		return file2;
	}

