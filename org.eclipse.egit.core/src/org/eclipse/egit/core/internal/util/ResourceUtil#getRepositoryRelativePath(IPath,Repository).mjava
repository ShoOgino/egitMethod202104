	/**
	 * Makes a given path relative to the working directory of the given
	 * repository. If the repository is bare or the path is {@code null} or is
	 * not in that working directory, {@code null} is returned. Returns an empty
	 * path if the given path <em>is</em> the working directory.
	 *
	 * @param path
	 *            to make relative
	 * @param repository
	 *            to make the path relative to
	 * @return the repository-relative path, or {@code null} if the path is not
	 *         inside the repository's working directory.
	 */
	@Nullable
	public static IPath getRepositoryRelativePath(@Nullable IPath path,
			@NonNull Repository repository) {
		if (path == null || repository.isBare()) {
			return null;
		}
		java.nio.file.Path workingDirectory = repository.getWorkTree().toPath();
		java.nio.file.Path toRelativize = path.toFile().toPath();
		if (toRelativize.startsWith(workingDirectory)) {
			int n = workingDirectory.getNameCount();
			int m = toRelativize.getNameCount();
			if (n == m) {
				return new Path(""); //$NON-NLS-1$
			}
			return Path.fromOSString(toRelativize.subpath(n, m).toString());
		}
		return null;
	}

