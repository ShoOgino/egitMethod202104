	@Override
	public void update(final int work) {
		if (work <= 0) {
			return;
		}
		final int cmp = lastWorked + work;
		if (totalWork == UNKNOWN) {
			long now = System.currentTimeMillis();
			if (now < lastUpdatedAt || now - lastUpdatedAt > UPDATE_INTERVAL) {
				root.subTask(msg + ", " + cmp); //$NON-NLS-1$
				root.setWorkRemaining(100);
				root.worked(1);
				lastUpdatedAt = now;
			}
		} else if (lastShown == 0
				|| cmp * 100 / totalWork != lastShown * 100 / totalWork) {
			// Percentage changed: update the subTask message
			final StringBuilder m = new StringBuilder();
			m.append(msg);
			m.append(": "); //$NON-NLS-1$
			while (m.length() < 25) {
				m.append(' ');
			}
			final String twstr = String.valueOf(totalWork);
			String cmpstr = String.valueOf(cmp);
			while (cmpstr.length() < twstr.length()) {
				cmpstr = ' ' + cmpstr;
			}
			final int pcnt = (cmp * 100 / totalWork);
			if (pcnt < 100) {
				m.append(' ');
			}
			if (pcnt < 10) {
				m.append(' ');
			}
			m.append(pcnt);
			m.append("% ("); //$NON-NLS-1$
			m.append(cmpstr);
			m.append('/');
			m.append(twstr);
			m.append(')');

			root.subTask(m.toString());
			root.setWorkRemaining(100);
			root.worked(1);
			lastShown = cmp;
		}
		lastWorked = cmp;
	}

