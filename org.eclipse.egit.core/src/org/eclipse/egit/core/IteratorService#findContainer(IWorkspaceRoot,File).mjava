	/**
	 * The method searches a container resource related to the given file. The
	 * container must reside in a project that is shared with Git. Linked folders
	 * are ignored.
	 *
	 * @param root
	 *            the workspace root
	 * @param file
	 * @return a container that matches the description above or null if such a
	 *         container does not exist
	 */
	public static IContainer findContainer(IWorkspaceRoot root, File file) {
		if (!file.isDirectory())
			throw new IllegalArgumentException(
					"file " + file.getAbsolutePath() + " is no directory"); //$NON-NLS-1$//$NON-NLS-2$

		// fast path to get desired container
		IContainer resource = root.getContainerForLocation(new Path(file
				.getAbsolutePath()));

		// Eclipse has no mappings for this path
		if (resource == null)
			return null;

		if (isValid(resource))
			return resource;

		// the case where the project is either closed or resource is linked:
		// try to find *all* possible candidates (hello overlapping projects!)
		// The code below performs exceptionally slow because it tries to find
		// all linked resources too
		final IContainer[] containers = root.findContainersForLocationURI(file
				.toURI());
		for (IContainer container : containers)
			if (isValid(container))
				return container;
		return null;
	}

