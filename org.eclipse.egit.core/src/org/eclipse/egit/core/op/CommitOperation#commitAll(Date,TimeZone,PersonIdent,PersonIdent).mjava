	// TODO: can the commit message be change by the user in case of a merge commit?
	private void commitAll(final Date commitDate, final TimeZone timeZone,
			final PersonIdent authorIdent, final PersonIdent committerIdent)
			throws TeamException {

		Git git = new Git(repo);
		try {
			commit = git.commit()
					.setAll(true)
					.setAuthor(
							new PersonIdent(authorIdent, commitDate, timeZone))
					.setCommitter(
							new PersonIdent(committerIdent, commitDate,
									timeZone)).setMessage(message)
					.setInsertChangeId(createChangeId).call();
		} catch (NoHeadException e) {
			throw new TeamException(e.getLocalizedMessage(), e);
		} catch (NoMessageException e) {
			throw new TeamException(e.getLocalizedMessage(), e);
		} catch (UnmergedPathException e) {
			throw new TeamException(e.getLocalizedMessage(), e);
		} catch (ConcurrentRefUpdateException e) {
			throw new TeamException(CoreText.MergeOperation_InternalError, e);
		} catch (JGitInternalException e) {
			throw new TeamException(CoreText.MergeOperation_InternalError, e);
		} catch (WrongRepositoryStateException e) {
			throw new TeamException(e.getLocalizedMessage(), e);
		}
	}

