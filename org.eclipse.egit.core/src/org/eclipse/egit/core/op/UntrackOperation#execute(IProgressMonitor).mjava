	@Override
	public void execute(IProgressMonitor monitor) throws CoreException {
		SubMonitor progress = SubMonitor.convert(monitor, (rsrcList.size() + locations.size()) * 2);
		progress.setTaskName(CoreText.UntrackOperation_adding);

		edits.clear();

		try {
			for (IResource obj : rsrcList) {
				remove(obj);
				progress.worked(1);
			}
			for (IPath location : locations) {
				remove(location);
				progress.worked(1);
			}

			progress.setWorkRemaining(edits.size());
			for (Map.Entry<Repository, DirCacheEditor> e : edits.entrySet()) {
				final DirCacheEditor editor = e.getValue();
				progress.setTaskName(
						NLS.bind(CoreText.UntrackOperation_writingIndex,
								db.getDirectory()));
				editor.commit();
				progress.worked(1);
			}
		} catch (RuntimeException e) {
			throw new CoreException(Activator.error(CoreText.UntrackOperation_failed, e));
		} catch (IOException e) {
			throw new CoreException(Activator.error(CoreText.UntrackOperation_failed, e));
		} finally {
			for (DirCacheEditor editor : edits.values()) {
				if (editor.getDirCache() != null) {
					editor.getDirCache().unlock();
				}
			}
			edits.clear();
		}
	}

