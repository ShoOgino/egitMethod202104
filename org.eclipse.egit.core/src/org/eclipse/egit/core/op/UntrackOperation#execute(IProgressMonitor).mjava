	/* (non-Javadoc)
	 * @see org.eclipse.egit.core.op.IEGitOperation#execute(org.eclipse.core.runtime.IProgressMonitor)
	 */
	public void execute(IProgressMonitor m) throws CoreException {
		IProgressMonitor monitor;
		if (m == null)
			monitor = new NullProgressMonitor();
		else
			monitor = m;

		edits.clear();
		mappings.clear();

		monitor.beginTask(CoreText.UntrackOperation_adding, rsrcList.size() * 200);
		try {
			for (IResource obj : rsrcList) {
				remove(obj);
				monitor.worked(200);
			}

			for (Map.Entry<Repository, DirCacheEditor> e : edits.entrySet()) {
				final Repository db = e.getKey();
				final DirCacheEditor editor = e.getValue();
				monitor.setTaskName(NLS.bind(CoreText.UntrackOperation_writingIndex, db.getDirectory()));
				editor.commit();
			}
		} catch (RuntimeException e) {
			throw new CoreException(Activator.error(CoreText.UntrackOperation_failed, e));
		} catch (IOException e) {
			throw new CoreException(Activator.error(CoreText.UntrackOperation_failed, e));
		} finally {
			for (final RepositoryMapping rm : mappings.keySet())
				rm.fireRepositoryChanged();
			for (DirCacheEditor editor:edits.values())
				if (editor.getDirCache() != null)
					editor.getDirCache().unlock();
			edits.clear();
			mappings.clear();
			monitor.done();
		}
	}

