	private void doInit(final IProgressMonitor monitor)
			throws URISyntaxException, IOException {
		monitor.setTaskName(CoreText.CloneOperation_initializingRepository);

		local = new Repository(gitdir);
		local.create();

		final RefUpdate head = local.updateRef(Constants.HEAD);
		head.disableRefLog();
		head.link(branch);

		remoteConfig = new RemoteConfig(local.getConfig(), remoteName);
		remoteConfig.addURI(uri);

		final String dst = Constants.R_REMOTES + remoteConfig.getName();
		RefSpec wcrs = new RefSpec();
		wcrs = wcrs.setForceUpdate(true);
		wcrs = wcrs.setSourceDestination(Constants.R_HEADS
				+ "*", dst + "/*"); //$NON-NLS-1$ //$NON-NLS-2$

		if (allSelected) {
			remoteConfig.addFetchRefSpec(wcrs);
		} else {
			for (final Ref ref : selectedBranches)
				if (wcrs.matchSource(ref))
					remoteConfig.addFetchRefSpec(wcrs.expandFromSource(ref));
		}

		// we're setting up for a clone with a checkout
		local.getConfig().setBoolean(
				"core", null, "bare", false); //$NON-NLS-1$ //$NON-NLS-2$

		remoteConfig.update(local.getConfig());

		// branch is like 'Constants.R_HEADS + branchName', we need only
		// the 'branchName' part
		String branchName = branch.substring(Constants.R_HEADS.length());

		// setup the default remote branch for branchName
		local.getConfig().setString(RepositoryConfig.BRANCH_SECTION,
				branchName, "remote", remoteName); //$NON-NLS-1$
		local.getConfig().setString(RepositoryConfig.BRANCH_SECTION,
				branchName, "merge", branch); //$NON-NLS-1$

		local.getConfig().save();
	}

