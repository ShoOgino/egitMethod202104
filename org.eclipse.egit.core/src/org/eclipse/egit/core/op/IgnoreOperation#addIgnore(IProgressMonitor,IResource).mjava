	private void addIgnore(IProgressMonitor monitor, IResource resource)
			throws UnsupportedEncodingException, CoreException, IOException {
		IContainer container = resource.getParent();
		String entry = "/" + resource.getName() + "\n"; //$NON-NLS-1$  //$NON-NLS-2$

		if (container instanceof IWorkspaceRoot) {
			Repository repository = RepositoryMapping.getMapping(
					resource.getProject()).getRepository();
			// .gitignore is not accessible as resource
			IPath gitIgnorePath = resource.getLocation().removeLastSegments(1)
					.append(Constants.GITIGNORE_FILENAME);
			IPath repoPath = new Path(repository.getWorkTree()
					.getAbsolutePath());
			if (!repoPath.isPrefixOf(gitIgnorePath)) {
				String message = NLS.bind(
						CoreText.IgnoreOperation_parentOutsideRepo, resource
								.getLocation().toOSString(), repoPath
								.toOSString());
				IStatus status = Activator.error(message, null);
				throw new CoreException(status);
			}
			File gitIgnore = new File(gitIgnorePath.toOSString());
			updateGitIgnore(gitIgnore, entry);
			// no resource change event when updating .gitignore outside
			// workspace => trigger manual decorator refresh
			gitignoreOutsideWSChanged = true;
		} else {
			IFile gitignore = container.getFile(new Path(
					Constants.GITIGNORE_FILENAME));
			entry = getEntry(gitignore.getLocation().toFile(), entry);
			IProgressMonitor subMonitor = new SubProgressMonitor(monitor, 1);
			ByteArrayInputStream entryBytes = asStream(entry);
			if (gitignore.exists())
				gitignore.appendContents(entryBytes, true, true, subMonitor);
			else
				gitignore.create(entryBytes, true, subMonitor);
		}
	}

