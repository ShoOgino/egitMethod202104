	@Override
	public void execute(IProgressMonitor monitor) throws CoreException {
		SubMonitor progress = SubMonitor.convert(monitor, (rsrcList.size() + locations.size()) * 2);
		progress.setTaskName(CoreText.AssumeUnchangedOperation_adding);

		caches.clear();

		try {
			for (IResource resource : rsrcList) {
				assumeValid(resource);
				progress.worked(1);
			}
			for (IPath location : locations) {
				assumeValid(location);
				progress.worked(1);
			}

			progress.setWorkRemaining(caches.size());
			for (Map.Entry<Repository, DirCache> e : caches.entrySet()) {
				final Repository db = e.getKey();
				final DirCache editor = e.getValue();
				progress.setTaskName(NLS.bind(
						CoreText.AssumeUnchangedOperation_writingIndex, db
								.getDirectory()));
				editor.write();
				editor.commit();
				progress.worked(1);
			}
		} catch (RuntimeException e) {
			throw new CoreException(Activator.error(CoreText.UntrackOperation_failed, e));
		} catch (IOException e) {
			throw new CoreException(Activator.error(CoreText.UntrackOperation_failed, e));
		} finally {
			for (DirCache cache : caches.values()) {
				cache.unlock();
			}
			caches.clear();
		}
	}

