	private void deleteResources(IProgressMonitor monitor) throws CoreException {
		monitor.beginTask(CoreText.DeleteResourcesOperation_deletingResources,
				resources.size() + 1);
		boolean errorOccurred = false;

		List<IResource> refreshCacheResources = new ArrayList<IResource>();

		for (IResource resource : resources) {
			if (resource.exists())
				resource.delete(false, new SubProgressMonitor(monitor, 1));
			else {
				File file = resource.getFullPath().toFile();
				if (file.exists()) {
					try {
						FileUtils.delete(file);
					} catch (IOException e) {
						errorOccurred = true;
						String message = MessageFormat
								.format(CoreText.DeleteResourcesOperation_deleteFailed,
										file.getPath());
						Activator.logError(message, e);
					}
					refreshCacheResources.add(resource);
				}
				monitor.worked(1);
			}
		}

		if (!refreshCacheResources.isEmpty())
			refreshIndexDiffCache(refreshCacheResources);
		monitor.worked(1);

		monitor.done();

		if (errorOccurred) {
			IStatus status = Activator.error(
					CoreText.DeleteResourcesOperation_deleteFailedSeeLog, null);
			throw new CoreException(status);
		}
	}

