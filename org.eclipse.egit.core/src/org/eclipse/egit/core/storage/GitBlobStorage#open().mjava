	private InputStream open() throws IOException, CoreException,
			IncorrectObjectTypeException {
		if (blobId == null) {
			return new ByteArrayInputStream(new byte[0]);
		}
		try {
			WorkingTreeOptions workingTreeOptions = db.getConfig().get(WorkingTreeOptions.KEY);
			InputStream objectInputStream = db.open(blobId,
					Constants.OBJ_BLOB).openStream();
			InputStream filteredInputStream = objectInputStream;
			if (metadata != null) {
				filteredInputStream = Filtering.filter(db, path,
						objectInputStream, metadata.smudgeFilterCommand);
			}
			EolStreamType streamType;
			if (metadata != null && metadata.eolStreamType != null) {
				streamType = metadata.eolStreamType;
			} else if (workingTreeOptions.getAutoCRLF() == AutoCRLF.TRUE) {
				streamType = EolStreamType.AUTO_CRLF;
			} else {
				streamType = EolStreamType.DIRECT;
			}
			return EolStreamTypeUtil.wrapInputStream(filteredInputStream,
					streamType);
		} catch (MissingObjectException notFound) {
			throw new CoreException(Activator.error(NLS.bind(
					CoreText.BlobStorage_blobNotFound, blobId.name(), path),
					notFound));
		}
	}

