	/**
	 * @param resource any workbench resource contained within this project.
	 * @return the mapping for the specified project
	 */
	@Nullable
	public /* TODO static */ RepositoryMapping getRepositoryMapping(
			@Nullable IResource resource) {
		IResource r = resource;
		try {
			for (; r != null; r = r.getParent()) {
				final RepositoryMapping m;

				if (!r.isAccessible())
					continue;
				m = (RepositoryMapping) r.getSessionProperty(MAPPING_KEY);
				if (m != null)
					return m;
			}
		} catch (CoreException err) {
			Activator.logError(
					CoreText.GitProjectData_failedFindingRepoMapping, err);
		}
		return null;
	}

