	/**
	 * Store information about the repository connection in the workspace
	 *
	 * @throws CoreException
	 */
	public void store() throws CoreException {
		File dat = propertyFile();
		File tmp = null;

		try {
			trace("save " + dat);  //$NON-NLS-1$
			tmp = File.createTempFile(
					"gpd_",  //$NON-NLS-1$
					".prop",   //$NON-NLS-1$
					dat.getParentFile());
			try (OutputStream o = Files.newOutputStream(tmp.toPath())) {
				final Properties p = new Properties();
				for (final RepositoryMapping repoMapping : mappings.values()) {
					repoMapping.store(p);
				}
				p.store(o, "GitProjectData");  //$NON-NLS-1$
			}

			try {
				FileUtils.rename(tmp, dat, StandardCopyOption.ATOMIC_MOVE,
						StandardCopyOption.REPLACE_EXISTING);
			} catch (AtomicMoveNotSupportedException e) {
				// Try non-atomic
				FileUtils.rename(tmp, dat, StandardCopyOption.REPLACE_EXISTING);
			}
		} catch (IOException ioe) {
			try {
				if (tmp != null && tmp.exists()) {
					FileUtils.delete(tmp);
				}
			} catch (IOException e) {
				ioe.addSuppressed(e);
			}
			throw new CoreException(Activator.error(
					NLS.bind(CoreText.GitProjectData_saveFailed, dat), ioe));
		}
	}

