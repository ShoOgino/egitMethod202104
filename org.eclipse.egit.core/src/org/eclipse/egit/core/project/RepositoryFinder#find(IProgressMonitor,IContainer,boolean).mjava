	private void find(final IProgressMonitor m, final IContainer c, boolean searchLinkedFolders)
				throws CoreException {
		if (!searchLinkedFolders && c.isLinked())
			return; // Ignore linked folders
		final IPath loc = c.getLocation();

		m.beginTask("", 101);  //$NON-NLS-1$
		m.subTask(CoreText.RepositoryFinder_finding);
		try {
			if (loc != null) {
				final File fsLoc = loc.toFile();
				assert fsLoc.isAbsolute();

				if (c instanceof IProject)
					findInDirectoryAndParents(c, fsLoc);
				else
					findInDirectory(c, fsLoc);
				m.worked(1);

				final IResource[] children = c.members();
				if (children != null && children.length > 0) {
					final int scale = 100 / children.length;
					for (int k = 0; k < children.length; k++) {
						final IResource o = children[k];
						if (o instanceof IContainer
								&& !o.getName().equals(Constants.DOT_GIT)) {
							find(new SubProgressMonitor(m, scale),
									(IContainer) o, searchLinkedFolders);
						} else {
							m.worked(scale);
						}
					}
				}
			}
		} finally {
			m.done();
		}
	}

