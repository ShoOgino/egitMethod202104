	private void find(final IProgressMonitor m, final IContainer c,
			boolean searchLinkedFolders)
				throws CoreException {
		if (!searchLinkedFolders && c.isLinked()) {
			return; // Ignore linked folders
		}
		final IPath loc = c.getLocation();
		if (loc == null) {
			return; // Either gone, or provided by an EFS
		}
		SubMonitor progress = SubMonitor.convert(m, 101);
		progress.subTask(CoreText.RepositoryFinder_finding);

		final File fsLoc = loc.toFile();
		assert fsLoc.isAbsolute();

		if (c instanceof IProject)
			findInDirectoryAndParents(c, fsLoc);
		else
			findInDirectory(c, fsLoc);
		progress.worked(1);

		if (findInChildren) {
			final IResource[] children = c.members();
			if (children != null && children.length > 0) {
				progress.setWorkRemaining(children.length);
				for (IResource o : children) {
					if (o instanceof IContainer
							&& !o.getName().equals(Constants.DOT_GIT)) {
						find(progress.newChild(1), (IContainer) o,
								searchLinkedFolders);
					} else {
						progress.worked(1);
					}
				}
			}
		}
	}

