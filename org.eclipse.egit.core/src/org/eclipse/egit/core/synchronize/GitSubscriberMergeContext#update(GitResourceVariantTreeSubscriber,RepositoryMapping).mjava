	private void update(GitResourceVariantTreeSubscriber subscriber,
			RepositoryMapping which) {
		for (GitSynchronizeData gsd : gsds) {
			if (which.getRepository().equals(gsd.getRepository())) {
				try {
					gsd.updateRevs();
				} catch (IOException e) {
					Activator.error(
							CoreText.GitSubscriberMergeContext_FailedUpdateRevs,
							e);

					return;
				}

				subscriber.reset(this.gsds);

				ResourceTraversal[] traversals = getScopeManager().getScope()
						.getTraversals();
				try {
					subscriber.refresh(traversals, new NullProgressMonitor());
				} catch (CoreException e) {
					Activator
							.error(CoreText.GitSubscriberMergeContext_FailedRefreshSyncView,
									e);
				}

				return;
			}
		}
	}

