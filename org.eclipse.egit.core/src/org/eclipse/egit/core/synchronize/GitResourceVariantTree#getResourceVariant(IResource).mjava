	public IResourceVariant getResourceVariant(final IResource resource)
			throws TeamException {
		if (resource == null)
			return null;

		GitSynchronizeData gsd = gsds.getData(resource.getProject());
		if (gsd == null)
			return null;

		Repository repo = gsd.getRepository();
		String path = getPath(resource, repo);
		RevCommit revCommit = getRevCommit(gsd);
		if (revCommit == null)
			return null;

		if (path.length() == 0)
			return handleRepositoryRoot(resource, repo, revCommit);

		TreeWalk tw = initializeTreeWalk(repo, path);

		try {
			tw.addTree(revCommit.getTree());
			if (resource.getType() == IResource.FILE) {
				tw.setRecursive(true);
				if (tw.next())
					return new GitBlobResourceVariant(repo, revCommit, path);
			} else
				return new GitFolderResourceVariant(repo, revCommit, path);
		} catch (IOException e) {
			throw new TeamException(
					NLS.bind(
							CoreText.GitResourceVariantTree_couldNotFindResourceVariant,
							resource), e);
		}

		return null;
	}

