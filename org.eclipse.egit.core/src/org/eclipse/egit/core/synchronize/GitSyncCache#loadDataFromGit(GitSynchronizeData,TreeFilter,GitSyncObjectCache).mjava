	private static void loadDataFromGit(GitSynchronizeData gsd,
			TreeFilter filter, GitSyncObjectCache repoCache) {
		Repository repo = gsd.getRepository();

		try (TreeWalk tw = new TreeWalk(repo)) {
			if (filter != null)
				tw.setFilter(filter);
			// setup local tree
			FileTreeIterator fti = null;
			if (gsd.shouldIncludeLocal()) {
				fti = new FileTreeIterator(repo);
				tw.addTree(fti);
				if (filter != null)
					tw.setFilter(AndTreeFilter.create(filter,
							new NotIgnoredFilter(0)));
				else
					tw.setFilter(new NotIgnoredFilter(0));
			} else if (gsd.getSrcRevCommit() != null)
				tw.addTree(gsd.getSrcRevCommit().getTree());
			else
				tw.addTree(new EmptyTreeIterator());

			// setup base tree
			if (gsd.getCommonAncestorRev() != null)
				tw.addTree(gsd.getCommonAncestorRev().getTree());
			else
				tw.addTree(new EmptyTreeIterator());

			// setup remote tree
			if (gsd.getDstRevCommit() != null)
				tw.addTree(gsd.getDstRevCommit().getTree());
			else
				tw.addTree(new EmptyTreeIterator());

			DirCacheIterator dci = null;
			if (fti != null) {
				dci = new DirCacheIterator(DirCache.read(repo));
				tw.addTree(dci);
				fti.setDirCacheIterator(tw, 3);
			}
			List<ThreeWayDiffEntry> diffEntrys = ThreeWayDiffEntry.scan(tw);

			for (ThreeWayDiffEntry diffEntry : diffEntrys)
				repoCache.addMember(diffEntry);
		} catch (Exception e) {
			Activator.logError(e.getMessage(), e);
		}
	}

