	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		final GitFlowRepository gfRepo = GitFlowHandlerUtil.getRepository(event);

		FeatureRebaseOperation featureRebaseOperation = new FeatureRebaseOperation(gfRepo);
		JobUtil.scheduleUserWorkspaceJob(featureRebaseOperation,
				UIText.FeatureRebaseHandler_rebasingFeature,
				JobFamilies.GITFLOW_FAMILY);

		RebaseResult.Status status = featureRebaseOperation
				.getOperationResult().getStatus();
		if (RebaseResult.Status.FAILED.equals(status)) {
			return error(UIText.FeatureRebaseHandler_rebaseFailed);
		}
		if (!RebaseResult.Status.CONFLICTS.equals(status)) {
			return null;
		}
		MessageDialog.openInformation(HandlerUtil.getActiveShell(event),
				UIText.FeatureRebaseHandler_conflicts,
				UIText.FeatureRebaseHandler_resolveConflictsManually);
		try {
			PlatformUI.getWorkbench().getActiveWorkbenchWindow()
					.getActivePage().showView(INTERACTIVE_REBASE_VIEW_ID);
		} catch (PartInitException e) {
			return error(e.getMessage(), e);
		}

		return null;
	}

