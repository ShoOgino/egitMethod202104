	private DataBindingContext initDataBinding() {
		DataBindingContext context = new DataBindingContext();

		UpdateValueStrategy noModelToTarget = new UpdateValueStrategy(false, POLICY_ON_REQUEST);

		UpdateValueStrategy targetToModel = new UpdateValueStrategy();
		targetToModel.setBeforeSetValidator(new IValidator() {
			@Override
			public IStatus validate(Object value) {
				if (value == null || !isValidRefName(Constants.R_HEADS + value)) {
					return error(NLS.bind(InitDialog_invalidBranchName, value));
				}
				return Status.OK_STATUS;
			}
		});
		bind(context, noModelToTarget, targetToModel, DEVELOP_BRANCH_PROPERTY, developText);
		bind(context, noModelToTarget, targetToModel, MASTER_BRANCH_PROPERTY, masterText);

		UpdateValueStrategy prefixTargetToModel = new UpdateValueStrategy();
		prefixTargetToModel.setBeforeSetValidator(new IValidator() {
			@Override
			public IStatus validate(Object value) {
				if (value == null || !isValidRefName(Constants.R_HEADS + value + DUMMY_POSTFIX)) {
					return error(NLS.bind(InitDialog_invalidPrefix, value));
				}
				return Status.OK_STATUS;
			}
		});
		bind(context, noModelToTarget, prefixTargetToModel, FEATURE_BRANCH_PREFIX_PROPERTY, featureText);
		bind(context, noModelToTarget, prefixTargetToModel, RELEASE_BRANCH_PREFIX_PROPERTY, releaseText);
		bind(context, noModelToTarget, prefixTargetToModel, HOTFIX_BRANCH_PREFIX_PROPERTY, hotfixText);
		bind(context, noModelToTarget, prefixTargetToModel, VERSION_TAG_PROPERTY, versionTagText);

		context.updateTargets();

		return context;
	}

