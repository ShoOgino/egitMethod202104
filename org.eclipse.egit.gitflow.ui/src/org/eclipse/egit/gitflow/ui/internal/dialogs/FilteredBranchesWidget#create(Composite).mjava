	Control create(Composite parent) {
		Composite area = new Composite(parent, SWT.NONE);
		GridDataFactory.fillDefaults().grab(true, true).span(2, 1).applyTo(area);
		area.setLayout(new GridLayout(1, false));

		final FilteredTree tree = new FilteredTree(area, SWT.MULTI | SWT.H_SCROLL
						| SWT.V_SCROLL | SWT.BORDER | SWT.FULL_SELECTION,
				new TreeColumnPatternFilter(),
				true);
		tree.setQuickSelectionMode(true);
		branchesViewer = tree.getViewer();
		branchesViewer.getTree().setLinesVisible(false);
		branchesViewer.getTree().setHeaderVisible(true);

		comparator = new BranchComparator();
		branchesViewer.setComparator(comparator);

		DecoratedBranchLabelProvider nameLabelProvider = new DecoratedBranchLabelProvider(gfRepo.getRepository(), prefix);
		TreeColumn nameColumn = createColumn(UIText.BranchSelectionTree_NameColumn, branchesViewer, nameLabelProvider);

		TreeColumn idColumn = createColumn(UIText.BranchSelectionTree_IdColumn, branchesViewer, new ColumnLabelProvider() {

			@Override
			public String getText(Object element) {
				if (element instanceof Ref) {
					ObjectId objectId = ((Ref) element).getObjectId();
					if (objectId == null) {
						return ""; //$NON-NLS-1$
					}
					return Utils.getShortObjectId(objectId);
				}
				return super.getText(element);
			}});
		ColumnLabelProvider dateLabelProvider = new ColumnLabelProvider() {

			@Override
			public String getText(Object element) {
				if (element instanceof Ref) {
					String name = ((Ref) element).getName().substring(Constants.R_HEADS.length());
					RevCommit revCommit = gfRepo.findHead(name);
					if (revCommit == null) {
						return ""; //$NON-NLS-1$
					}
					return getDateFormatter().formatDate(revCommit.getCommitterIdent());
				}
				return super.getText(element);
			}};
		TreeColumn dateColumn = createColumn(UIText.FilteredBranchesWidget_lastModified, branchesViewer, dateLabelProvider);
		setSortedColumn(dateColumn, dateLabelProvider);

		TreeColumn msgColumn = createColumn(UIText.BranchSelectionTree_MessageColumn, branchesViewer, new ColumnLabelProvider() {

			@Override
			public String getText(Object element) {
				if (element instanceof Ref) {
					String name = ((Ref) element).getName().substring(Constants.R_HEADS.length());
					RevCommit revCommit = gfRepo.findHead(name);
					if (revCommit == null) {
						return ""; //$NON-NLS-1$
					}
					return revCommit.getShortMessage();
				}
				return super.getText(element);
			}});


		GridDataFactory.fillDefaults().grab(true, true).applyTo(branchesViewer.getControl());

		branchesViewer.setContentProvider(new BranchListContentProvider());
		branchesViewer.setInput(refs);

		// Layout tree for maximum width of message column
		TreeColumnLayout layout = new TreeColumnLayout();
		nameColumn.pack();
		layout.setColumnData(nameColumn, new ColumnWeightData(0, nameColumn.getWidth()));
		idColumn.pack();
		layout.setColumnData(idColumn, new ColumnWeightData(0, idColumn.getWidth()));
		dateColumn.pack();
		layout.setColumnData(dateColumn, new ColumnWeightData(0, dateColumn.getWidth()));
		layout.setColumnData(msgColumn, new ColumnWeightData(100));
		branchesViewer.getTree().getParent().setLayout(layout);

		branchesViewer.addFilter(createFilter());
		return area;
	}

