		/**
		 * Construct a content proposal adapter that can assist the user with
		 * choosing content for the field.
		 *
		 * @param control
		 *            the control for which the adapter is providing content
		 *            assist. May not be {@code null}.
		 * @param controlContentAdapter
		 *            the {@link IControlContentAdapter} used to obtain and
		 *            update the control's contents as proposals are accepted.
		 *            May not be {@code null}.
		 * @param proposalProvider
		 *            the {@link IContentProposalProvider}> used to obtain
		 *            content proposals for this control.
		 * @param keyStroke
		 *            the keystroke that will invoke the content proposal popup.
		 *            If this value is {@code null}, then proposals will be
		 *            activated automatically when any of the auto activation
		 *            characters are typed.
		 * @param autoActivationCharacters
		 *            characters that trigger auto-activation of content
		 *            proposal. If specified, these characters will trigger
		 *            auto-activation of the proposal popup, regardless of
		 *            whether an explicit invocation keyStroke was specified. If
		 *            this parameter is {@code null}, then only a specified
		 *            keyStroke will invoke content proposal. If this parameter
		 *            is {@code null} and the keyStroke parameter is
		 *            {@code null}, then all alphanumeric characters will
		 *            auto-activate content proposal.
		 */
		public ExplicitContentProposalAdapter(Control control,
				IControlContentAdapter controlContentAdapter,
				IContentProposalProvider proposalProvider,
				KeyStroke keyStroke, char[] autoActivationCharacters) {
			super(control, controlContentAdapter, proposalProvider, keyStroke,
					autoActivationCharacters);
		}

