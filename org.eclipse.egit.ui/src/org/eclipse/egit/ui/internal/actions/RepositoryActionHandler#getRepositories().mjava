	/**
	 * Get the currently selected repositories. All selected projects must map
	 * to a repository.
	 *
	 * @return repositories for selection, or an empty array
	 */
	public Repository[] getRepositories() {
		IProject[] selectedProjects = getProjectsForSelectedResources();
		if (selectedProjects.length > 0)
			return getRepositoriesFor(selectedProjects);
		IStructuredSelection selection = getSelection();
		if (!selection.isEmpty()) {
			Set<Repository> repos = new LinkedHashSet<Repository>();
			for (Object o : selection.toArray()) {
				if (o instanceof Repository) {
					repos.add((Repository) o);
				} else if (o instanceof PlatformObject) {
					Repository repo = CommonUtils.getAdapter(((PlatformObject) o), Repository.class);
					if (repo != null) {
						repos.add(repo);
					} else {
						// no repository found for one of the objects!
						return new Repository[0];
					}
				}
			}
			return repos.toArray(new Repository[repos.size()]);
		}
		return new Repository[0];
	}

