	private void createDynamicMenu(Menu menu, final Repository[] repositories) {

		boolean showCreateBranchItem = true;
		if (!isMultipleSelection(repositories)) {
			Repository repository = repositories[0];
			createNewBranchMenuItem(menu, repository);
		} else if (canBulkCreateNewBranch(repositories)) {
			createBulkNewBranchMenuItem(menu, repositories);
		} else {
			showCreateBranchItem = false;
		}
		if (showCreateBranchItem
				&& Arrays.stream(repositories).anyMatch(this::hasBranches)) {
			createSeparator(menu);
		}

		int itemCount = createMostActiveBranchesMenuItems(menu, repositories);

		if (!isMultipleSelection(repositories)) {
			createSeparator(menu);
			createSwitchToCommitItem(menu, repositories[0]);
			if (itemCount > 0) {
				createOtherMenuItem(menu, repositories[0]);
			}
		}

		if (itemCount == 0 && isMultipleSelection(repositories)) {
			// If the menu would be empty, add a disabled menuItem to inform the
			// user that no common branches among the selection were found
			createDisabledMenu(menu, UIText.SwitchToMenu_NoCommonBranchesFound);
		}
	}

