	/** @see org.eclipse.core.commands.IHandler#execute(org.eclipse.core.commands.ExecutionEvent) */
	@Override
	public Object execute(final ExecutionEvent event) throws ExecutionException {
		IStructuredSelection selection = getSelection(event);
		if (selection.size() != 1) {
			return null;
		}
		Object element = selection.getFirstElement();
		IResource resource = Adapters.adapt(element, IResource.class);
		if (resource instanceof IFile) {
			RepositoryMapping mapping = RepositoryMapping.getMapping(resource);
			if (mapping != null) {
				String repoRelativePath = mapping.getRepoRelativePath(resource);
				Shell shell = HandlerUtil.getActiveShell(event);
				IWorkbenchPage page = HandlerUtil.getActiveSite(event)
						.getPage();
				JobUtil.scheduleUserJob(
						new BlameOperation(mapping.getRepository(),
								(IFile) resource, repoRelativePath, null, shell,
								page),
						UIText.ShowBlameHandler_JobName, JobFamilies.BLAME);
			}
		} else if (element instanceof CommitFileRevision) {
			Shell shell = HandlerUtil.getActiveShell(event);
			IWorkbenchPage page = HandlerUtil.getActiveSite(event).getPage();
			JobUtil.scheduleUserJob(
					new BlameOperation((CommitFileRevision) element, shell,
							page),
					UIText.ShowBlameHandler_JobName, JobFamilies.BLAME);
		}
		return null;
	}

