	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		IProject[] selectedProjects = getProjectsForSelectedResources();
		List<IProject> projects = new ArrayList<IProject>(selectedProjects.length);
		for (IProject project : selectedProjects) {
			if (project.isOpen() && ResourceUtil.isSharedWithGit(project)) {
				projects.add(project);
			}
		}
		if (projects.isEmpty()) {
			return null;
		}
		JobUtil.scheduleUserJob(new DisconnectProviderOperation(projects),
				UIText.Disconnect_disconnect,
				JobFamilies.DISCONNECT, new JobChangeAdapter() {
					@Override
					public void done(IJobChangeEvent actEvent) {
						GitLightweightDecorator.refresh();
					}
				});
		return null;
	}

