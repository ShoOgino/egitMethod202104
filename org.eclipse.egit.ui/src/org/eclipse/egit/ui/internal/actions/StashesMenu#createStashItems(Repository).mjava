	private static Collection<IContributionItem> createStashItems(
			Repository repository) {
		if (repository == null)
			return Collections.singleton(createNoStashedChangesItem());

		try {
			Collection<RevCommit> stashCommits = Git.wrap(repository)
					.stashList().call();

			if (stashCommits.isEmpty())
				return Collections.singleton(createNoStashedChangesItem());

			List<IContributionItem> items = new ArrayList<IContributionItem>(
					stashCommits.size());

			int index = 0;
			for (final RevCommit stashCommit : stashCommits)
				items.add(createStashItem(repository, stashCommit, index++));

			return items;
		} catch (GitAPIException e) {
			String repoName = repository.getWorkTree().getName();
			String message = MessageFormat.format(
					UIText.StashesMenu_StashListError, repoName);
			Activator.logError(message, e);
			return Collections.singleton(createNoStashedChangesItem());
		}
	}

