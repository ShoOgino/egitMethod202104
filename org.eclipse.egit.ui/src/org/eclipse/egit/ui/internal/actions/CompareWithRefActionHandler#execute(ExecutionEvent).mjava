	public Object execute(ExecutionEvent event) throws ExecutionException {
		final Repository repo = getRepository(true, event);
		// assert all resources map to the same repository
		if (repo == null)
			return null;
		final IResource[] resources = getSelectedResources(event);

		CompareTargetSelectionDialog dlg = new CompareTargetSelectionDialog(
				getShell(event), repo, resources.length == 1 ? resources[0]
						.getFullPath().lastSegment() : null);
		if (dlg.open() == Window.OK) {

			if (resources.length == 1 && resources[0] instanceof IFile) {
				final IFile baseFile = (IFile) resources[0];

				final ITypedElement base = SaveableCompareEditorInput
						.createFileElement(baseFile);

				final ITypedElement next;
				ITypedElement ancestor = null;
				try {
					RepositoryMapping mapping = RepositoryMapping
							.getMapping(resources[0]);
					next = getElementForRef(mapping.getRepository(), mapping
							.getRepoRelativePath(baseFile), dlg.getRefName());
					ancestor = CompareUtils.getFileRevisionTypedElementForCommonAncestor(
							mapping.getRepoRelativePath(baseFile), repo.resolve(Constants.HEAD),
							repo.resolve(dlg.getRefName()), repo);
				} catch (IOException e) {
					Activator.handleError(
							UIText.CompareWithIndexAction_errorOnAddToIndex, e,
							true);
					return null;
				}
				final GitCompareFileRevisionEditorInput in = new GitCompareFileRevisionEditorInput(
						base, next, ancestor, null);
				in.getCompareConfiguration().setRightLabel(dlg.getRefName());
				CompareUI.openCompareEditor(in);
			} else {
				CompareTreeView view;
				try {
					view = (CompareTreeView) PlatformUI.getWorkbench()
							.getActiveWorkbenchWindow().getActivePage()
							.showView(CompareTreeView.ID);
					view.setInput(resources, dlg.getRefName());
				} catch (PartInitException e) {
					Activator.handleError(e.getMessage(), e, true);
				}
			}
		}
		return null;
	}

