	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		// capture selection from active part as long as we have context
		mySelection = getSelection(event);
		try {
			IWorkbenchPart part = getPart(event);
			DiscardChangesOperation operation = createOperation(part, event);
			if (operation == null) {
				return null;
			}
			Map<Repository, Collection<String>> paths = operation
					.getPathsPerRepository();
			if (haveChanges(paths)) {
				String question = UIText.DiscardChangesAction_confirmActionMessage;
				String launch = LaunchFinder
						.getRunningLaunchConfiguration(paths.keySet(), null);
				if (launch != null) {
					question = MessageFormat.format(question,
							"\n\n" + MessageFormat.format( //$NON-NLS-1$
									UIText.LaunchFinder_RunningLaunchMessage,
									launch));
				} else {
					question = MessageFormat.format(question, ""); //$NON-NLS-1$
				}
				if (!openConfirmationDialog(event, question)) {
					return null;
				}
			} else if (LaunchFinder.shouldCancelBecauseOfRunningLaunches(
					paths.keySet(), null)) {
				return null;
			}
			JobUtil.scheduleUserWorkspaceJob(operation,
					UIText.DiscardChangesAction_discardChanges,
					JobFamilies.DISCARD_CHANGES);
			return null;
		} finally {
			// cleanup mySelection to avoid side effects later after execution
			mySelection = null;
		}
	}

