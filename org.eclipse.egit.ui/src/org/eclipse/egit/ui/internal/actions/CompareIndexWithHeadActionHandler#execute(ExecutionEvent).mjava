	public Object execute(ExecutionEvent event) throws ExecutionException {
		final Repository repository = getRepository(true, event);
		// assert all resources map to the same repository
		if (repository == null)
			return null;
		final IPath[] locations = getSelectedLocations(event);
		final IPath baseLocation = locations[0];
		final String gitPath = RepositoryMapping.getMapping(baseLocation)
				.getRepoRelativePath(baseLocation);
		ITypedElement base;
		try {
			base = CompareUtils.getIndexTypedElement(repository, gitPath);
		} catch (IOException e) {
			Activator.handleError(e.getMessage(), e, true);
			return null;
		}

		ITypedElement next = CompareUtils.getHeadTypedElement(repository, gitPath);
		if (next == null)
			return null;

		final GitCompareFileRevisionEditorInput in = new GitCompareFileRevisionEditorInput(
				base, next, null);

		IWorkbenchPage workBenchPage = HandlerUtil.getActiveWorkbenchWindowChecked(event).getActivePage();
		CompareUtils.openInCompare(workBenchPage, in);

		return null;
	}

