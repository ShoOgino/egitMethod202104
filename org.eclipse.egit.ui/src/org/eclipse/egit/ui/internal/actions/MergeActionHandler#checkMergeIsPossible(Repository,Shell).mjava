	/**
	 * Checks if merge is possible:
	 * <ul>
	 * <li>HEAD must point to a branch</li>
	 * <li>Repository State must be SAFE</li>
	 * </ul>
	 * Shows an error dialog if a merge is not possible.
	 *
	 * @param repository
	 *            the repository used for the merge
	 * @param shell
	 *            used to show a dialog in the error case
	 * @return true if a merge is possible on the current HEAD
	 */
	public static boolean checkMergeIsPossible(Repository repository, Shell shell) {
		String message = null;
		try {
			Ref head = repository.exactRef(Constants.HEAD);
			if (head == null || !head.isSymbolic())
				message = UIText.MergeAction_HeadIsNoBranch;
			else if (!repository.getRepositoryState().equals(
					RepositoryState.SAFE))
				message = NLS.bind(UIText.MergeAction_WrongRepositoryState,
						repository.getRepositoryState());
		} catch (IOException e) {
			Activator.logError(e.getMessage(), e);
			message = e.getMessage();
		}

		if (message != null)
			MessageDialog.openError(shell, UIText.MergeAction_CannotMerge, message);
		return (message == null);
	}

