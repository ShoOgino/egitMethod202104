	private void createActionCompositeButtons(Composite parent) {
		Composite buttonComposite = new Composite(parent, SWT.NONE);
		GridLayout layout = new GridLayout();
		layout.numColumns = 3;
		buttonComposite.setLayout(layout);
		buttonComposite.setLayoutData(
				new GridData(SWT.CENTER, SWT.BEGINNING, false, false));

		Button setHeadOnly = new Button(buttonComposite, SWT.PUSH);
		setHeadOnly.setText(
				UIText.GitHistoryPage_filterRefDialog_button_headOnly);
		setHeadOnly.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				helper.selectOnlyHEAD(filters);
				configsTable.refresh();
			}
		});
		setButtonLayoutData(setHeadOnly);

		Button setCurrentBranchOnly = new Button(buttonComposite, SWT.PUSH);
		setCurrentBranchOnly.setText(
				UIText.GitHistoryPage_filterRefDialog_button_currentBranchOnly);
		setCurrentBranchOnly.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				helper.selectOnlyCurrentBranch(filters);
				configsTable.refresh();
			}
		});
		setButtonLayoutData(setCurrentBranchOnly);

		Button setAllBranchesAndTags = new Button(buttonComposite, SWT.PUSH);
		setAllBranchesAndTags.setText(
				UIText.GitHistoryPage_filterRefDialog_button_allBranchesAndTags);
		setAllBranchesAndTags.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				helper.selectExactlyAllBranchesAndTags(filters);
				configsTable.refresh();
			}
		});
		setButtonLayoutData(setAllBranchesAndTags);
	}

