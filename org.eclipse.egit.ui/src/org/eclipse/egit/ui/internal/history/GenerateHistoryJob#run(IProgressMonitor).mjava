	@Override
	protected IStatus run(final IProgressMonitor monitor) {
		IStatus status = Status.OK_STATUS;
		int maxCommits = Activator.getDefault().getPreferenceStore()
					.getInt(UIPreferences.HISTORY_MAX_NUM_COMMITS);
		boolean incomplete = false;
		boolean commitNotFound = false;
		try {
			if (trace)
				GitTraceLocation.getTrace().traceEntry(
						GitTraceLocation.HISTORYVIEW.getLocation());
			final boolean loadIncrementally = !Activator.getDefault()
					.getPreferenceStore()
					.getBoolean(UIPreferences.RESOURCEHISTORY_SHOW_FINDTOOLBAR);
			int initialSize = loadedCommits.size();
			try {
				for (int oldsz = initialSize;;) {
					if (trace)
						GitTraceLocation.getTrace().trace(
								GitTraceLocation.HISTORYVIEW.getLocation(),
								"Filling commit list"); //$NON-NLS-1$
					if (commitToLoad != null) {
						loadedCommits.fillTo(commitToLoad, maxCommits);
						commitToShow = commitToLoad;
						commitToLoad = null;
						boolean commitFound = false;
						for (RevCommit commit : loadedCommits) {
							if (commit.getId().equals(commitToShow.getId())) {
								commitFound = true;
								break;
							}
						}
						commitNotFound = !commitFound;
					} else {
						loadedCommits.fillTo(oldsz + BATCH_SIZE - 1);
						if (oldsz == loadedCommits.size()) {
							forcedRedrawsAfterListIsCompleted++;
							break;
						}
					}
					if (monitor.isCanceled())
						return Status.CANCEL_STATUS;
					if (loadedCommits.size() > itemToLoad + (BATCH_SIZE / 2) + 1 && loadIncrementally)
						break;
					if (maxCommits > 0 && loadedCommits.size() > maxCommits) {
						incomplete = true;
						break;
					}
					oldsz = loadedCommits.size();
					monitor.setTaskName(MessageFormat.format(
							UIText.GenerateHistoryJob_taskFoundCommits,
							Integer.valueOf(oldsz)));
				}
			} catch (IOException e) {
				status = new Status(IStatus.ERROR, Activator.getPluginId(),
						UIText.GenerateHistoryJob_errorComputingHistory, e);
			}
			if (trace)
				GitTraceLocation.getTrace().trace(
						GitTraceLocation.HISTORYVIEW.getLocation(),
						"Loaded " + loadedCommits.size() + " commits"); //$NON-NLS-1$ //$NON-NLS-2$
			if (commitNotFound && !loadedCommits.isEmpty()) {
				if (forcedRedrawsAfterListIsCompleted < 1
						&& !loadIncrementally) {
					page.setWarningTextInUIThread(this);
				}
				if (initialSize != loadedCommits.size()) {
					updateUI(incomplete);
				}
			}
			else
				updateUI(incomplete);
		} finally {
			monitor.done();
			if (trace)
				GitTraceLocation.getTrace().traceExit(
						GitTraceLocation.HISTORYVIEW.getLocation());
		}
		return status;
	}

