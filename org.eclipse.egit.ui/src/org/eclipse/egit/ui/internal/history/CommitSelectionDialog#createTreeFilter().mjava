	private TreeFilter createTreeFilter() {
		if (filterResources == null)
			return TreeFilter.ALL;

		List<TreeFilter> filters = new ArrayList<>();
		for (IResource resource : filterResources) {
			RepositoryMapping mapping = RepositoryMapping.getMapping(resource);
			if (mapping != null) {
				DiffConfig diffConfig = mapping.getRepository().getConfig().get(DiffConfig.KEY);
				String path = mapping.getRepoRelativePath(resource);
				if (path != null && !path.isEmpty()) {
					if (resource.getType() == IResource.FILE)
						filters.add(FollowFilter.create(path, diffConfig));
					else
						filters.add(AndTreeFilter.create(
								PathFilter.create(path), TreeFilter.ANY_DIFF));
				}
			}
		}

		if (filters.isEmpty())
			return TreeFilter.ALL;
		else if (filters.size() == 1)
			return filters.get(0);
		else
			return OrTreeFilter.create(filters);
	}

