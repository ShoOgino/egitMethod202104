	/**
	 * @param event
	 * @return ID of selected commit
	 * @throws ExecutionException
	 *             if no or multiple commits were found
	 */
	protected ObjectId getSelectedCommitId(ExecutionEvent event)
			throws ExecutionException {
		IStructuredSelection selection = getSelection(event);
		if (selection.size() != 1) {
			throw new ExecutionException(
					UIText.AbstractHistoryCommandHandler_ActionRequiresOneSelectedCommitMessage);
		}
		RevCommit commit = Adapters.adapt(selection.getFirstElement(),
				RevCommit.class);
		if (commit == null) {
			throw new ExecutionException(
					UIText.AbstractHistoryCommandHandler_ActionRequiresOneSelectedCommitMessage);
		}
		return commit.getId();
	}

