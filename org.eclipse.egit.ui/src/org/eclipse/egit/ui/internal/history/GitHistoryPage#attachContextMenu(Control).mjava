	private void attachContextMenu(final Control c) {
		c.setMenu(popupMgr.createContextMenu(c));

		if (checkoutItem == null) {
			CommandContributionItemParameter p = new CommandContributionItemParameter(
					getSite(), SharedCommands.CHECKOUT,
					SharedCommands.CHECKOUT, CommandContributionItem.STYLE_PUSH);
			checkoutItem = new CommandContributionItem(p);
		}

		if (c == graph.getControl()) {

			c.addMenuDetectListener(new MenuDetectListener() {

				public void menuDetected(MenuDetectEvent e) {
					popupMgr.remove(new ActionContributionItem(createPatchAction));
					popupMgr.remove(new ActionContributionItem(compareAction));
					popupMgr.remove(new ActionContributionItem(
							compareVersionsAction));
					popupMgr.remove(new ActionContributionItem(
							viewVersionsAction));
					popupMgr.remove(checkoutItem);
					int size = ((IStructuredSelection) revObjectSelectionProvider
							.getSelection()).size();
					if (size == 1) {
						popupMgr.add(checkoutItem);
						popupMgr.add(new Separator());
						popupMgr.add(createPatchAction);
						createPatchAction.setEnabled(createPatchAction.isEnabled());
					}
					if (IFile.class.isAssignableFrom(getInput().getClass())) {
						popupMgr.add(new Separator());
						if (size == 1) {
							popupMgr.add(compareAction);
						} else if (size == 2) {
							popupMgr.add(compareVersionsAction);
						}
						if (size >= 1)
							popupMgr.add(viewVersionsAction);
					}
				}
			});
		} else {
			c.addMenuDetectListener(new MenuDetectListener() {

				public void menuDetected(MenuDetectEvent e) {
					popupMgr.remove(new ActionContributionItem(createPatchAction));
					popupMgr.remove(new ActionContributionItem(compareAction));
					popupMgr.remove(new ActionContributionItem(
							compareVersionsAction));
					popupMgr.remove(new ActionContributionItem(
							viewVersionsAction));
				}
			});
		}
	}

