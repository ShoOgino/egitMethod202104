	void setInput(final RevFlag hFlag, final SWTCommitList list,
			final SWTCommit[] asArray, HistoryPageInput input, boolean keepPosition) {
		Table t = table.getTable();
		String topCommitName = null;
		if (keepPosition) {
			int i = t.getTopIndex();
			if (i >= 0 && i < t.getItemCount()
					&& i < allCommitsLength
					&& allCommitsArray != null) {
				// We have a virtual table, so item.getData() may return null...
				topCommitName = allCommitsArray[i].getId().name();
			}
		}
		setHistoryPageInput(input);
		final SWTCommitList oldList = allCommits;
		highlight = hFlag;
		allCommits = list;
		int newAllCommitsLength = asArray == null ? 0 : asArray.length;
		int topIndex = -1;
		if (newAllCommitsLength > 0) {
			if (oldList != list || allCommitsLength < newAllCommitsLength) {
				topIndex = initCommitsMap(asArray, topCommitName);
			} else {
				topIndex = findCommit(asArray, topCommitName);
			}
		}
		allCommitsArray = asArray;
		allCommitsLength = newAllCommitsLength;
		table.setInput(asArray);
		if (newAllCommitsLength > 0) {
			if (commitToShow != null) {
				selectCommit(commitToShow);
			}
			if (keepPosition && topIndex >= 0) {
				t.setTopIndex(topIndex);
			}
		} else {
			t.deselectAll();
			// Fire an event
			table.setSelection(table.getSelection());
		}
	}

