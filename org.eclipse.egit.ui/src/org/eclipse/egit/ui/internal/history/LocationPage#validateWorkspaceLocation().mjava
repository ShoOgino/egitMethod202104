	/**
	 * The following conditions must hold for the workspace location to be valid:
	 * - a parent must be selected in the workspace tree view
	 * - the resource name must be valid
	 *
	 * @return if the location is valid
	 */
	private boolean validateWorkspaceLocation() {
		//make sure that the field actually has a filename in it - making
		//sure that the user has had a chance to browse the workspace first
		if (wsPathText.getText().equals("")){ //$NON-NLS-1$
			if (wsRadio.getSelection() && wsBrowsed)
				setErrorMessage(UIText.GitCreatePatchWizard_WorkspacePatchEnterValidFileName);
			else
				setErrorMessage(UIText.GitCreatePatchWizard_WorkspacePatchSelectByBrowsing);
			return false;
		}

		//Make sure that all the segments but the last one (i.e. project + all
		//folders) exist - file doesn't have to exist. It may have happened that
		//some folder refactoring has been done since this path was last saved.
		//
		// The path will always be in format project/{folders}*/file - this
		// is controlled by the workspace location dialog and by
		// validatePath method when path has been entered manually.

		IPath pathToWorkspaceFile = new Path(wsPathText.getText());
		IStatus status = ResourcesPlugin.getWorkspace().validatePath(wsPathText.getText(), IResource.FILE);
		if (status.isOK()) {
			//Trim file name from path
			IPath containerPath = pathToWorkspaceFile.removeLastSegments(1);
			IResource container = ResourcesPlugin.getWorkspace().getRoot().findMember(containerPath);
			if (container == null) {
				if (wsRadio.getSelection())
					setErrorMessage(UIText.GitCreatePatchWizard_WorkspacePatchSelectByBrowsing);
				return false;
			} else if (!container.isAccessible()) {
				if (wsRadio.getSelection())
					setErrorMessage(UIText.GitCreatePatchWizard_WorkspacePatchProjectClosed);
				return false;
			} else if (ResourcesPlugin.getWorkspace().getRoot().getFolder(
					pathToWorkspaceFile).exists()) {
				setErrorMessage(UIText.GitCreatePatchWizard_WorkspacePatchFolderExists);
				return false;
			}
		} else {
			setErrorMessage(status.getMessage());
			return false;
		}
		return true;
	}

