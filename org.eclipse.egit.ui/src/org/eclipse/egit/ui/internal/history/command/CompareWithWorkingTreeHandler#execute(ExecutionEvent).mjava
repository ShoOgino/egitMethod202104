	public Object execute(ExecutionEvent event) throws ExecutionException {
		IStructuredSelection selection = getSelection(getPage());
		if (selection.isEmpty())
			return null;

		// Even if there's more than one element, only consider the first
		RevCommit commit = (RevCommit) selection.getFirstElement();
		Object input = getPage().getInputInternal().getSingleFile();
		Repository repository = getRepository(event);

		try {
			IWorkbenchPage workBenchPage = HandlerUtil
					.getActiveWorkbenchWindowChecked(event).getActivePage();
			if (input instanceof IFile) {
				IFile file = (IFile) input;
				if (CompareUtils.canDirectlyOpenInCompare(file))
					CompareUtils.compareWorkspaceWithRef(repository, file,
							commit.getId().getName(), workBenchPage);
				else
					GitModelSynchronize.synchronizeModelWithWorkspace(file,
							repository, commit.getName());
			} else
				CompareUtils.compareLocalWithRef(repository, (File) input,
						commit.getId().getName(), workBenchPage);
		} catch (IOException e) {
			Activator.handleError(
					UIText.CompareWithRefAction_errorOnSynchronize, e, true);
		}
		return null;
	}

