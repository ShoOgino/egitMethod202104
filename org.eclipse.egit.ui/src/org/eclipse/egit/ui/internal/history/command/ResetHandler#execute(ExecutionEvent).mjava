	public Object execute(ExecutionEvent event) throws ExecutionException {
		final Repository repo = getRepository(event);
		final RevCommit commit = (RevCommit) getSelection(event)
				.getFirstElement();

		String type = event.getParameter(HistoryViewCommands.RESET_MODE);
		final ResetType resetType;

		if (type.equals("Hard")) { //$NON-NLS-1$
			resetType = ResetType.HARD;
		} else if (type.equals("Mixed")) { //$NON-NLS-1$
			resetType = ResetType.MIXED;
		} else if (type.equals("Soft")) { //$NON-NLS-1$
			resetType = ResetType.SOFT;
		} else {
			throw new ExecutionException("Could not determine the reset type"); //$NON-NLS-1$ TODO
		}

		String jobName = "Reset"; //$NON-NLS-1$
		switch (resetType) {
		case HARD:
			if (!MessageDialog.openQuestion(HandlerUtil
					.getActiveShellChecked(event),
					UIText.ResetTargetSelectionDialog_ResetQuestion,
					UIText.ResetTargetSelectionDialog_ResetConfirmQuestion))
				return null;

			jobName = UIText.HardResetToRevisionAction_hardReset;
			break;
		case SOFT:
			jobName = UIText.SoftResetToRevisionAction_softReset;
			break;
		case MIXED:
			jobName = UIText.MixedResetToRevisionAction_mixedReset;
			break;
		}

		Job job = new Job(jobName) {
			@Override
			protected IStatus run(IProgressMonitor monitor) {
				try {
					new ResetOperation(repo, commit.getName(), resetType)
							.execute(null);
				} catch (CoreException e) {
					return e.getStatus();
				}
				return Status.OK_STATUS;
			}
		};
		job.schedule();
		return null;
	}

