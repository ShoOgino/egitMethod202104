	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		GitHistoryPage page = getPage(event);
		if (page == null) {
			return null;
		}
		Object input = page.getInputInternal().getSingleItem();
		if (input == null) {
			return null;
		}
		Repository repo = getRepository(event);
		if (repo == null) {
			return null;
		}
		String path = getPath(repo, page);
		if (path == null) {
			return null;
		}
		RevCommit commit = getSelectedCommit(event);
		if (commit == null) {
			return null;
		}
		try {
			IFileRevision revision = CompareUtils.getFileRevision(path, commit,
					repo, null);
			if (revision instanceof CommitFileRevision) {
				BlameOperation op = new BlameOperation(
						(CommitFileRevision) revision,
						HandlerUtil.getActiveShell(event),
						page.getSite().getPage());
				JobUtil.scheduleUserJob(op, UIText.ShowBlameHandler_JobName,
						JobFamilies.BLAME);
			}
		} catch (IOException e) {
			Activator.showError(UIText.ShowBlameHandler_errorMessage, e);
		}
		return null;
	}

