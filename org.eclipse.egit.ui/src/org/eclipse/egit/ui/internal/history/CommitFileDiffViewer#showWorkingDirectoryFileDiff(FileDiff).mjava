	void showWorkingDirectoryFileDiff(final FileDiff d) {
		final String p = d.getNewPath();
		final RevCommit commit = d.getCommit();

		if (commit == null) {
			Activator.showError(UIText.GitHistoryPage_openFailed, null);
			return;
		}

		IWorkbenchPage activePage = site.getWorkbenchWindow().getActivePage();
		IFile file = ResourceUtil.getFileForLocation(getRepository(), p);
		try {
			if (file != null) {
				if (!CompareUtils.canDirectlyOpenInCompare(file))
					GitModelSynchronize.synchronizeModelWithWorkspace(file,
							getRepository(), commit.getName());
				else
					CompareUtils.compareWorkspaceWithRef(getRepository(), file,
							commit.getName(), null);
			} else {
				IPath path = new Path(getRepository().getWorkTree()
						.getAbsolutePath()).append(p);
				File ioFile = path.toFile();
				if (ioFile.exists())
					CompareUtils.compareLocalWithRef(getRepository(), ioFile,
							commit.getName(), activePage);
			}
		} catch (IOException e) {
			Activator.logError(UIText.GitHistoryPage_openFailed, e);
			Activator.showError(UIText.GitHistoryPage_openFailed, null);
		}
	}

