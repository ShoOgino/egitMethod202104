	public Object execute(ExecutionEvent event) throws ExecutionException {
		PlotCommit commit = (PlotCommit) getSelection(getPage())
				.getFirstElement();
		Repository repo = getRepository(event);
		List<Ref> availableBranches = new ArrayList<Ref>();

		final BranchOperationUI op;

		try {
			Map<String, Ref> localBranches = repo.getRefDatabase().getRefs(
					Constants.R_HEADS);
			for (Ref branch : localBranches.values()) {
				if (branch.getLeaf().getObjectId().equals(commit.getId())) {
					availableBranches.add(branch);
				}
			}
		} catch (IOException e) {
			// ignore here
		}

		if (availableBranches.isEmpty())
			op = new BranchOperationUI(repo, commit.getId());
		else if (availableBranches.size() == 1)
			op = new BranchOperationUI(repo, availableBranches.get(0).getName());
		else {
			List<RefNode> nodes = new ArrayList<RefNode>();
			RepositoryNode repoNode = new RepositoryNode(null, repo);
			for (Ref ref : availableBranches) {
				nodes.add(new RefNode(repoNode, repo, ref));
			}
			BranchMessageDialog dlg = new BranchMessageDialog(HandlerUtil
					.getActiveShellChecked(event), nodes);
			if (dlg.open() == Window.OK) {
				op = new BranchOperationUI(repo, dlg.getSelectedNode()
						.getObject().getName());
			} else {
				op = null;
			}
		}

		if (op == null)
			return null;

		op.start();
		return null;
	}

