	void addDoneListenerToFormatJob() {
		formatJob.addJobChangeListener(new JobChangeAdapter() {

			public void done(IJobChangeEvent event) {
				if (!event.getResult().isOK())
					return;
				final StyledText text = getTextWidget();
				if (text == null || text.isDisposed())
					return;
				final FormatJob job = (FormatJob) event.getJob();
				text.getDisplay().asyncExec(new Runnable() {
					public void run() {
						if (text.isDisposed())
							return;

						setDocument(new Document(job.getFormatResult()
								.getCommitInfo()));

						// Combine the style ranges from the format job and the
						// style ranges for hyperlinks found by registered
						// hyperlink detectors.
						List<StyleRange> styleRangeList = new ArrayList<StyleRange>();
						for (StyleRange styleRange : job.getFormatResult()
								.getStyleRange())
							styleRangeList.add(styleRange);

						StyleRange[] hyperlinkDetectorStyleRanges = UIUtils
								.getHyperlinkDetectorStyleRanges(
										CommitMessageViewer.this,
										fHyperlinkDetectors);
						for (StyleRange styleRange : hyperlinkDetectorStyleRanges)
							styleRangeList.add(styleRange);

						StyleRange[] styleRanges = new StyleRange[styleRangeList
								.size()];
						styleRangeList.toArray(styleRanges);

						// Style ranges must be in order.
						Arrays.sort(styleRanges, new Comparator<StyleRange>() {
							public int compare(StyleRange o1, StyleRange o2) {
								if (o2.start > o1.start)
									return -1;
								if (o1.start > o2.start)
									return 1;
								return 0;
							}
						});

						text.setStyleRanges(styleRanges);
					}
				});
			}
		});
	}

