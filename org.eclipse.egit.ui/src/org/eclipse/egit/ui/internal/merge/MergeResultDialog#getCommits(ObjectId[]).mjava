	private RepositoryCommit[] getCommits(final ObjectId[] merges) {
		final List<RepositoryCommit> commits = new ArrayList<>();
		try (final RevWalk walk = new RevWalk(objectReader)) {
			walk.setRetainBody(true);
			for (ObjectId merge : merges)
				try {
					// Might be null after a merge onto an unborn branch
					if (merge != null) {
						commits.add(new RepositoryCommit(repository,
								walk.parseCommit(merge)));
					}
				} catch (IOException e) {
					Activator.logError(MessageFormat.format(
							UIText.MergeResultDialog_couldNotFindCommit,
							merge.name()), e);
				}
			return commits.toArray(new RepositoryCommit[0]);
		}
	}

