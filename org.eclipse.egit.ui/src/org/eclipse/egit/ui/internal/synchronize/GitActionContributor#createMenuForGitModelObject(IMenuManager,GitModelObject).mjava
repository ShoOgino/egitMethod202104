	private void createMenuForGitModelObject(IMenuManager menu,
			GitModelObject object) {
		if (SupportedContextActionsHelper.canCommit(object)) {
			menu.appendToGroup(GIT_ACTIONS, createItem(COMMIT_ACTION));
		}
		if (SupportedContextActionsHelper.canStage(object)) {
			// We know we have a model object for a working tree file here.
			IPath path = object.getLocation();
			if (path != null) {
				IResourceState state = ResourceStateFactory.getInstance()
						.get(path.toFile());
				if (state.hasUnstagedChanges()) {
					menu.appendToGroup(GIT_ACTIONS, createItem(ADD_TO_INDEX));
				}
				if (state.isStaged()) {
					menu.appendToGroup(GIT_ACTIONS,
							createItem(REMOVE_FROM_INDEX));
				}
				if (!state.isIgnored()) {
					menu.appendToGroup(GIT_ACTIONS, createItem(IGNORE_ACTION));
				}
			}
		}
		if (SupportedContextActionsHelper.canUseMergeTool(object)) {
			menu.appendToGroup(GIT_ACTIONS, createItem(MERGE_TOOL_ACTION));
		}
		if (canPush(object)) {
			menu.appendToGroup(GIT_ACTIONS, createItem(PUSH_ACTION));
		}
	}

