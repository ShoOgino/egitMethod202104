	/**
	 * Constructs model node that represents current status of Git cache.
	 *
	 * @param parent
	 *            parent object
	 * @param baseCommit
	 *            last {@link RevCommit} in repository
	 * @param pathFilter
	 *            list of paths that needs to be included, {@code null} when all
	 *            paths should be included
	 * @throws IOException
	 */
	public GitModelCache(GitModelObject parent, RevCommit baseCommit, TreeFilter pathFilter)
			throws IOException {
		this(parent, baseCommit, pathFilter, new FileModelFactory() {

			public GitModelBlob createFileModel(
					GitModelObjectContainer modelParent, RevCommit commit,
					ObjectId repoId, ObjectId cacheId, IPath location)
					throws IOException {
				return new GitModelCacheFile(modelParent, commit, repoId,
						cacheId, location);
			}

			public boolean isWorkingTree() {
				return false;
			}
		});

	}

