	/**
	 * @param parent
	 *            parent object
	 * @param repo
	 *            repository associated with this object
	 * @param cache
	 *            list of cached changes
	 */
	public GitModelWorkingTree(GitModelRepository parent, Repository repo,
			Map<String, Change> cache) {
		super(parent, repo, cache, new FileModelFactory() {
			@Override
			public GitModelBlob createFileModel(
					GitModelObjectContainer objParent, Repository nestedRepo,
					Change change, IPath path) {
				return new GitModelWorkingFile(objParent, nestedRepo, change,
						path);
			}

			@Override
			public boolean isWorkingTree() {
				return true;
			}
		});
	}

