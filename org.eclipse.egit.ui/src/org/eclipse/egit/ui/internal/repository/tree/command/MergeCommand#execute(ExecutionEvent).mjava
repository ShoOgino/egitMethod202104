	@Override
	public Object execute(final ExecutionEvent event) throws ExecutionException {
		RepositoryTreeNode node = getSelectedNodes(event).get(0);
		Repository repository = node.getRepository();

		if (repository == null
				|| !MergeActionHandler.checkMergeIsPossible(repository,
						getShell(event))
				|| LaunchFinder.shouldCancelBecauseOfRunningLaunches(repository,
						null)) {
			return null;
		}
		BasicConfigurationDialog.show(repository);

		String targetRef;
		if (node instanceof RefNode) {
			String refName = ((RefNode) node).getObject().getName();
			try {
				if (refName.equals(repository.getFullBranch()))
					targetRef = null;
				else
					targetRef = refName;
			} catch (IOException e) {
				targetRef = null;
			}
		} else if (node instanceof TagNode) {
			targetRef = ((TagNode) node).getObject().getName();
		} else {
			targetRef = null;
		}
		final String refName;
		final MergeOperation op;

		if (targetRef != null) {
			refName = targetRef;
			op = new MergeOperation(repository, refName);
		} else {
			MergeTargetSelectionDialog mergeTargetSelectionDialog = new MergeTargetSelectionDialog(
					getShell(event), repository);
			if (mergeTargetSelectionDialog.open() != IDialogConstants.OK_ID) {
				return null;
			}
			refName = mergeTargetSelectionDialog.getRefName();
			op = new MergeOperation(repository, refName);
			op.setSquash(mergeTargetSelectionDialog.isMergeSquash());
			op.setFastForwardMode(mergeTargetSelectionDialog
					.getFastForwardMode());
			op.setCommit(mergeTargetSelectionDialog.isCommit());
		}

		MergeActionHandler.doMerge(repository, op, refName);
		return null;
	}

