	private void addActionsToToolbar() {
		importAction = new Action(UIText.RepositoriesView_Import_Button) {

			@Override
			public void run() {
				WizardDialog dlg = new WizardDialog(getSite().getShell(),
						new GitCloneWizard());
				if (dlg.open() == Window.OK)
					scheduleRefresh();
			}
		};
		importAction.setToolTipText(UIText.RepositoriesView_Clone_Tooltip);

		importAction.setImageDescriptor(UIIcons.IMPORT);

		getViewSite().getActionBars().getToolBarManager().add(importAction);

		addAction = new Action(UIText.RepositoriesView_Add_Button) {

			@Override
			public void run() {
				RepositorySearchDialog sd = new RepositorySearchDialog(
						getSite().getShell(), getDirs());
				if (sd.open() == Window.OK) {
					Set<String> dirs = new HashSet<String>();
					dirs.addAll(getDirs());
					if (dirs.addAll(sd.getDirectories()))
						saveDirs(dirs);
					scheduleRefresh();
				}

			}
		};
		addAction.setToolTipText(UIText.RepositoriesView_AddRepository_Tooltip);

		addAction.setImageDescriptor(UIIcons.NEW_REPOSITORY);

		getViewSite().getActionBars().getToolBarManager().add(addAction);

		linkWithSelectionAction = new Action(
				UIText.RepositoriesView_LinkWithSelection_action,
				IAction.AS_CHECK_BOX) {

			@Override
			public void run() {
				IEclipsePreferences prefs = getPrefs();
				prefs.putBoolean(PREFS_SYNCED, isChecked());
				try {
					prefs.flush();
				} catch (BackingStoreException e) {
					// ignore here
				}
				if (isChecked()) {
					ISelectionService srv = (ISelectionService) getSite()
							.getService(ISelectionService.class);
					reactOnSelection(srv.getSelection());
				}

			}

		};

		linkWithSelectionAction
				.setToolTipText(UIText.RepositoriesView_LinkWithSelection_action);

		linkWithSelectionAction.setImageDescriptor(UIIcons.ELCL16_SYNCED);

		linkWithSelectionAction.setChecked(getPrefs().getBoolean(PREFS_SYNCED,
				false));

		getViewSite().getActionBars().getToolBarManager().add(
				linkWithSelectionAction);

		refreshAction = new Action(UIText.RepositoriesView_Refresh_Button) {

			@Override
			public void run() {
				scheduleRefresh();
			}
		};

		refreshAction.setImageDescriptor(UIIcons.ELCL16_REFRESH);

		getViewSite().getActionBars().getToolBarManager().add(refreshAction);

		IAction collapseAllAction = new Action(
				UIText.RepositoriesView_CollapseAllMenu) {

			@Override
			public void run() {
				tv.collapseAll();
			}

		};

		collapseAllAction.setImageDescriptor(UIIcons.COLLAPSEALL);

		getViewSite().getActionBars().getToolBarManager()
				.add(collapseAllAction);
	}

