	/**
	 * Opens the tree and marks the folder to which a project is pointing
	 *
	 * @param resource
	 *            TODO exceptions?
	 */
	@SuppressWarnings("unchecked")
	public void showResource(IResource resource) {
		IProject project = resource.getProject();
		RepositoryMapping mapping = RepositoryMapping.getMapping(project);
		if (mapping == null)
			return;

		if (addDir(mapping.getRepository().getDirectory())) {
			scheduleRefresh();
			try {
				scheduledJob.join();
			} catch (InterruptedException e) {
				// ignore here
			}
		}

		RepositoriesViewContentProvider cp = (RepositoriesViewContentProvider) tv
				.getContentProvider();
		RepositoryTreeNode currentNode = null;
		Object[] repos = cp.getElements(tv.getInput());
		for (Object repo : repos) {
			RepositoryTreeNode node = (RepositoryTreeNode) repo;
			// TODO equals implementation of Repository?
			if (mapping.getRepository().getDirectory().equals(
					((Repository) node.getObject()).getDirectory())) {
				for (Object child : cp.getChildren(node)) {
					RepositoryTreeNode childNode = (RepositoryTreeNode) child;
					if (childNode.getType() == RepositoryTreeNodeType.WORKINGDIR) {
						currentNode = childNode;
						break;
					}
				}
				break;
			}
		}

		IPath relPath = new Path(mapping.getRepoRelativePath(resource));

		for (String segment : relPath.segments()) {
			for (Object child : cp.getChildren(currentNode)) {
				RepositoryTreeNode<File> childNode = (RepositoryTreeNode<File>) child;
				if (childNode.getObject().getName().equals(segment)) {
					currentNode = childNode;
					break;
				}
			}
		}

		tv.setSelection(new StructuredSelection(currentNode), true);

	}

