	public Object execute(final ExecutionEvent event) throws ExecutionException {
		final List<RefNode> nodes = getSelectedNodes(event);
		final List<Ref> refs = new ArrayList<Ref>();
		for (RefNode refNode : nodes) {
			refs.add(refNode.getObject());
		}

		Shell shell = getShell(event);
		MessageDialog messageDialog = new BranchMessageDialog(shell, nodes);
		if (messageDialog.open() != Window.OK)
			return null;

		try {
			new ProgressMonitorDialog(shell).run(false, false,
					new IRunnableWithProgress() {
						public void run(IProgressMonitor monitor)
								throws InvocationTargetException,
								InterruptedException {
							try {
								for (RefNode refNode : nodes) {
									int result = deleteBranch(refNode,
											refNode.getObject());
									if (result == DeleteBranchOperation.REJECTED_CURRENT) {
										throw new CoreException(
												Activator
														.createErrorStatus(
																UIText.DeleteBranchCommand_CannotDeleteCheckedOutBranch,
																null));
									} else if (result == DeleteBranchOperation.REJECTED_UNMERGED) {
										throw new CoreException(
												Activator
														.createErrorStatus(
																UIText.DeleteBranchCommand_UnmergedData,
																null));
									}
								}
							} catch (CoreException ex) {
								throw new InvocationTargetException(ex);
							}
						}
					});
		} catch (InvocationTargetException e1) {
			Activator.handleError(
					UIText.RepositoriesView_BranchDeletionFailureMessage,
					e1.getCause(), true);
		} catch (InterruptedException e1) {
			// ignore
		}

		return null;
	}

