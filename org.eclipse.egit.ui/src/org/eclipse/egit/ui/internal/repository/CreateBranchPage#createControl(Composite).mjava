	public void createControl(Composite parent) {
		Composite main = new Composite(parent, SWT.NONE);
		main.setLayout(new GridLayout(3, false));

		Label sourceLabel = new Label(main, SWT.NONE);
		sourceLabel.setText(UIText.CreateBranchPage_SourceBranchLabel);
		sourceLabel.setToolTipText(UIText.CreateBranchPage_SourceBranchTooltip);
		this.branchCombo = new Combo(main, SWT.READ_ONLY | SWT.DROP_DOWN);

		GridDataFactory.fillDefaults().span(2, 1).grab(true, false).applyTo(
				this.branchCombo);

		try {
			for (Entry<String, Ref> ref : myRepository.getRefDatabase()
					.getRefs(Constants.R_HEADS).entrySet()) {
				if (!ref.getValue().isSymbolic())
					this.branchCombo.add(ref.getValue().getName());
			}
			for (Entry<String, Ref> ref : myRepository.getRefDatabase()
					.getRefs(Constants.R_REMOTES).entrySet()) {
				if (!ref.getValue().isSymbolic())
					this.branchCombo.add(ref.getValue().getName());
			}
			for (Entry<String, Ref> ref : myRepository.getRefDatabase()
					.getRefs(Constants.R_TAGS).entrySet()) {
				if (!ref.getValue().isSymbolic())
					this.branchCombo.add(ref.getValue().getName());
			}

		} catch (IOException e1) {
			// ignore here
		}

		this.branchCombo.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				checkPage();
			}
		});
		// select the current branch in the drop down
		if (myBaseBranch != null) {
			this.branchCombo.setText(myBaseBranch.getName());
		}

		Label nameLabel = new Label(main, SWT.NONE);
		nameLabel.setText(UIText.CreateBranchPage_BranchNameLabel);

		// we visualize the prefix here
		Text prefix = new Text(main, SWT.NONE);
		prefix.setText(Constants.R_HEADS);
		prefix.setEnabled(false);

		nameText = new Text(main, SWT.BORDER);
		GridDataFactory.fillDefaults().grab(true, false).applyTo(nameText);

		nameText.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				checkPage();
			}
		});

		boolean isBare = myRepository.getConfig().getBoolean(
				"core", "bare", false); //$NON-NLS-1$ //$NON-NLS-2$
		checkout = new Button(main, SWT.CHECK);
		checkout.setText(UIText.CreateBranchPage_CheckoutButton);
		// most of the time, we probably will check this out
		// unless we have a bare repository which doesn't allow
		// check out at all
		checkout.setSelection(!isBare);
		checkout.setEnabled(!isBare);
		checkout.setVisible(!isBare);
		GridDataFactory.fillDefaults().grab(true, false).span(3, 1).applyTo(
				checkout);
		checkout.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				checkPage();
			}

		});

		Dialog.applyDialogFont(main);
		setControl(main);
		nameText.setFocus();
		if (myBaseBranch != null
				&& (myBaseBranch.getName().startsWith(Constants.R_REMOTES) || myBaseBranch
						.getName().startsWith(Constants.R_TAGS))) {
			// additional convenience: the last part of the name is suggested
			// as name for the local branch
			nameText.setText(myBaseBranch.getName().substring(
					myBaseBranch.getName().lastIndexOf('/') + 1));
			checkPage();
		} else {
			// in any case, we will have to enter the name
			setPageComplete(false);
		}

		if (this.myBaseBranch != null && this.nameText.getText().length() == 0)
			setMessage(UIText.CreateBranchPage_ChooseNameMessage);
		else
			setMessage(UIText.CreateBranchPage_ChooseBranchAndNameMessage);
	}

