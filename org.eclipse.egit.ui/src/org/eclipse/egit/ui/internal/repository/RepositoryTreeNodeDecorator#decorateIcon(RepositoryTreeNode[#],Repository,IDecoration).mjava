	private void decorateIcon(RepositoryTreeNode<?> node,
			@NonNull Repository repository, IDecoration decoration)
			throws IOException {
		switch (node.getType()) {
		case TAG: {
			String branchName = DecoratorRepositoryStateCache.INSTANCE
					.getFullBranchName(repository);
			if (branchName == null) {
				return;
			}
			// HEAD would be on the commit id to which the tag is pointing
			if (branchName.equals(((TagNode) node).getCommitId())) {
				decoration.addOverlay(UIIcons.OVR_CHECKEDOUT,
						IDecoration.TOP_LEFT);
			}
			break;
		}
		case ADDITIONALREF: {
			Ref ref = refCache.findAdditional(repository,
					((Ref) node.getObject()).getName());
			if (ref != null) {
				decorateRefIcon(repository, ref, decoration);
			}
			break;
		}
		case REF: {
			Ref ref = refCache.exact(repository,
					((Ref) node.getObject()).getName());
			if (ref != null) {
				decorateRefIcon(repository, ref, decoration);
			}
			break;
		}
		case WORKINGDIR:
		case FOLDER:
		case FILE:
			decorateConflict(node.getPath().toFile(), decoration);
			break;
		default:
			break;
		}
	}

