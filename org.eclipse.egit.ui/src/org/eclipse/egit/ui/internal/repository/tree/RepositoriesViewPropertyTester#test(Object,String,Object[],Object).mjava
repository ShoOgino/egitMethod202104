	@Override
	public boolean test(Object receiver, String property, Object[] args,
			Object expectedValue) {
		if (!(receiver instanceof RepositoryTreeNode)) {
			return false;
		}
		RepositoryTreeNode node = (RepositoryTreeNode) receiver;

		Collection<? extends Repository> repositories = null;
		if (node instanceof RepositoryGroupNode) {
			repositories = ((RepositoryGroupNode) node).getRepositories();
		} else {
			Repository repository = node.getRepository();
			if (repository != null) {
				repositories = Collections.singleton(repository);
			}
		}
		if (repositories == null || repositories.isEmpty()) {
			return false;
		}
		boolean value = true;
		for (Repository repository : repositories) {
			value &= internalTest(node, repository, property);
		}
		boolean trace = GitTraceLocation.PROPERTIESTESTER.isActive();
		if (trace) {
			GitTraceLocation
					.getTrace()
					.trace(GitTraceLocation.PROPERTIESTESTER.getLocation(),
							"prop "	+ property + " of " + receiver + " = " + value + ", expected = " + expectedValue); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$
		}
		return computeResult(expectedValue, value);
	}

