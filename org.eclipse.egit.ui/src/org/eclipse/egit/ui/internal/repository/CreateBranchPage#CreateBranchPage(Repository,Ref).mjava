	/**
	 * Constructs this page.
	 * <p>
	 * If a base branch is provided, the drop down will be selected accordingly
	 *
	 * @param repo
	 *            the repository
	 * @param baseRef
	 *            the branch or tag to base the new branch on, may be null
	 */
	public CreateBranchPage(Repository repo, Ref baseRef) {
		super(CreateBranchPage.class.getName());
		this.myRepository = repo;
		if (baseRef != null) {
			this.myBaseRef = baseRef.getName();
		} else {
			this.myBaseRef = null;
		}
		this.myBaseCommit = null;
		this.myValidator = ValidationUtils.getRefNameInputValidator(
				myRepository, Constants.R_HEADS, false);
		if (baseRef != null) {
			this.upstreamConfig = CreateLocalBranchOperation
					.getDefaultUpstreamConfig(repo, baseRef.getName());
		} else {
			this.upstreamConfig = null;
		}
		setTitle(MessageFormat.format(UIText.CreateBranchPage_Title, Activator
				.getDefault().getRepositoryUtil().getRepositoryName(repo)));
		setMessage(UIText.CreateBranchPage_ChooseBranchAndNameMessage);
	}

