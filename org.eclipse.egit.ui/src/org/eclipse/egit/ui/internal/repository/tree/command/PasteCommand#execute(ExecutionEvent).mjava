	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		RepositoriesView view = getView(event);
		if (view.pasteInEditor()) {
			return null;
		}
		// we check if the pasted content is a directory
		// repository location and try to add this
		String errorMessage = null;

		Clipboard clip = new Clipboard(getShell(event).getDisplay());
		try {
			String content = (String) clip.getContents(TextTransfer
					.getInstance());
			if (content == null) {
				errorMessage = UIText.RepositoriesView_NothingToPasteMessage;
				return null;
			}

			File file = new File(content);
			if (!file.exists() || !file.isDirectory()) {
				// try if clipboard contains a git URI
				URIish cloneURI = getCloneURI(content);
				if (cloneURI == null) {
					errorMessage = UIText.RepositoriesView_ClipboardContentNotDirectoryOrURIMessage;
					return null;
				} else {
					// start clone wizard
					CloneCommand cmd = new CloneCommand(cloneURI.toString());
					cmd.execute(event);
					return null;
				}
			}

			if (!RepositoryCache.FileKey.isGitRepository(file, FS.DETECTED)) {
				// try if .git folder is one level below
				file = new File(file, Constants.DOT_GIT);
				if (!RepositoryCache.FileKey.isGitRepository(file, FS.DETECTED)) {
					errorMessage = NLS
							.bind(UIText.RepositoriesView_ClipboardContentNoGitRepoMessage,
									content);
					return null;
				}
			}

			file = FileUtils.canonicalize(file);
			if (util.addConfiguredRepository(file)) {
				RepositoryGroup group = getSelectedRepositoryGroup(event);
				if (group != null) {
					RepositoryGroups.getInstance().addRepositoriesToGroup(group,
							Collections.singletonList(file));
					view.expandNodeForGroup(group);
				}
				// let's do the auto-refresh the rest
			} else {
				errorMessage = NLS.bind(
						UIText.RepositoriesView_PasteRepoAlreadyThere, content);
			}
			return null;
		} finally {
			clip.dispose();
			if (errorMessage != null) {
				MessageDialog.openError(getShell(event),
						UIText.RepositoriesView_CannotPaste, errorMessage);
			}
		}
	}

