	private List<RepositoryNode> getRepositoryNodes(RepositoryUtil util,
			RepositoryGroups groupsUtil, RepositoryTreeNode<?> parent,
			List<File> directories) {
		List<RepositoryNode> result = new ArrayList<>();
		List<File> filtersToKeep = new ArrayList<>();
		for (File gitDir : directories) {
			try {
				if (gitDir.exists()) {
					filtersToKeep
							.add(new Path(gitDir.getAbsolutePath()).toFile());
					boolean addRepo = (groupsUtil == null
							|| !showRepositoryGroups
							|| !groupsUtil.belongsToGroup(gitDir));
					if (addRepo) {
						RepositoryNode rNode = new RepositoryNode(parent,
								repositoryCache.lookupRepository(gitDir));
						result.add(rNode);
					}
				} else {
					util.removeDir(gitDir);
				}
			} catch (IOException e) {
				// ignore for now
			}
		}
		if (filters != null) {
			filters.keepOnly(filtersToKeep);
		}
		return result;
	}

