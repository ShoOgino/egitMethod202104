	public Object execute(ExecutionEvent event) throws ExecutionException {
		final RepositoryTreeNode node = getSelectedNodes(event).get(0);
		Object object = node.getObject();
		if (!(object instanceof Ref))
			return null;

		final Ref ref = (Ref) object;
		final Repository repo = node.getRepository();
		Job job = new Job(NLS.bind(
				UIText.SelectSynchronizeResourceDialog_selectProject, repo
						.getDirectory())) {

			@Override
			protected IStatus run(IProgressMonitor monitor) {
				GitSynchronizeData data;
				try {
					data = new GitSynchronizeData(node
							.getRepository(), Constants.HEAD, ref.getName(), false);

					Set<IProject> projects = data.getProjects();
					IResource[] resources = projects
							.toArray(new IResource[projects.size()]);

					GitModelSynchronize.launch(data, resources);
				} catch (IOException e) {
					Activator.logError(e.getMessage(), e);
				}

				return Status.OK_STATUS;
			}
		};
		job.setUser(true);
		job.schedule();

		return null;
	}

