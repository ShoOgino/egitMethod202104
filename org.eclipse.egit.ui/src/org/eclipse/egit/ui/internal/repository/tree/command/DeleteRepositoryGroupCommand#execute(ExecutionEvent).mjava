	@Override
	public Object execute(ExecutionEvent event) throws ExecutionException {
		List<RepositoryGroup> groupsToDelete = new ArrayList<>();
		List<RepositoryGroupNode> groupsNodes = new ArrayList<>();
		List<RepositoryTreeNode> elements = getSelectedNodes();
		int numberOfRepos = 0;
		for (Object element : elements) {
			if (element instanceof RepositoryGroupNode) {
				RepositoryGroupNode groupNode = (RepositoryGroupNode) element;
				groupsNodes.add(groupNode);
				RepositoryGroup group = groupNode.getObject();
				groupsToDelete.add(group);
				numberOfRepos += group.getRepositoryDirectories().size();
			}
		}
		if (!groupsToDelete.isEmpty()) {
			IPreferenceStore store = Activator.getDefault()
					.getPreferenceStore();

			boolean delete = true;
			if (numberOfRepos > 0 && store
					.getBoolean(UIPreferences.SHOW_DELETE_REPO_GROUP_WARNING)) {
				DeleteRepositoryGroupConfirmDialog confirmDelete = new DeleteRepositoryGroupConfirmDialog(
						getShell(event), groupsNodes);
				delete = confirmDelete.open() == Window.OK;
				if (delete && !confirmDelete.showAgain()) {
					store.setValue(UIPreferences.SHOW_DELETE_REPO_GROUP_WARNING,
							false);
				}
			}
			if (delete) {
				RepositoryGroups.getInstance().delete(groupsToDelete);
				getView(event).refresh();
			}
		}
		return null;
	}

