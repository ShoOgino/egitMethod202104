	private void checkPage() {
		setErrorMessage(null);
		try {
			GridData gd = (GridData) warningComposite.getLayoutData();
			gd.exclude = !branchCombo.getText().startsWith(Constants.R_HEADS);
			warningComposite.setVisible(!gd.exclude);

			gd = (GridData) upstreamConfigGroup.getLayoutData();
			gd.exclude = branchCombo.getText().startsWith(Constants.R_TAGS);
			upstreamConfigGroup.setVisible(!gd.exclude);

			upstreamConfigGroup.getParent().layout(true);

			if (!gd.exclude)
				buttonConfigMerge.setSelection(false);
			buttonConfigRebase.setSelection(false);
			buttonConfigNone.setSelection(false);
			switch (getDefaultUpstreamConfig(myRepository, branchCombo
					.getText())) {
			case MERGE:
				buttonConfigMerge.setSelection(true);
				break;
			case REBASE:
				buttonConfigRebase.setSelection(true);
				break;
			case NONE:
				buttonConfigNone.setSelection(true);
				break;
			}

			if (branchCombo.getText().length() == 0) {
				setErrorMessage(UIText.CreateBranchPage_MissingSourceMessage);
				return;
			}
			if (nameText.getText().length() == 0) {
				setErrorMessage(UIText.CreateBranchPage_ChooseNameMessage);
				return;
			}
			String message = this.myValidator.isValid(nameText.getText());
			if (message != null) {
				setErrorMessage(message);
				return;
			}
		} finally {
			setPageComplete(getErrorMessage() == null);
		}
	}

