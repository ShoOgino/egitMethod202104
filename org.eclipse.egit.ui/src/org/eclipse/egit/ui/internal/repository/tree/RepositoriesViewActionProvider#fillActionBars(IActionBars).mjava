	@Override
	public void fillActionBars(IActionBars actionBars) {
		if (pasteAction == null) {
			pasteAction = new Action("") { //$NON-NLS-1$

				@Override
				public void run() {
					IHandlerService srv = (IHandlerService) PlatformUI
							.getWorkbench().getService(IHandlerService.class);
					ICommandService csrv = (ICommandService) PlatformUI
							.getWorkbench().getService(ICommandService.class);
					Command openCommand = csrv
							.getCommand("org.eclipse.egit.ui.RepositoriesViewPaste"); //$NON-NLS-1$
					ExecutionEvent evt = srv.createExecutionEvent(openCommand,
							null);

					try {
						openCommand.executeWithChecks(evt);
					} catch (Exception e) {
						Activator.handleError(e.getMessage(), e, true);
					}
				}

			};
		}

		actionBars.setGlobalActionHandler(ActionFactory.PASTE.getId(),
				pasteAction);

		if (copyAction == null) {
			copyAction = new Action("") { //$NON-NLS-1$

				@Override
				public void run() {
					IHandlerService srv = (IHandlerService) PlatformUI
							.getWorkbench().getService(IHandlerService.class);
					ICommandService csrv = (ICommandService) PlatformUI
							.getWorkbench().getService(ICommandService.class);
					Command openCommand = csrv
							.getCommand("org.eclipse.egit.ui.RepositoriesViewCopyPath"); //$NON-NLS-1$
					ExecutionEvent evt = srv.createExecutionEvent(openCommand,
							null);

					try {
						openCommand.executeWithChecks(evt);
					} catch (Exception e) {
						Activator.handleError(e.getMessage(), e, true);
					}
				}

			};
		}

		IStructuredSelection sel = (IStructuredSelection) getActionSite()
				.getViewSite().getSelectionProvider().getSelection();

		if (sel.size() == 1) {
			RepositoryTreeNode node = (RepositoryTreeNode) sel
					.getFirstElement();
			if (node.getType() == RepositoryTreeNodeType.REPO
					|| node.getType() == RepositoryTreeNodeType.FILE
					|| node.getType() == RepositoryTreeNodeType.FOLDER) {
				copyAction.setEnabled(true);
			} else if (node.getType() == RepositoryTreeNodeType.WORKINGDIR) {
				boolean isBare = node.getRepository().isBare();
				copyAction.setEnabled(!isBare);
			} else {
				copyAction.setEnabled(false);
			}
		}

		actionBars.setGlobalActionHandler(ActionFactory.COPY.getId(),
				copyAction);
	}

