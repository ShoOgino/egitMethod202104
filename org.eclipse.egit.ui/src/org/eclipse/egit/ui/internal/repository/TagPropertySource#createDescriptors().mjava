	private IPropertyDescriptor[] createDescriptors() {
		List<PropertyDescriptor> result = new ArrayList<>();
		result.add(new PropertyDescriptor(PROPERTY_TAG_NAME,
				UIText.TagPropertySource_TagName));
		if (tag == null) {
			if (commit != null) {
				result.add(new CommitPropertyDescriptor(PROPERTY_TAG_TARGET,
						UIText.TagPropertySource_TagTarget,
						new RepositoryCommit(repository, commit)));
			}
		} else {
			result.add(new PropertyDescriptor(PROPERTY_TAG_ID,
					UIText.TagPropertySource_TagId));
			result.add(
					new MessagePropertyDescriptor(PROPERTY_TAG_MESSAGE,
							UIText.TagPropertySource_TagMessage,
							tag.getFullMessage(), page));
			result.add(new PropertyDescriptor(PROPERTY_TAG_TAGGER,
					UIText.TagPropertySource_TagTagger));
			if (tag.getObject() instanceof RevCommit) {
				result.add(new CommitPropertyDescriptor(PROPERTY_TAG_TARGET,
						UIText.TagPropertySource_TagTarget,
						new RepositoryCommit(repository,
								(RevCommit) tag.getObject())));
			} else {
				result.add(new PropertyDescriptor(PROPERTY_TAG_TARGET,
						UIText.TagPropertySource_TagTarget));
			}
		}
		for (PropertyDescriptor p : result) {
			p.setCategory(UIText.TagPropertySource_TagCategory);
		}
		return result.toArray(new IPropertyDescriptor[0]);
	}

