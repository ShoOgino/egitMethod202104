	private void decorateRefIcon(@NonNull Repository repository, Ref ref,
			IDecoration decoration) {
		String branchName = DecoratorRepositoryStateCache.INSTANCE
				.getFullBranchName(repository);
		if (branchName == null) {
			return;
		}
		String refName = ref.getName();
		Ref leaf = ref.getLeaf();

		String compareString = null;
		if (refName.startsWith(Constants.R_HEADS)) {
			// local branch: HEAD would be on the branch
			compareString = refName;
		} else if (refName.startsWith(Constants.R_REMOTES)) {
			// remote branch: branch name is object id in detached HEAD
			// state
			ObjectId objectId = leaf.getObjectId();
			if (objectId != null) {
				String leafName = objectId.getName();
				if (leafName.equals(branchName)) {
					decoration.addOverlay(UIIcons.OVR_CHECKEDOUT,
							IDecoration.TOP_LEFT);
					return;
				}
			}
		} else if (refName.equals(Constants.HEAD)) {
			decoration.addOverlay(UIIcons.OVR_CHECKEDOUT, IDecoration.TOP_LEFT);
			return;
		} else {
			String leafname = leaf.getName();
			if (leafname.startsWith(Constants.R_REFS)
					&& leafname.equals(branchName)) {
				decoration.addOverlay(UIIcons.OVR_CHECKEDOUT,
						IDecoration.TOP_LEFT);
				return;
			}
			ObjectId objectId = leaf.getObjectId();
			if (objectId != null
					&& objectId.equals(DecoratorRepositoryStateCache.INSTANCE
							.getHead(repository))) {
				decoration.addOverlay(UIIcons.OVR_CHECKEDOUT,
						IDecoration.TOP_LEFT);
			}
			// some other symbolic reference
			return;
		}

		if (branchName.equals(compareString)) {
			decoration.addOverlay(UIIcons.OVR_CHECKEDOUT, IDecoration.TOP_LEFT);
		}
	}

