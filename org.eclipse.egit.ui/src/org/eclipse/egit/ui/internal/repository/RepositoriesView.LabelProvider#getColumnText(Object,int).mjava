		public String getColumnText(Object element, int columnIndex) {

			RepositoryTreeNode node = (RepositoryTreeNode) element;
			switch (node.getType()) {
			case REPO:
				File directory = ((Repository) node.getObject()).getDirectory()
						.getParentFile();
				return (directory.getName() + " - " + directory //$NON-NLS-1$
						.getAbsolutePath());
			case BRANCHES:
				return RepositoryViewUITexts.RepositoriesView_Branches_Nodetext;
			case REMOTES:
				return RepositoryViewUITexts.RepositoriesView_RemotesNodeText;
			case REMOTE:
				String name = (String) node.getObject();
				String url = node.getRepository().getConfig().getString(REMOTE,
						name, URL);
				if (url != null && !url.equals("")) //$NON-NLS-1$
					name = name + " - " + url; //$NON-NLS-1$
				return name;
			case PROJECTS:
				return RepositoryViewUITexts.RepositoriesView_ExistingProjects_Nodetext;
			case REF:
				Ref ref = (Ref) node.getObject();
				// shorten the name
				String refName = node.getRepository().shortenRefName(
						ref.getName());
				if (ref.isSymbolic()) {
					refName = refName
							+ " - " //$NON-NLS-1$
							+ node.getRepository().shortenRefName(
									ref.getLeaf().getName());
				}
				return refName;
			case PROJ:

				File file = (File) node.getObject();
				return file.getName();

			default:
				return null;
			}
		}

