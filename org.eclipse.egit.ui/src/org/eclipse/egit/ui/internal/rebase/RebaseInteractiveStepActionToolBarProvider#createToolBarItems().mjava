	@SuppressWarnings("unused")
	private void createToolBarItems() {
		ToolItem itemPick = new ToolItem(theToolbar, SWT.RADIO);
		itemPick.setImage(getImage(UIIcons.CHERRY_PICK));
		itemPick.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.PICK));
		itemPick.setText(UIText.RebaseInteractiveStepActionToolBarProvider_PickText);
		itemPick.setToolTipText(textFor(ElementAction.PICK,
				UIText.RebaseInteractiveStepActionToolBarProvider_PickDesc));
		rebaseActionItems.put(ElementAction.PICK, itemPick);

		ToolItem itemSkip = new ToolItem(theToolbar, SWT.RADIO);
		itemSkip.setImage(getImage(UIIcons.REBASE_SKIP));
		itemSkip.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.SKIP));
		itemSkip.setText(UIText.RebaseInteractiveStepActionToolBarProvider_SkipText);
		itemSkip.setToolTipText(textFor(ElementAction.SKIP,
				UIText.RebaseInteractiveStepActionToolBarProvider_SkipDesc));
		rebaseActionItems.put(ElementAction.SKIP, itemSkip);

		ToolItem itemEdit = new ToolItem(theToolbar, SWT.RADIO);
		itemEdit.setImage(getImage(UIIcons.EDITCONFIG));
		itemEdit.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.EDIT));
		itemEdit.setText(UIText.RebaseInteractiveStepActionToolBarProvider_EditText);
		itemEdit.setToolTipText(textFor(ElementAction.EDIT,
				UIText.RebaseInteractiveStepActionToolBarProvider_EditDesc));
		rebaseActionItems.put(ElementAction.EDIT, itemEdit);

		ToolItem itemSquash = new ToolItem(theToolbar, SWT.RADIO);
		itemSquash.setImage(getImage(UIIcons.SQUASH_UP));
		itemSquash.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.SQUASH));
		itemSquash.setText(
				UIText.RebaseInteractiveStepActionToolBarProvider_SquashText);
		itemSquash.setToolTipText(textFor(ElementAction.SQUASH,
				UIText.RebaseInteractiveStepActionToolBarProvider_SquashDesc));
		rebaseActionItems.put(ElementAction.SQUASH, itemSquash);

		ToolItem itemFixup = new ToolItem(theToolbar, SWT.RADIO);
		itemFixup.setImage(getImage(UIIcons.FIXUP_UP));
		itemFixup.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.FIXUP));
		itemFixup.setText(
				UIText.RebaseInteractiveStepActionToolBarProvider_FixupText);
		itemFixup.setToolTipText(textFor(ElementAction.FIXUP,
				UIText.RebaseInteractiveStepActionToolBarProvider_FixupDesc));
		rebaseActionItems.put(ElementAction.FIXUP, itemFixup);

		ToolItem itemReword = new ToolItem(theToolbar, SWT.RADIO);
		itemReword.setImage(getImage(UIIcons.REWORD));
		itemReword.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.REWORD));
		itemReword.setText(
				UIText.RebaseInteractiveStepActionToolBarProvider_RewordText);
		itemReword.setToolTipText(textFor(ElementAction.REWORD,
				UIText.RebaseInteractiveStepActionToolBarProvider_RewordDesc));
		rebaseActionItems.put(ElementAction.REWORD, itemReword);

		new ToolItem(theToolbar, SWT.SEPARATOR);

		itemMoveUp = new ToolItem(theToolbar, SWT.NONE);
		itemMoveUp.setImage(getImage(UIIcons.ELCL16_PREVIOUS));
		itemMoveUp.setText(
				UIText.RebaseInteractiveStepActionToolBarProvider_MoveUpText);
		itemMoveUp.setToolTipText(textFor(0,
				UIText.RebaseInteractiveStepActionToolBarProvider_MoveUpDesc));
		itemMoveUp.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				moveUp();
				view.planTreeViewer.getControl().setFocus();
			}
		});

		itemMoveDown = new ToolItem(theToolbar, SWT.NONE);
		itemMoveDown.setImage(getImage(UIIcons.ELCL16_NEXT));
		itemMoveDown.setText(
				UIText.RebaseInteractiveStepActionToolBarProvider_MoveDownText);
		itemMoveDown.setToolTipText(textFor(1,
				UIText.RebaseInteractiveStepActionToolBarProvider_MoveDownDesc));
		itemMoveDown.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				moveDown();
				view.planTreeViewer.getControl().setFocus();
			}
		});
	}

