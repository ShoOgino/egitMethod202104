	private void createToolBarItems() {
		itemPick = new ToolItem(theToolbar, SWT.RADIO);
		itemPick.setImage(getImage(UIIcons.CHERRY_PICK));
		itemPick.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.PICK));
		itemPick.setText(UIText.RebaseInteractiveStepActionToolBarProvider_PickText);
		itemPick.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_PickDesc);
		rebaseActionItems[0] = itemPick;

		itemSkip = new ToolItem(theToolbar, SWT.RADIO);
		itemSkip.setImage(getImage(UIIcons.REBASE_SKIP));
		itemSkip.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.SKIP));
		itemSkip.setText(UIText.RebaseInteractiveStepActionToolBarProvider_SkipText);
		itemSkip.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_SkipDesc);
		rebaseActionItems[1] = itemSkip;

		itemEdit = new ToolItem(theToolbar, SWT.RADIO);
		itemEdit.setImage(getImage(UIIcons.EDITCONFIG));
		itemEdit.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.EDIT));
		itemEdit.setText(UIText.RebaseInteractiveStepActionToolBarProvider_EditText);
		itemEdit.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_EditDesc);
		rebaseActionItems[2] = itemEdit;

		itemSquash = new ToolItem(theToolbar, SWT.RADIO);
		itemSquash.setImage(getImage(UIIcons.SQUASH_UP));
		itemSquash.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.SQUASH));
		itemSquash
				.setText(UIText.RebaseInteractiveStepActionToolBarProvider_SquashText);
		itemSquash
				.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_SquashDesc);
		rebaseActionItems[3] = itemSquash;

		itemFixup = new ToolItem(theToolbar, SWT.RADIO);
		itemFixup.setImage(getImage(UIIcons.FIXUP_UP));
		itemFixup.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.FIXUP));
		itemFixup
				.setText(UIText.RebaseInteractiveStepActionToolBarProvider_FixupText);
		itemFixup
				.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_FixupDesc);
		rebaseActionItems[4] = itemFixup;

		itemReword = new ToolItem(theToolbar, SWT.RADIO);
		itemReword.setImage(getImage(UIIcons.REWORD));
		itemReword.addSelectionListener(new ActionSelectionListener(
				RebaseInteractivePlan.ElementAction.REWORD));
		itemReword
				.setText(UIText.RebaseInteractiveStepActionToolBarProvider_RewordText);
		itemReword
				.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_RewordDesc);
		rebaseActionItems[5] = itemReword;

		new ToolItem(theToolbar, SWT.SEPARATOR);

		itemMoveUp = new ToolItem(theToolbar, SWT.NONE);
		itemMoveUp.setImage(getImage(UIIcons.ELCL16_PREVIOUS));
		itemMoveUp
				.setText(UIText.RebaseInteractiveStepActionToolBarProvider_MoveUpText);
		itemMoveUp
				.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_MoveUpDesc);
		itemMoveUp.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				List<PlanElement> selectedRebaseTodoLines = getSelectedRebaseTodoLines();
				for (PlanElement planElement : selectedRebaseTodoLines) {
					if (planElement.getElementType() != ElementType.TODO)
						return;

					if (!RebaseInteractivePreferences.isOrderReversed())
						view.getCurrentPlan().moveTodoEntryUp(planElement);
					else
						view.getCurrentPlan().moveTodoEntryDown(planElement);

					mapActionItemsToSelection(view.planTreeViewer
							.getSelection());
				}
			}
		});

		itemMoveDown = new ToolItem(theToolbar, SWT.NONE);
		itemMoveDown.setImage(getImage(UIIcons.ELCL16_NEXT));
		itemMoveDown
				.setText(UIText.RebaseInteractiveStepActionToolBarProvider_MoveDownText);
		itemMoveDown
				.setToolTipText(UIText.RebaseInteractiveStepActionToolBarProvider_MoveDownDesc);
		itemMoveDown.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				List<PlanElement> selectedRebaseTodoLines = getSelectedRebaseTodoLines();
				Collections.reverse(selectedRebaseTodoLines);
				for (PlanElement planElement : selectedRebaseTodoLines) {
					if (planElement.getElementType() != ElementType.TODO)
						return;

					if (!RebaseInteractivePreferences.isOrderReversed())
						view.getCurrentPlan().moveTodoEntryDown(planElement);
					else
						view.getCurrentPlan().moveTodoEntryUp(planElement);

					mapActionItemsToSelection(view.planTreeViewer
							.getSelection());
				}
			}
		});
	}

