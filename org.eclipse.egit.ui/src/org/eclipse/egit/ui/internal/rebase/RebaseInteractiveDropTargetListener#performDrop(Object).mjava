	public boolean performDrop(Object data) {
		if (!this.rebaseInteractiveView.isDragAndDropEnabled())
			return false;

		DropTargetEvent event = getCurrentEvent();
		RebaseInteractivePlan.PlanElement sourceElement = null;
		if (event.data instanceof IStructuredSelection) {
			final IStructuredSelection structuredSelection = (IStructuredSelection) data;
			if (structuredSelection.size() > 1)
				return false;
			if (structuredSelection.getFirstElement() instanceof RebaseInteractivePlan.PlanElement)
				sourceElement = (RebaseInteractivePlan.PlanElement) structuredSelection
						.getFirstElement();
		}

		if (sourceElement == null)
			return false;

		Object targetObj = getCurrentTarget();
		if (!(targetObj instanceof RebaseInteractivePlan.PlanElement))
			return false;
		RebaseInteractivePlan.PlanElement targetElement = (RebaseInteractivePlan.PlanElement) targetObj;

		boolean before = false;
		switch (getCurrentLocation()) {
		case ViewerDropAdapter.LOCATION_BEFORE:
			before = true;
			break;
		case ViewerDropAdapter.LOCATION_NONE:
			return false;
		}
		rebaseInteractiveView.getCurrentPlan().moveTodoEntry(sourceElement,
				targetElement, before);
		return true;
	}

