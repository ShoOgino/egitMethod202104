	void mapActionItemsToSelection(ISelection selection) {
		setMoveItemsEnabled(false);
		if (selection == null || selection.isEmpty()) {
			if (theToolbar.isEnabled())
				theToolbar.setEnabled(false);

			unselectAllActionItemsExecpt(null);
			return;
		}
		if (selection instanceof IStructuredSelection) {
			IStructuredSelection structured = (IStructuredSelection) selection;

			Object obj = structured.getFirstElement();
			if (!(obj instanceof PlanElement))
				return;
			PlanElement firstSelectedEntry = (PlanElement) obj;
			PlanElement lastSelectedEntry = firstSelectedEntry;

			ElementAction type = firstSelectedEntry.getPlanElementAction();

			boolean singleTypeSelected = true;

			if (!theToolbar.isEnabled()
					&& !view.getCurrentPlan().hasRebaseBeenStartedYet())
				theToolbar.setEnabled(true);

			if (structured.size() > 1) {
				// multi selection
				for (Object selectedObj : structured.toList()) {
					if (!(selectedObj instanceof PlanElement))
						continue;
					PlanElement entry = (PlanElement) selectedObj;
					lastSelectedEntry = entry;
					if (type != entry.getPlanElementAction()) {
						singleTypeSelected = false;
					}
				}
			}

			if (singleTypeSelected)
				unselectAllActionItemsExecpt(getItemFor(type));
			else
				unselectAllActionItemsExecpt(null);

			enableMoveButtons(firstSelectedEntry, lastSelectedEntry);

		}
	}

