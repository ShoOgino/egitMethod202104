	/**
	 * @param parent
	 * @param style
	 * @param view
	 */
	public RebaseInteractiveStepActionToolBarProvider(Composite parent,
			int style, RebaseInteractiveView view) {
		accelerators.put(ElementAction.EDIT, Integer.valueOf('E'));
		accelerators.put(ElementAction.FIXUP, Integer.valueOf('F'));
		accelerators.put(ElementAction.PICK, Integer.valueOf('P'));
		accelerators.put(ElementAction.REWORD, Integer.valueOf('R'));
		accelerators.put(ElementAction.SKIP, Integer.valueOf(SWT.DEL));
		accelerators.put(ElementAction.SQUASH, Integer.valueOf('S'));
		this.theToolbar = new ToolBar(parent, style);
		this.view = view;
		createToolBarItems();
		this.theToolbar.addDisposeListener(new DisposeListener() {

			@Override
			public void widgetDisposed(DisposeEvent e) {
				dispose();
			}
		});
	}

