	public boolean performFinish() {
		final ConnectProviderOperation op = new ConnectProviderOperation(
				existingPage.getProjects(true));
		try {
			getContainer().run(true, false, new IRunnableWithProgress() {
				public void run(final IProgressMonitor monitor)
						throws InvocationTargetException {
					try {
						op.execute(monitor);
						PlatformUI.getWorkbench().getDisplay()
								.syncExec(new Runnable() {
									public void run() {
										Set<File> filesToAdd = new HashSet<File>();
										// collect all files first
										for (Entry<IProject, File> entry : existingPage
												.getProjects(true).entrySet())
											filesToAdd.add(entry.getValue());
										// add the files to the repository view
										for (File file : filesToAdd)
											Activator
													.getDefault()
													.getRepositoryUtil()
													.addConfiguredRepository(
															file);
									}
								});
					} catch (CoreException ce) {
						throw new InvocationTargetException(ce);
					}
				}
			});
			return true;
		} catch (Throwable e) {
			if (e instanceof InvocationTargetException) {
				e = e.getCause();
			}
			if (e instanceof CoreException) {
				IStatus status = ((CoreException) e).getStatus();
				e = status.getException();
			}
			Activator.handleError(UIText.SharingWizard_failed, e, true);
			return false;
		}
	}

