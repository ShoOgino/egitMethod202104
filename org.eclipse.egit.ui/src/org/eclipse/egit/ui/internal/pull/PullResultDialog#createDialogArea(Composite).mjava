	@Override
	protected Control createDialogArea(Composite parent) {
		Composite main = new Composite(parent, SWT.NONE);
		GridLayoutFactory.swtDefaults().applyTo(main);
		GridDataFactory.fillDefaults().indent(0, 0).grab(true, true).applyTo(
				main);
		Group fetchResultGroup = new Group(main, SWT.SHADOW_ETCHED_IN);
		fetchResultGroup
				.setText(UIText.PullResultDialog_FetchResultGroupHeader);
		GridLayoutFactory.fillDefaults().applyTo(fetchResultGroup);
		GridDataFactory.fillDefaults().grab(true, true).applyTo(
				fetchResultGroup);
		FetchResult fRes = result.getFetchResult();
		if (hasFetchResults()) {
			GridLayoutFactory.fillDefaults().applyTo(fetchResultGroup);
			FetchResultDialog dlg = new FetchResultDialog(getParentShell(),
					repo, fRes, result.getFetchedFrom());
			Control fresult = dlg.createFetchResultTable(fetchResultGroup);
			Object layoutData = fresult.getLayoutData();
			if (layoutData instanceof GridData)
				GridDataFactory.createFrom((GridData) layoutData)
						.hint(SWT.DEFAULT, 130).applyTo(fresult);

		} else {
			GridLayoutFactory.swtDefaults().applyTo(fetchResultGroup);
			Label noResult = new Label(fetchResultGroup, SWT.NONE);
			if (BranchConfig.LOCAL_REPOSITORY.equals(result.getFetchedFrom()))
				noResult
						.setText(UIText.PullResultDialog_NothingToFetchFromLocal);
			else
				noResult.setText(NLS.bind(
						UIText.FetchResultDialog_labelEmptyResult, result
								.getFetchedFrom()));

		}
		Group mergeResultGroup = new Group(main, SWT.SHADOW_ETCHED_IN);
		mergeResultGroup
				.setText(UIText.PullResultDialog_MergeResultGroupHeader);
		if (hasMergeResults()) {
			GridDataFactory.fillDefaults().grab(true, true).applyTo(
					mergeResultGroup);
			GridLayoutFactory.fillDefaults().applyTo(mergeResultGroup);
			MergeResultDialog dlg = new MergeResultDialog(getParentShell(),
					repo, result.getMergeResult());
			dlg.createDialogArea(mergeResultGroup);
		} else if (hasRebaseResults()) {
			RebaseResultDialog.createFailedOrConflictsParts(mergeResultGroup,
					result.getRebaseResult());
			GridDataFactory.fillDefaults().grab(true, false).applyTo(
					mergeResultGroup);
		} else {
			GridDataFactory.fillDefaults().grab(true, false).applyTo(
					mergeResultGroup);
			GridLayoutFactory.swtDefaults().applyTo(mergeResultGroup);
			Label noResult = new Label(mergeResultGroup, SWT.NONE);
			noResult
					.setText(UIText.PullResultDialog_MergeAlreadyUpToDateMessage);
		}
		return main;
	}

