	protected void createContent(Composite parent) {
		scrolls = new ScrolledComposite(parent, SWT.V_SCROLL | SWT.H_SCROLL);
		scrolls.setExpandHorizontal(true);
		scrolls.setExpandVertical(true);
		displayArea = new Composite(scrolls, SWT.NONE);
		scrolls.setContent(displayArea);
		displayArea.setForeground(parent.getForeground());
		displayArea.setBackground(parent.getBackground());
		displayArea.setBackgroundMode(SWT.INHERIT_FORCE);
		GridLayoutFactory.swtDefaults().equalWidth(true).applyTo(displayArea);

		commitLink = new StyledText(displayArea, SWT.READ_ONLY);
		commitLink.addMouseListener(new MouseAdapter() {

			public void mouseUp(MouseEvent e) {
				if (commitLink.getSelectionText().length() != 0)
					return;
				try {
					getShell().dispose();
					CommitEditor.open(new RepositoryCommit(revision
							.getRepository(), revision.getCommit()));
				} catch (PartInitException pie) {
					Activator.logError(pie.getLocalizedMessage(), pie);
				}
			}
		});
		commitLink.setFont(JFaceResources.getBannerFont());
		commitLink.setForeground(JFaceColors.getHyperlinkText(commitLink
				.getDisplay()));
		Cursor handCursor = new Cursor(commitLink.getDisplay(), SWT.CURSOR_HAND);
		UIUtils.hookDisposal(commitLink, handCursor);
		commitLink.setCursor(handCursor);
		GridDataFactory.fillDefaults().grab(true, false).applyTo(commitLink);

		authorLabel = new Label(displayArea, SWT.NONE);
		authorLabel.setForeground(parent.getForeground());
		authorLabel.setBackground(parent.getBackground());
		authorLabel.setFont(UIUtils.getItalicFont(JFaceResources.DEFAULT_FONT));
		GridDataFactory.fillDefaults().grab(true, false).applyTo(authorLabel);

		committerLabel = new Label(displayArea, SWT.NONE);
		committerLabel.setForeground(parent.getForeground());
		committerLabel.setBackground(parent.getBackground());
		committerLabel.setFont(UIUtils
				.getItalicFont(JFaceResources.DEFAULT_FONT));
		GridDataFactory.fillDefaults().grab(true, false)
				.applyTo(committerLabel);

		Label separator = new Label(displayArea, SWT.HORIZONTAL | SWT.SEPARATOR);
		GridDataFactory.fillDefaults().grab(true, false).applyTo(separator);

		messageText = new StyledText(displayArea, SWT.NONE);
		messageText.setForeground(parent.getForeground());
		messageText.setBackground(parent.getBackground());
		messageText.setEditable(false);
		messageText.setFont(UIUtils
				.getFont(UIPreferences.THEME_CommitMessageFont));
		GridDataFactory.fillDefaults().grab(true, true).applyTo(messageText);
	}

