	@Override
	protected Control createControl(Composite parent) {
		Control control = null;
		if ((getStyle() & SWT.SINGLE) != 0 && withBorder()) {
			outer = new Composite(parent, SWT.NONE);
			outer.setVisible(false);
			outer.setLayout(new BorderLayout());
			super.createControl(outer);
			control = outer;
			outer.setBackground(text.getBackground());
			outer.addListener(SWT.Paint, this::drawRectangle);
			text.addListener(SWT.Modify, event -> adjustSize());
		} else {
			control = super.createControl(parent);
		}
		errorPopup = new DefaultToolTip(control, ToolTip.NO_RECREATE, true);
		// A delay enables us to cancel showing the tooltip if the user keeps
		// typing and the value is valid again.
		errorPopup.setPopupDelay(DEFAULT_DELAY_MILLIS);
		errorPopup.setBackgroundColor(Activator.getDefault()
				.getResourceManager().createColor(DEFAULT_BACKGROUND));
		control.addDisposeListener(event -> errorPopup.hide());
		addListener(new ICellEditorListener() {

			@Override
			public void editorValueChanged(boolean oldValidState,
					boolean newValidState) {
				if (newValidState) {
					errorPopup.hide();
					return;
				}
				Control editor = getControl();
				Point pos = editor.getSize();
				errorPopup.setText(getErrorMessage());
				pos.x = 0;
				errorPopup.show(pos);
			}

			@Override
			public void cancelEditor() {
				errorPopup.hide();
			}

			@Override
			public void applyEditorValue() {
				errorPopup.hide();
			}
		});
		if ((text.getStyle() & SWT.SINGLE) != 0) {
			// Prevent pasting multi-line text into a single-line control. See
			// bug 273470.
			text.addVerifyListener(
					event -> event.text = Utils.firstLine(event.text));
		}
		return control;
	}

