	/**
	 * @param parent
	 *            the composite to use as a parent for the container
	 * @param style
	 *            the style of the container
	 */
	public UpstreamConfigComponent(Composite parent, int style) {
		container = new Composite(parent, style);
		container.setLayout(GridLayoutFactory.fillDefaults()
				.extendedMargins(0, 0, 0, 10).create());

		configureUpstreamCheck = new Button(container, SWT.CHECK);
		configureUpstreamCheck.setLayoutData(GridDataFactory.fillDefaults()
				.grab(true, false).create());
		configureUpstreamCheck
				.setText(UIText.UpstreamConfigComponent_ConfigureUpstreamCheck);
		configureUpstreamCheck
				.setToolTipText(UIText.UpstreamConfigComponent_ConfigureUpstreamToolTip);
		configureUpstreamCheck.setSelection(true);

		upstreamConfigGroup = new Group(container, SWT.SHADOW_ETCHED_IN);
		upstreamConfigGroup.setLayoutData(GridDataFactory.fillDefaults()
				.grab(true, false).indent(UIUtils.getControlIndent(), 0)
				.create());
		upstreamConfigGroup.setLayout(GridLayoutFactory.swtDefaults().create());
		upstreamConfigGroup
				.setText(UIText.UpstreamConfigComponent_PullGroup);

		mergeRadio = new Button(upstreamConfigGroup, SWT.RADIO);
		mergeRadio.setText(UIText.UpstreamConfigComponent_MergeRadio);
		mergeRadio.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				upstreamConfigSelected();
			}
		});
		mergeRadio.setSelection(true);

		rebaseRadio = new Button(upstreamConfigGroup, SWT.RADIO);
		rebaseRadio.setText(UIText.UpstreamConfigComponent_RebaseRadio);
		rebaseRadio.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				upstreamConfigSelected();
			}
		});

		configureUpstreamCheck.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				updateEnabled();
				upstreamConfigSelected();
			}
		});
	}

