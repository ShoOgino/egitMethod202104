	/**
	 * Creates a new {@link BranchRebaseModeCombo} in the given {@code parent}.
	 *
	 * @param parent
	 *            {@link Composite} to contain the controls
	 */
	public BranchRebaseModeCombo(Composite parent) {
		label = new Label(parent, SWT.NONE);
		label.setText(UIText.BranchRebaseModeCombo_RebaseModeLabel);
		combo = new ComboViewer(parent, SWT.READ_ONLY | SWT.DROP_DOWN);
		combo.setContentProvider(ArrayContentProvider.getInstance());
		combo.setLabelProvider(new LabelProvider() {
			@Override
			public String getText(Object element) {
				if (element == BranchRebaseMode.REBASE) {
					return UIText.BranchRebaseMode_Rebase;
				} else if (element == BranchRebaseMode.PRESERVE) {
					return UIText.BranchRebaseMode_Preserve;
				} else if (element == BranchRebaseMode.INTERACTIVE) {
					return UIText.BranchRebaseMode_Interactive;
				} else if (element == BranchRebaseMode.NONE) {
					return UIText.BranchRebaseMode_None;
				}
				return ""; //$NON-NLS-1$
			}
		});
		combo.setInput(BranchRebaseMode.values());
	}

