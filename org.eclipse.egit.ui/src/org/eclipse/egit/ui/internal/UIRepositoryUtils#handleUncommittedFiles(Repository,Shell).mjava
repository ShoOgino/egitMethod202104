	/**
	 * Checks the repository to see if there are uncommitted changes, and
	 * prompts the user to clean them up.
	 *
	 * @param repo
	 *            the repository
	 * @param shell
	 *            the parent shell for opening the dialog
	 * @return true if the git status was clean or it was dirty and the user
	 *         cleaned up the uncommitted changes and the previous action may
	 *         continue
	 * @throws GitAPIException
	 *             if there was an error checking the repository
	 */
	public static boolean handleUncommittedFiles(Repository repo, Shell shell)
			throws GitAPIException {
		String repoName = RepositoryUtil.getInstance().getRepositoryName(repo);
		return handleUncommittedFiles(repo, shell,
				MessageFormat.format(
						UIText.AbstractRebaseCommandHandler_cleanupDialog_title,
						repoName));
	}

