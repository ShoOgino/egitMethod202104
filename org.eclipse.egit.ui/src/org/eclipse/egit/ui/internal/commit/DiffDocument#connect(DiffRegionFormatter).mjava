	/**
	 * Sets up the document to use information from the given
	 * {@link DiffRegionFormatter} for partitioning the document into
	 * partitions for file headlines, hunk headers, and added or removed lines.
	 * It is assumed that the given formatter has been used to generate content
	 * into the document.
	 *
	 * @param formatter
	 *            to obtain information from
	 */
	public void connect(DiffRegionFormatter formatter) {
		regions = formatter.getRegions();
		fileRegions = formatter.getFileRegions();
		if ((fileRegions == null || fileRegions.length == 0)
				&& defaultRepository != null && defaultFileDiff != null) {
			fileRegions = new FileDiffRegion[] { new FileDiffRegion(
					defaultRepository, defaultFileDiff, 0, getLength()) };
		}
		newPathPattern = Pattern.compile(
				Pattern.quote(formatter.getNewPrefix()) + "\\S+"); //$NON-NLS-1$
		oldPathPattern = Pattern.compile(
				Pattern.quote(formatter.getOldPrefix()) + "\\S+"); //$NON-NLS-1$
		// Connect a new partitioner.
		IDocumentPartitioner partitioner = new FastPartitioner(
				new DiffPartitionTokenScanner(),
				new String[] { IDocument.DEFAULT_CONTENT_TYPE,
						HEADLINE_CONTENT_TYPE, HUNK_CONTENT_TYPE,
						ADDED_CONTENT_TYPE, REMOVED_CONTENT_TYPE });
		IDocumentPartitioner oldPartitioner = getDocumentPartitioner();
		if (oldPartitioner != null) {
			oldPartitioner.disconnect();
		}
		partitioner.connect(this);
		setDocumentPartitioner(partitioner);
	}

