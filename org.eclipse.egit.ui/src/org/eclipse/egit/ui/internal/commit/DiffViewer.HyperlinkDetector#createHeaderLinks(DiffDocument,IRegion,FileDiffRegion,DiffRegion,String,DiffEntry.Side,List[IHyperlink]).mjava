		private void createHeaderLinks(DiffDocument document, IRegion region,
				FileDiffRegion fileRange, DiffRegion range, String line,
				@NonNull DiffEntry.Side side, List<IHyperlink> links) {
			Pattern p = document.getPathPattern(side);
			if (p == null) {
				return;
			}
			DiffEntry.ChangeType change = fileRange.getDiff().getChange();
			switch (side) {
			case OLD:
				if (change == DiffEntry.ChangeType.ADD) {
					return;
				}
				break;
			default:
				if (change == DiffEntry.ChangeType.DELETE) {
					return;
				}
				break;

			}
			Matcher m = p.matcher(line);
			if (m.find()) {
				IRegion linkRegion = new Region(range.getOffset() + m.start(),
						m.end() - m.start());
				if (TextUtilities.overlaps(region, linkRegion)) {
					if (side == DiffEntry.Side.NEW) {
						File file = new Path(fileRange.getDiff().getRepository()
								.getWorkTree().getAbsolutePath()).append(
										fileRange.getDiff().getNewPath())
										.toFile();
						if (file.exists()) {
							links.add(new FileLink(linkRegion, file, -1));
						}
					}
					links.add(new OpenLink(linkRegion, fileRange, side, -1));
				}
			}
		}

