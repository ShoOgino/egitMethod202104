	private void addToolbarActions(IToolBarManager toolbarManager) {
		collapseAction = new Action(UIText.UIUtils_CollapseAll,
				PlatformUI.getWorkbench().getSharedImages().getImageDescriptor(
						ISharedImages.IMG_ELCL_COLLAPSEALL)) {
			@Override
			public void run() {
				UIUtils.collapseAll(getTreeViewer());
			}
		};
		collapseAction.setActionDefinitionId(
				IWorkbenchCommandConstants.NAVIGATE_COLLAPSE_ALL);
		collapseHandler = new ActionHandler(collapseAction);
		IHandlerService handlerService = getSite()
				.getService(IHandlerService.class);
		handlerService.activateHandler(collapseAction.getActionDefinitionId(),
				collapseHandler);

		IPreferenceStore preferences = Activator.getDefault()
				.getPreferenceStore();
		togglePresentationAction = new Action(
				UIText.DiffEditor_OutlineTreeToggle, IAction.AS_CHECK_BOX) {
			@Override
			public void run() {
				boolean compact = isChecked();
				preferences.setValue(UIPreferences.DIFF_OUTLINE_PRESENTATION,
						compact);
				((DiffContentProvider) getTreeViewer().getContentProvider())
						.setCompactTree(compact);
				getTreeViewer().setInput(getTreeViewer().getInput());
			}
		};
		togglePresentationAction.setImageDescriptor(UIIcons.COMPACT);
		togglePresentationAction.setToolTipText(
				UIText.DiffEditor_OutlineShowCompactTreeTooltip);
		boolean compact = preferences
				.getBoolean(UIPreferences.DIFF_OUTLINE_PRESENTATION);
		togglePresentationAction.setChecked(compact);
		updateToolbarActions();
		toolbarManager.add(collapseAction);
		toolbarManager.add(togglePresentationAction);
		((DiffContentProvider) getTreeViewer().getContentProvider())
				.setCompactTree(compact);
		getTreeViewer().setInput(getTreeViewer().getInput());
	}

