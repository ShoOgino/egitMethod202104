	private void reload(final Repository repository) {
		if (form.isDisposed())
			return;
		if (repository == null) {
			asyncExec(new Runnable() {
				public void run() {
					clearRepository();
				}
			});
			return;
		}

		if (!isValidRepo(repository))
			return;

		final boolean repositoryChanged = currentRepository != repository;

		asyncExec(new Runnable() {
			public void run() {
				if (form.isDisposed())
					return;

				final IndexDiffData indexDiff = doReload(repository);

				if(indexDiff ==  null)
					return;

				final StagingViewUpdate update = new StagingViewUpdate(currentRepository, indexDiff, null);
				unstagedTableViewer.setInput(update);
				stagedTableViewer.setInput(update);
				enableCommitWidgets(true);
				commitAction.setEnabled(repository.getRepositoryState()
						.canCommit());
				form.setText(StagingView.getRepositoryName(repository));
				updateCommitMessageComponent(repositoryChanged);
				updateSectionText();
			}
		});
	}

