	private BranchOperation getOperation(boolean restore) {
		BranchOperation bop = new BranchOperation(repository, target, !restore);
		if (restore) {
			final BranchProjectTracker tracker = new BranchProjectTracker(
					repository);
			final AtomicReference<IMemento> memento = new AtomicReference<>();
			bop.addPreExecuteTask(new PreExecuteTask() {

				@Override
				public void preExecute(Repository pRepo,
						IProgressMonitor pMonitor) throws CoreException {
					// Snapshot current projects before checkout
					// begins
					memento.set(tracker.snapshot());
				}
			});
			bop.addPostExecuteTask(new PostExecuteTask() {

				@Override
				public void postExecute(Repository pRepo,
						IProgressMonitor pMonitor) throws CoreException {
					IMemento snapshot = memento.get();
					if (snapshot != null) {
						// Save previous branch's projects and restore
						// current branch's projects
						tracker.save(snapshot).restore(pMonitor);
					}
				}
			});
		}
		return bop;
	}

