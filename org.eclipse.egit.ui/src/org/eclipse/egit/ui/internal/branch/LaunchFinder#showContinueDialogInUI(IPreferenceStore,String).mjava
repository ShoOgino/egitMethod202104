	private static boolean showContinueDialogInUI(final IPreferenceStore store,
			final String launchConfiguration) {
		String[] buttons = new String[] { UIText.BranchOperationUI_Continue,
				IDialogConstants.CANCEL_LABEL };
		String message = NLS.bind(UIText.LaunchFinder_RunningLaunchMessage,
				launchConfiguration) + ' '
				+ UIText.LaunchFinder_ContinueQuestion;
		MessageDialogWithToggle continueDialog = new MessageDialogWithToggle(
				PlatformUI.getWorkbench().getModalDialogShellProvider()
						.getShell(),
				UIText.LaunchFinder_RunningLaunchTitle, null,
				message, MessageDialog.NONE, buttons, 0,
				UIText.LaunchFinder_RunningLaunchDontShowAgain, false);
		int result = continueDialog.open();
		// cancel
		if (result == IDialogConstants.CANCEL_ID || result == SWT.DEFAULT)
			return true;
		boolean dontWarnAgain = continueDialog.getToggleState();
		if (dontWarnAgain)
			store.setValue(
					UIPreferences.SHOW_RUNNING_LAUNCH_ON_CHECKOUT_WARNING,
					false);
		return false;
	}

