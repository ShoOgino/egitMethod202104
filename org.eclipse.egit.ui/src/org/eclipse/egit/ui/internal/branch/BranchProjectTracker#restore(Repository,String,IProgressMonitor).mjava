	/**
	 * Restore projects associated with the given branch to the workspace
	 *
	 * @param repo
	 * @param branch
	 * @param monitor
	 */
	public void restore(Repository repo, final String branch,
			final IProgressMonitor monitor) {
		List<String> paths = ProjectTrackerPreferenceHelper
				.restoreFromPreferences(repo, branch);
		if (paths.isEmpty()) {
			return;
		}
		Set<ProjectRecord> records = new LinkedHashSet<>();
		File parent = repo.getWorkTree();
		for (String path : paths) {
			File root;
			if (!REPO_ROOT.equals(path)) {
				root = new File(parent, path);
			} else {
				root = parent;
			}
			if (!root.isDirectory()) {
				continue;
			}
			File projectDescription = new File(root,
					IProjectDescription.DESCRIPTION_FILE_NAME);
			if (!projectDescription.isFile()) {
				continue;
			}
			ProjectRecord record = new ProjectRecord(projectDescription);
			if (record.getProjectDescription() == null) {
				continue;
			}
			records.add(record);
		}
		if (records.isEmpty()) {
			return;
		}
		try {
			ProjectUtils.createProjects(records, true, null, monitor);
		} catch (InvocationTargetException e) {
			Activator
					.logError("Error restoring branch-project associations", e); //$NON-NLS-1$
		} catch (InterruptedException ignored) {
			// Ignored
		}
	}

