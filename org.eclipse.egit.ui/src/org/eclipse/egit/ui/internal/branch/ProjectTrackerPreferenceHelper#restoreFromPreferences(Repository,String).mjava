	/**
	 * Load the project paths associated with the currently checked out branch.
	 * These paths will be relative to the supplied repository.
	 *
	 * @param repo
	 * @param branch
	 * @return non-null but possibly empty array of projects
	 */
	static List<String> restoreFromPreferences(Repository repo,
			String branch) {

		String key = getPreferenceKey(repo, branch);
		String value = Activator.getDefault().getPreferenceStore()
				.getString(key);

		if (value.length() == 0)
			return Collections.emptyList();

		XMLMemento memento;
		try {
			memento = XMLMemento.createReadRoot(new StringReader(value));
		} catch (WorkbenchException e) {
			Activator.logError("Error reading branch-project associations", e); //$NON-NLS-1$
			return Collections.emptyList();
		}
		IMemento[] children = memento.getChildren(KEY_PROJECT);
		if (children.length == 0)
			return Collections.emptyList();

		List<String> projectPaths = Stream.of(children) //
				.map(child -> child.getTextData()) //
				.filter(x -> !StringUtils.isEmptyOrNull(x)) //
				.collect(Collectors.toList());
		return projectPaths;
	}

