	/**
	 * Starts the operation asynchronously
	 */
	public void start() {

		if (repositories == null || repositories.length == 0) {
			return;
		}

		target = confirmTarget(new NullProgressMonitor());
		if (target == null) {
			return;
		}
		String jobname = getJobName(repositories, target);
		boolean restore = Activator.getDefault().getPreferenceStore()
				.getBoolean(UIPreferences.CHECKOUT_PROJECT_RESTORE);
		final CheckoutJob job = new CheckoutJob(jobname, restore);
		job.setUser(true);
		job.addJobChangeListener(new JobChangeAdapter() {
			@Override
			public void done(IJobChangeEvent cevent) {
				show(job.getCheckoutResult());
			}
		});
		job.schedule();
	}

