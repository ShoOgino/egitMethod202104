	@Override
	protected void buttonPressed(int buttonId) {
		boolean shouldCheckout = false;
		switch (buttonId) {
		case IDialogConstants.PROCEED_ID:
			CommitUI commitUI = new CommitUI(getShell(), repository, new IResource[0], true);
			shouldCheckout = commitUI.commit();
			break;
		case IDialogConstants.ABORT_ID:
			final ResetOperation operation = new ResetOperation(repository,
					Constants.HEAD, ResetType.HARD);
			String jobname = NLS.bind(UIText.ResetAction_reset, Constants.HEAD);
			JobUtil.scheduleUserJob(operation, jobname, JobFamilies.RESET);
			shouldCheckout = true;
			break;
		case IDialogConstants.SKIP_ID:
			StashCreateUI stashCreateUI = new StashCreateUI(getShell(), repository);
			shouldCheckout = stashCreateUI.createStash();
			break;
		case IDialogConstants.OK_ID:
			super.buttonPressed(buttonId);
			break;
		}
		if (shouldCheckout) {
			super.buttonPressed(buttonId);
			BranchOperationUI op = BranchOperationUI.checkout(repository, target);
			op.start();
		}
	}

