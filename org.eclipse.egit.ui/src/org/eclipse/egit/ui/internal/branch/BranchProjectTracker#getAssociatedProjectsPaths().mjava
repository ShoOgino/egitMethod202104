	@NonNull
	private List<String> getAssociatedProjectsPaths() {

		IProject[] projects = getValidOpenProjects();
		if (projects == null) {
			return Collections.emptyList();
		}

		List<String> projectPaths = new ArrayList<>();

		final String workDir = repository.getWorkTree().getAbsolutePath();
		for (IProject project : projects) {
			IPath path = project.getLocation();
			if (path == null) {
				continue;
			}
			// Only remember mapped projects
			if (!ResourceUtil.isSharedWithGit(project)) {
				continue;
			}
			String fullPath = path.toOSString();
			if (fullPath.startsWith(workDir)) {
				String relative = fullPath.substring(workDir.length());
				if (relative.length() == 0) {
					relative = REPO_ROOT;
				}
				projectPaths.add(relative);
			}
		}
		return projectPaths;
	}

