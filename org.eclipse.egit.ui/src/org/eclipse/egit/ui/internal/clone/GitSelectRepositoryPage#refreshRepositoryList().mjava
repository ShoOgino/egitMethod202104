	private void refreshRepositoryList() {
		List<?> dirsBefore = (List<?>) tv.getInput();
		List<String> dirsAfter = util.getConfiguredRepositories();
		if (dirsBefore == null) {
			dirsBefore = Collections.emptyList();
		}
		if (!dirsBefore.containsAll(dirsAfter)) {
			tv.setInput(dirsAfter);
			for (String dir : dirsAfter) {
				if (!dirsBefore.contains(dir)) {
					try {
						Repository newRepository = org.eclipse.egit.core.Activator
								.getDefault().getRepositoryCache()
								.lookupRepository(new File(dir));
						RepositoryNode node = new RepositoryNode(null,
								newRepository);
						tv.setSelection(new StructuredSelection(node));
						break;
					} catch (IOException e1) {
						Activator.handleError(e1.getMessage(), e1,
								false);
					}
				}
			}
		}
	}

