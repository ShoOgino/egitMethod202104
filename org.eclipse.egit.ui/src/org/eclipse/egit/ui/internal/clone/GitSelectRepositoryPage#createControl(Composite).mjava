	public void createControl(Composite parent) {
		Composite main = new Composite(parent, SWT.NONE);

		GridLayoutFactory.fillDefaults().numColumns(2).margins(0, 0).applyTo(
				main);

		GridDataFactory.fillDefaults().grab(true, true).applyTo(main);

		tv = new TableViewer(main, SWT.SINGLE | SWT.H_SCROLL | SWT.V_SCROLL
				| SWT.BORDER);
		tv.setContentProvider(new RepositoriesViewContentProvider());
		GridDataFactory.fillDefaults().grab(true, true).applyTo(tv.getTable());
		new RepositoriesViewLabelProvider(tv);

		Composite tb = new Composite(main, SWT.NONE);
		GridLayoutFactory.fillDefaults().numColumns(1).applyTo(tb);
		GridDataFactory.fillDefaults().grab(false, true).applyTo(tb);

		cloneRepo = new Button(tb, SWT.PUSH);
		cloneRepo.setText(UIText.GitSelectRepositoryPage_CloneButton);
		cloneRepo
				.setToolTipText(UIText.GitSelectRepositoryPage_CloneTooltip);

		GridDataFactory.fillDefaults().grab(false, false).align(SWT.FILL,
				SWT.BEGINNING).applyTo(cloneRepo);

		cloneRepo.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				WizardDialog dlg = new WizardDialog(getShell(),
						new GitCloneWizard());

				if (dlg.open() == Window.OK) {
					try {
						tv.setInput(RepositoriesView
								.getRepositoriesFromDirs(null));
						checkPage();
					} catch (InterruptedException e1) {
						// ignore
					}
				}
			}

		});

		addRepo = new Button(tb, SWT.PUSH);
		GridDataFactory.fillDefaults().grab(true, false).align(SWT.FILL,
				SWT.BEGINNING).applyTo(addRepo);
		addRepo.setText(UIText.GitSelectRepositoryPage_AddButton);
		addRepo
				.setToolTipText(UIText.GitSelectRepositoryPage_AddTooltip);
		addRepo.addSelectionListener(new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				RepositorySearchDialog dlg = new RepositorySearchDialog(
						getShell(), RepositoriesView.getDirs());
				if (dlg.open() == Window.OK && dlg.getDirectories().size() > 0) {
					try {
						Set<String> dirs = dlg.getDirectories();
						for (String dir : dirs)
							RepositoriesView.addDir(new File(dir));

						tv.setInput(RepositoriesView
								.getRepositoriesFromDirs(null));
						checkPage();
					} catch (InterruptedException e1) {
						// ignore
					}
				}
			}

		});

		tv.addSelectionChangedListener(new ISelectionChangedListener() {

			public void selectionChanged(SelectionChangedEvent event) {
				checkPage();
			}
		});

		try {
			tv.setInput(RepositoriesView.getRepositoriesFromDirs(null));
		} catch (InterruptedException e) {
			// ignore
		}

		// we need to select at least a repository to become complete
		setPageComplete(false);

		setControl(main);

	}

