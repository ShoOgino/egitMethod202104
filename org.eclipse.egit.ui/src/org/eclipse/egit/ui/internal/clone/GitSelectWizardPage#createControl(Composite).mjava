	public void createControl(Composite parent) {

		Composite main = new Composite(parent, SWT.NO_RADIO_GROUP);

		main.setLayout(new GridLayout(1, false));

		SelectionListener sl = new SelectionAdapter() {

			@Override
			public void widgetSelected(SelectionEvent e) {
				checkPage();
			}
		};

		Group wizardType = new Group(main, SWT.SHADOW_ETCHED_IN);
		GridDataFactory.fillDefaults().grab(true, false).applyTo(wizardType);
		wizardType.setText(UIText.GitSelectWizardPage_ProjectCreationHeader);
		wizardType.setLayout(new GridLayout(1, false));

		importExisting = new Button(wizardType, SWT.RADIO);
		importExisting.setText(UIText.GitSelectWizardPage_ImportExistingButton);
		importExisting.addSelectionListener(sl);

		newProjectWizard = new Button(wizardType, SWT.RADIO);
		newProjectWizard
				.setText(UIText.GitSelectWizardPage_UseNewProjectsWizardButton);
		newProjectWizard.addSelectionListener(sl);

		generalWizard = new Button(wizardType, SWT.RADIO);
		generalWizard.setText(UIText.GitSelectWizardPage_ImportAsGeneralButton);
		generalWizard.addSelectionListener(sl);

		Group afterImportAction = new Group(main, SWT.SHADOW_ETCHED_IN);
		GridDataFactory.fillDefaults().grab(true, false).applyTo(
				afterImportAction);
		afterImportAction
				.setText(UIText.GitSelectWizardPage_SharingProjectsHeader);
		afterImportAction.setLayout(new GridLayout(1, false));

		actionAutoShare = new Button(afterImportAction, SWT.RADIO);
		actionAutoShare.setText(UIText.GitSelectWizardPage_AutoShareButton);
		actionAutoShare.addSelectionListener(sl);

		actionDialogShare = new Button(afterImportAction, SWT.RADIO);
		actionDialogShare
				.setText(UIText.GitSelectWizardPage_InteractiveShareButton);
		actionDialogShare.addSelectionListener(sl);

		actionNothing = new Button(afterImportAction, SWT.RADIO);
		actionNothing.setText(UIText.GitSelectWizardPage_NoShareButton);
		actionNothing.addSelectionListener(sl);

		IDialogSettings settings = Activator.getDefault().getDialogSettings();
		int previousWiz;
		try {
			previousWiz = settings.getInt(PREF_WIZ);
		} catch (NumberFormatException e) {
			previousWiz = EXISTING_PROJECTS_WIZARD;
		}
		switch (previousWiz) {
		case EXISTING_PROJECTS_WIZARD:
			importExisting.setSelection(true);
			break;
		case GENERAL_WIZARD:
			generalWizard.setSelection(true);
			break;
		case NEW_WIZARD:
			newProjectWizard.setEnabled(true);
			break;

		}

		int previousAct;
		try {
			previousAct = settings.getInt(PREF_ACT);
		} catch (NumberFormatException e) {
			previousAct = ACTION_AUTO_SHARE;
		}
		switch (previousAct) {
		case ACTION_AUTO_SHARE:
			actionAutoShare.setSelection(true);
			break;
		case ACTION_DIALOG_SHARE:
			actionDialogShare.setSelection(true);
			break;
		case ACTION_NO_SHARE:
			actionNothing.setSelection(true);
			break;
		}

		setControl(main);

	}

