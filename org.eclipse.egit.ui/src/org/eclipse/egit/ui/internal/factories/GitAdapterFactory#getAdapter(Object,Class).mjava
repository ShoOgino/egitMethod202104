	public Object getAdapter(Object adaptableObject, Class adapterType) {
		if (adapterType.isAssignableFrom(IHistoryPageSource.class)) {
			return historyPageSource;
		}

		if (IWorkbenchAdapter.class == adapterType) {
			if (adaptableObject instanceof RepositoryNode)
				return getRepsitoryNodeWorkbenchAdapter((RepositoryNode)adaptableObject);

			if (gitModelWorkbenchAdapter == null)
				gitModelWorkbenchAdapter = new GitModelWorkbenchAdapter();
			return gitModelWorkbenchAdapter;
		}

		if (adaptableObject instanceof GitModelObject
				&& adapterType == ResourceMapping.class)
			return GitObjectMapping.create((GitModelObject) adaptableObject);

		if (adaptableObject instanceof GitModelObject
				&& adapterType == IResource.class) {
			GitModelObject obj = (GitModelObject) adaptableObject;

			if (obj instanceof GitModelBlob) {
				IResource res = root.getFileForLocation(obj.getLocation());
				if (res == null)
					res = root.getFile(obj.getLocation());

				return res;
			}

			if (obj instanceof GitModelTree) {
				IResource res = root.getContainerForLocation(obj.getLocation());
				if (res == null)
					res = root.getFolder(obj.getLocation());

				return res;
			}
		}

		return null;
	}

