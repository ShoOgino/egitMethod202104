	@Override
	public <T> T getAdapter(Object adaptableObject, Class<T> adapterType) {
		if (adapterType.isAssignableFrom(IHistoryPageSource.class)) {
			return adapterType.cast(GitHistoryPageSource.INSTANCE);
		}

		if (IWorkbenchAdapter.class == adapterType) {
			if (adaptableObject instanceof RepositoryTreeNode) {
				return adapterType
						.cast(RepositoryTreeNodeWorkbenchAdapter.INSTANCE);
			} else if (adaptableObject instanceof FileDiff) {
				return adapterType.cast(FileDiffWorkbenchAdapter.INSTANCE);
			}

			if (gitModelWorkbenchAdapter == null) {
				gitModelWorkbenchAdapter = new GitModelWorkbenchAdapter();
			}
			return adapterType.cast(gitModelWorkbenchAdapter);
		}

		if (adaptableObject instanceof IHistoryView
				&& IShowInSource.class == adapterType) {
			IHistoryView historyView = (IHistoryView) adaptableObject;
			IHistoryPage historyPage = historyView.getHistoryPage();
			if (historyPage instanceof GitHistoryPage) {
				return adapterType.cast(historyPage);
			}
		}

		if (adaptableObject instanceof IURIEditorInput
				&& adapterType == Repository.class) {
			return adapterType
					.cast(getRepository((IURIEditorInput) adaptableObject));
		}

		if (adaptableObject instanceof IURIEditorInput
				&& adapterType == File.class) {
			return adapterType.cast(getFile((IURIEditorInput) adaptableObject));
		}

		if (adaptableObject instanceof GitModelObject
				&& adapterType == ResourceMapping.class) {
			return adapterType.cast(
					GitObjectMapping.create((GitModelObject) adaptableObject));
		}

		if (adaptableObject instanceof GitModelObject
				&& adapterType == IResource.class) {
			GitModelObject obj = (GitModelObject) adaptableObject;

			if (obj instanceof GitModelBlob) {
				IResource res = ResourceUtil
						.getFileForLocation(obj.getLocation(), false);
				if (res == null) {
					// Deleted resource?
					res = getWorkspaceResourceFromGitPath(obj.getLocation());
				}

				return adapterType.cast(res);
			}

			if (obj instanceof GitModelTree) {
				IResource res = root.getContainerForLocation(obj.getLocation());
				if (res == null) {
					res = root.getFolder(obj.getLocation());
				}

				return adapterType.cast(res);
			}
		}

		if (adapterType == Repository.class) {
			ResourceMapping m = Adapters.adapt(adaptableObject,
					ResourceMapping.class);
			if (m != null) {
				return adapterType.cast(SelectionUtils
						.getRepository(new StructuredSelection(m)));
			}
		}

		return null;
	}

