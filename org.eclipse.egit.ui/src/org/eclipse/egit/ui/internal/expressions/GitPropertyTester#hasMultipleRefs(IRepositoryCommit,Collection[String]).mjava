	private boolean hasMultipleRefs(IRepositoryCommit commit,
			Collection<String> names) {
		Repository repository = commit.getRepository();
		if (repository == null) {
			return false;
		}
		int count = 0;
		RevCommit revCommit = commit.getRevCommit();
		if (revCommit instanceof PlotCommit) {
			int n = ((PlotCommit) revCommit).getRefCount();
			for (int i = 0; i < n; i++) {
				Ref ref = ((PlotCommit) revCommit).getRef(i);
				for (String name : names) {
					if (ref.getName().startsWith(name)) {
						if (++count > 1) {
							break;
						}
					}
				}
				if (count > 1) {
					return true;
				}
			}
		} else {
			try {
				ObjectId selectedId = commit.getRevCommit().getId();
				for (String name : names) {
					for (Ref branch : repository.getRefDatabase()
							.getRefsByPrefix(name)) {
						ObjectId objectId = branch.getLeaf().getObjectId();
						if (objectId != null && objectId.equals(selectedId)) {
							if (++count > 1) {
								return true;
							}
						}
					}
				}
			} catch (IOException e) {
				// ignore here
			}
		}
		return false;
	}

