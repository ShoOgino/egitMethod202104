	@Override
	public IStatus run(IProgressMonitor monitor) {
		while (!elementList.isEmpty()) {
			final Object[] elements;
			synchronized (this) {
				// Get decoration requests as array and clear the queue
				elements = elementList.toArray(new Object[elementList.size()]);
				elementList.clear();
			}
			try {
				// Call GitLightweightDecorator to process the decoration
				// requests
				GitLightweightDecorator.processDecoration(elements);
			} catch (Exception e) {
				// Exceptions can be caused by concurrent threads and thus
				// should be ignored
				if (GitTraceLocation.DECORATION.isActive())
					GitTraceLocation.getTrace().trace(
							GitTraceLocation.DECORATION.getLocation(),
							"An error occurred during resource decoration", e); //$NON-NLS-1$
			}
		}
		return Status.OK_STATUS;
	}

