	/**
	 * Callback for IPropertyChangeListener events
	 *
	 * If any of the relevant preferences has been changed we refresh all
	 * decorations (all projects and their resources).
	 *
	 * @see org.eclipse.jface.util.IPropertyChangeListener#propertyChange(org.eclipse.jface.util.PropertyChangeEvent)
	 */
	@Override
	public void propertyChange(PropertyChangeEvent event) {
		final String prop = event.getProperty();
		if (prop == null) {
			return;
		}
		switch (prop) {
		case TeamUI.GLOBAL_IGNORES_CHANGED:
		case TeamUI.GLOBAL_FILE_TYPES_CHANGED:
		case Activator.DECORATORS_CHANGED:
			postLabelEvent();
			break;
		case IThemeManager.CHANGE_CURRENT_THEME:
		case TREE_TABLE_FONT:
		case UIPreferences.THEME_UncommittedChangeBackgroundColor:
		case UIPreferences.THEME_UncommittedChangeFont:
		case UIPreferences.THEME_UncommittedChangeForegroundColor:
		case UIPreferences.THEME_IgnoredResourceFont:
		case UIPreferences.THEME_IgnoredResourceBackgroundColor:
		case UIPreferences.THEME_IgnoredResourceForegroundColor:
			resources.reload();
			postLabelEvent();
			break;
		default:
			break;
		}
	}

