		private void decorateFontAndColour(IDecoration decoration,
				IDecoratableResource resource) {
			Color bc = null;
			Color fc = null;
			Font f = null;
			if (resource.isIgnored()) {
				bc = resources.getColor(
						UIPreferences.THEME_IgnoredResourceBackgroundColor);
				fc = resources.getColor(
						UIPreferences.THEME_IgnoredResourceForegroundColor);
				f = resources.getFont(
						UIPreferences.THEME_IgnoredResourceFont);
			} else if (!resource.isTracked()
					|| resource.isDirty()
					|| resource.isStaged()) {
				bc = resources.getColor(
						UIPreferences.THEME_UncommittedChangeBackgroundColor);
				fc = resources.getColor(
						UIPreferences.THEME_UncommittedChangeForegroundColor);
				f = resources.getFont(
						UIPreferences.THEME_UncommittedChangeFont);
			}
			if (bc != null) {
				setBackgroundColor(decoration, bc);
			}
			if (fc != null) {
				decoration.setForegroundColor(fc);
			}
			if (f == null
					|| isSameFont(f, resources.getDefaultFont())) {
				// Try the TREE_TABLE_FONT new in Eclipse 4.17
				Font treeTableFont = resources.getFont(TREE_TABLE_FONT);
				if (treeTableFont != null) {
					f = treeTableFont;
				}
			}
			if (f != null) {
				decoration.setFont(f);
			}
		}

