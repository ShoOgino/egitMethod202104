	private void updateMessage() {
		if (commitButton == null)
			// Not yet fully initialized.
			return;

		String message = null;
		int type = IMessageProvider.NONE;

		boolean ignoreErrorsValue = ignoreErrors == null ? true
				: !ignoreErrors.getSelection();
		boolean hasErrorsOrWarnings = getPreferenceStore()
				.getBoolean(UIPreferences.WARN_BEFORE_COMMITTING)
						? (getProblemsSeverity() >= Integer
								.parseInt(getPreferenceStore().getString(
										UIPreferences.WARN_BEFORE_COMMITTING_LEVEL))
								&& ignoreErrorsValue)
						: false;
		if (hasErrorsOrWarnings) {
			message = UIText.CommitDialog_MessageErrors;
			type = IMessageProvider.WARNING;
		} else {
			String commitMsg = commitMessageComponent.getCommitMessage();
			if (commitMsg == null || commitMsg.trim().length() == 0) {
				message = UIText.CommitDialog_Message;
				type = IMessageProvider.INFORMATION;
			} else if (!isCommitWithoutFilesAllowed()) {
				message = UIText.CommitDialog_MessageNoFilesSelected;
				type = IMessageProvider.INFORMATION;
			} else {
				CommitStatus status = commitMessageComponent.getStatus();
				message = status.getMessage();
				type = status.getMessageType();
			}
		}
		setMessage(message, type);
		boolean commitBlocked = getPreferenceStore()
				.getBoolean(UIPreferences.WARN_BEFORE_COMMITTING)
				&& getPreferenceStore().getBoolean(UIPreferences.BLOCK_COMMIT)
						? (getProblemsSeverity() >= Integer
								.parseInt(getPreferenceStore().getString(
										UIPreferences.BLOCK_COMMIT_LEVEL))
								&& ignoreErrorsValue)
						: false;
		boolean commitEnabled = (type == IMessageProvider.WARNING
				|| type == IMessageProvider.NONE) && !commitBlocked;
		updateCommitButtons(commitEnabled);
	}

