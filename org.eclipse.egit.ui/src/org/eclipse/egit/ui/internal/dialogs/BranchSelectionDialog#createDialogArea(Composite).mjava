	@Override
	protected Composite createDialogArea(Composite base) {
		Composite parent = (Composite) super.createDialogArea(base);
		parent.setLayout(GridLayoutFactory.swtDefaults().create());
		new Label(parent, SWT.NONE).setText(UIText.BranchSelectionDialog_Refs);
		branchTree = new Tree(parent, SWT.BORDER);
		branchTree.setLayoutData(GridDataFactory.fillDefaults().grab(true,true).hint(500, 300).create());
		branchTree.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				// enable the buttons depending on the selection
				boolean oneSelected = branchTree.getSelection().length == 1;

				String refName = refNameFromDialog();

				boolean headSelected = Constants.HEAD.equals(refName);

				boolean tagSelected = refName!=null && refName.startsWith(
						Constants.R_TAGS);

				boolean branchSelected = refName!=null && (refName.startsWith(Constants.R_HEADS) || refName.startsWith(Constants.R_REMOTES));

				// TODO add support for checkout of tags
				confirmationBtn.setEnabled(oneSelected && branchSelected && !headSelected
						&& !tagSelected);

				if (!showResetType) {
					// we don't support rename on tags
					renameButton.setEnabled(oneSelected && branchSelected && !headSelected && !tagSelected);

					// new branch can not be based on a tag
					newButton.setEnabled(oneSelected && branchSelected && !tagSelected);
				}
			}
		});

		if (showResetType) {
			buildResetGroup(parent);
		}

		String rawTitle = showResetType ? UIText.BranchSelectionDialog_TitleReset
				: UIText.BranchSelectionDialog_TitleCheckout;
		getShell().setText(
				NLS.bind(rawTitle, new Object[] { repo.getDirectory() }));

		try {
			fillTreeWithBranches(null);
		} catch (Throwable e) {
			Activator.logError(UIText.BranchSelectionDialog_ErrorCouldNotRefresh, e);
		}

		return parent;
	}

