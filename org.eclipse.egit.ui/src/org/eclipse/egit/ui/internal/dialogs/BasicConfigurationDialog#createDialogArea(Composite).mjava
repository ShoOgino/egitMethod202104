	@Override
	protected Control createDialogArea(Composite parent) {
		userScopedConfig = SystemReader.getInstance().openUserConfig(null,
				FS.DETECTED);
		try {
			userScopedConfig.load();
		} catch (IOException e) {
			Activator.handleError(e.getMessage(), e, true);
		} catch (ConfigInvalidException e) {
			Activator.handleError(e.getMessage(), e, true);
		}
		config = userScopedConfig.get(UserConfig.KEY);
		Composite main = new Composite(parent, SWT.NONE);
		main.setLayout(new GridLayout(2, false));
		GridDataFactory.fillDefaults().grab(true, true).applyTo(main);

		// user name
		Label userNameLabel = new Label(main, SWT.NONE);
		userNameLabel.setText(UIText.BasicConfigurationDialog_UserNameLabel);
		userName = new Text(main, SWT.BORDER);
		GridDataFactory.fillDefaults().grab(true, false).applyTo(userName);
		String currentName = null;
		if (config != null)
			currentName = config.getAuthorName();
		if (currentName != null)
			userName.setText(currentName);
		userName.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				needsUpdate = true;
			}
		});

		// user email
		Label emailLabel = new Label(main, SWT.NONE);
		emailLabel.setText(UIText.BasicConfigurationDialog_UserEmailLabel);
		email = new Text(main, SWT.BORDER);
		GridDataFactory.fillDefaults().grab(true, false).applyTo(email);
		String currentMail = null;
		if (config != null)
			currentMail = config.getAuthorEmail();
		if (currentMail != null)
			email.setText(currentMail);
		email.addModifyListener(new ModifyListener() {
			public void modifyText(ModifyEvent e) {
				needsUpdate = true;
			}
		});

		dontShowAgain = new Button(main, SWT.CHECK);
		GridDataFactory.fillDefaults().span(2, 1).applyTo(dontShowAgain);
		dontShowAgain.setText("&Don't show this dialog again"); //$NON-NLS-1$
		dontShowAgain.setSelection(true);

		Link link = new Link(main, SWT.UNDERLINE_LINK);
		GridDataFactory.fillDefaults().span(2, 1).applyTo(link);
		link.setText("Open the <a>Git Configuration</a> Preference Page"); //$NON-NLS-1$
		link.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				PreferencesUtil.createPreferenceDialogOn(getShell(),
						GlobalConfigurationPreferencePage.ID, null, null)
						.open();
			}
		});
		applyDialogFont(main);
		return main;
	}

