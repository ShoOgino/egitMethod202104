	@Override
	protected void buttonPressed(int buttonId) {
		switch (buttonId) {
		case IDialogConstants.PROCEED_ID:
			if (needResult) {
				CommitUI commitUI = new CommitUI(getShell(), repository,
						new IResource[0], true);
				shouldContinue = commitUI.commit();
			} else {
				CommonUtils.runCommand(ActionCommands.COMMIT_ACTION,
						new StructuredSelection(repository));
			}
			break;
		case IDialogConstants.ABORT_ID:
			DiscardChangesOperation operation = new DiscardChangesOperation(
					repository, fileList);
			JobUtil.scheduleUserWorkspaceJob(operation,
					UIText.DiscardChangesAction_discardChanges,
					JobFamilies.DISCARD_CHANGES);
			shouldContinue = true;
			break;
		case IDialogConstants.SKIP_ID:
			StashCreateUI stashCreateUI = new StashCreateUI(repository);
			shouldContinue = stashCreateUI.createStash(getShell());
			break;
		case IDialogConstants.CANCEL_ID:
		default:
			break;
		}
		super.buttonPressed(buttonId);
	}

