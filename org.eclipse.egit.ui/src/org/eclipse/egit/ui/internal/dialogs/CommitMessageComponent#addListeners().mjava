	private void addListeners() {
		authorHandler = UIUtils.addPreviousValuesContentProposalToText(
				authorText, AUTHOR_VALUES_PREF);
		authorText.addModifyListener(new ModifyListener() {
			@Override
			public void modifyText(ModifyEvent e) {
				if (!listenersEnabled || !authorText.isEnabled())
					return;
				listener.statusUpdated();
			}
		});
		committerText.addModifyListener(new ModifyListener() {
			String oldCommitter = committerText.getText().trim();

			@Override
			public void modifyText(ModifyEvent e) {
				String newCommitter = committerText.getText().trim();
				if (!listenersEnabled || !committerText.isEnabled()) {
					if (!oldCommitter.equals(newCommitter) && RawParseUtils
							.parsePersonIdent(newCommitter) != null) {
						oldCommitter = newCommitter;
					}
					return;
				}
				if (!oldCommitter.equals(newCommitter) && RawParseUtils
						.parsePersonIdent(newCommitter) != null) {
					String oldCommitText = commitText.getText();
					String newCommitText = oldCommitText;
					String currentAuthor = authorText.getText().trim();
					if (newCommitter.equals(currentAuthor)) {
						if (signedOff) {
							// Only add a new signed-off if there isn't one
							// already
							String signOff = getSignedOff(newCommitter);
							if (!hasSignOff(oldCommitText, signOff)) {
								newCommitText = signOff(oldCommitText);
							}
						}
					} else {
						String oldSignOff = getSignedOff(oldCommitter);
						String newSignOff = getSignedOff(newCommitter);
						newCommitText = replaceSignOff(oldCommitText,
								oldSignOff, newSignOff);
					}
					if (!oldCommitText.equals(newCommitText)) {
						commitText.setText(newCommitText);
					}
					oldCommitter = newCommitter;
				}
				listener.statusUpdated();
			}
		});
		committerHandler = UIUtils.addPreviousValuesContentProposalToText(
				committerText, COMMITTER_VALUES_PREF);
		commitText.getDocument().addDocumentListener(new IDocumentListener() {
			@Override
			public void documentChanged(DocumentEvent event) {
				if (!listenersEnabled || !commitText.isEnabled())
					return;
				updateSignedOffButton();
				updateChangeIdButton();
				listener.statusUpdated();
			}
			@Override
			public void documentAboutToBeChanged(DocumentEvent event) {
				// nothing to do
			}
		});
	}

