	void setData(final Repository localDb, final PushOperationResult result) {
		reader = localDb.newObjectReader();
		abbrevations = new HashMap<ObjectId,String>();

		// We have to recreate columns.
		for (final TableColumn tc : tableViewer.getTable().getColumns())
			tc.dispose();
		// Set empty result for a while.
		tableViewer.setInput(null);

		// Layout should be recreated to work properly.
		final TableColumnLayout layout = new TableColumnLayout();
		tablePanel.setLayout(layout);

		final TableViewerColumn modeViewer = createColumn(layout,
				UIText.PushResultTable_columnMode, COLUMN_MODE_WEIGHT,
				SWT.CENTER);
		modeViewer.setLabelProvider(new CenteredImageLabelProvider() {
			@Override
			public Image getImage(Object element) {
				if (((RefUpdateElement) element).isDelete())
					return imageRegistry.get(IMAGE_DELETE);
				return imageRegistry.get(IMAGE_ADD);
			}

			@Override
			public String getToolTipText(Object element) {
				if (((RefUpdateElement) element).isDelete())
					return UIText.RefSpecPanel_modeDeleteDescription;
				return UIText.RefSpecPanel_modeUpdateDescription;
			}
		});

		final TableViewerColumn srcViewer = createColumn(layout,
				UIText.PushResultTable_columnSrc, COLUMN_SRC_WEIGHT, SWT.LEFT);
		srcViewer.setLabelProvider(new ColumnLabelProvider() {
			@Override
			public String getText(Object element) {
				return ((RefUpdateElement) element).getSrcRefName();
			}
		});

		final TableViewerColumn dstViewer = createColumn(layout,
				UIText.PushResultTable_columnDst, COLUMN_DST_WEIGHT, SWT.LEFT);
		dstViewer.setLabelProvider(new ColumnLabelProvider() {
			@Override
			public String getText(Object element) {
				return ((RefUpdateElement) element).getDstRefName();
			}
		});

		if (result == null) {
			tablePanel.layout();
			return;
		}

		int i = 0;
		for (final URIish uri : result.getURIs()) {
			final TableViewerColumn statusViewer = createColumn(layout, NLS
					.bind(UIText.PushResultTable_columnStatusRepo, Integer
							.toString(++i)), COLUMN_STATUS_WEIGHT, SWT.LEFT);
			statusViewer.getColumn().setToolTipText(uri.toString());
			statusViewer.setLabelProvider(new UpdateStatusLabelProvider(uri));
		}
		tableViewer.setInput(result);
		// select the first row of table to get the details of the first
		// push result shown in the Text control
		Table table = tableViewer.getTable();
		if (table.getItemCount()>0) {
			tableViewer.setSelection(new StructuredSelection(table.getItem(0).getData()));
		}
		tablePanel.layout();
	}

