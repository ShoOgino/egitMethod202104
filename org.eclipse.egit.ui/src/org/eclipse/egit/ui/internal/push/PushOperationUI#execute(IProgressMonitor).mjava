	/**
	 * Executes this directly, without showing a confirmation dialog
	 *
	 * @param monitor
	 * @return the result of the operation
	 * @throws CoreException
	 */
	public PushOperationResult execute(IProgressMonitor monitor)
			throws CoreException {
		if (spec == null) {
			// we don't use the configuration directly, as it may contain
			// unsaved changes and as we may need
			// to add the default push RefSpec here
			spec = new PushOperationSpecification();

			List<URIish> urisToPush = new ArrayList<URIish>();
			for (URIish uri : config.getPushURIs())
				urisToPush.add(uri);
			if (urisToPush.isEmpty() && !config.getURIs().isEmpty())
				urisToPush.add(config.getURIs().get(0));

			List<RefSpec> pushRefSpecs = new ArrayList<RefSpec>();
			pushRefSpecs.addAll(config.getPushRefSpecs());
			if (pushRefSpecs.isEmpty())
				// default push to all branches
				pushRefSpecs.add(DEFAULT_PUSH_REF_SPEC);

			for (URIish uri : urisToPush) {
				try {
					spec.addURIRefUpdates(uri, Transport.open(repository, uri)
							.findRemoteRefUpdatesFor(pushRefSpecs));
				} catch (NotSupportedException e) {
					throw new CoreException(Activator.createErrorStatus(
							e.getMessage(), e));
				} catch (IOException e) {
					throw new CoreException(Activator.createErrorStatus(
							e.getMessage(), e));
				}
			}
		}

		op = new PushOperation(repository, spec, dryRun, timeout);
		if (credentialsProvider != null)
			op.setCredentialsProvider(credentialsProvider);

		try {
			op.run(monitor);
			return op.getOperationResult();
		} catch (InvocationTargetException e) {
			throw new CoreException(Activator.createErrorStatus(e.getCause()
					.getMessage(), e.getCause()));
		}
	}

