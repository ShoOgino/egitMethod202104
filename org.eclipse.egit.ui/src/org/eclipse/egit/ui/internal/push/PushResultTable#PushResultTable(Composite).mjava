	PushResultTable(final Composite parent) {
		tablePanel = new Composite(parent, SWT.NONE);
		tablePanel.setLayout(new GridLayout());
		final GridData layoutData = new GridData(SWT.FILL, SWT.FILL, true, true);
		layoutData.heightHint = TABLE_PREFERRED_HEIGHT;
		layoutData.widthHint = TABLE_PREFERRED_WIDTH;
		tableViewer = new TableViewer(tablePanel);
		ColumnViewerToolTipSupport.enableFor(tableViewer);
		final Table table = tableViewer.getTable();
		table.setLinesVisible(true);
		table.setHeaderVisible(true);

		imageRegistry = new ImageRegistry(table.getDisplay());
		imageRegistry.put(IMAGE_ADD, UIIcons.ELCL16_ADD);
		imageRegistry.put(IMAGE_DELETE, UIIcons.ELCL16_DELETE);

		colorRegistry = new ColorRegistry(table.getDisplay());
		colorRegistry.put(COLOR_REJECTED_KEY, COLOR_REJECTED);
		colorRegistry.put(COLOR_UPDATED_KEY, COLOR_UPDATED);
		colorRegistry.put(COLOR_UP_TO_DATE_KEY, COLOR_UP_TO_DATE);

		tablePanel.addDisposeListener(new DisposeListener() {
			public void widgetDisposed(DisposeEvent e) {
				imageRegistry.dispose();
			}
		});

		tableViewer.setComparer(new IElementComparer() {
			// we need this to keep refresh() working while having custom
			// equals() in PushOperationResult
			public boolean equals(Object a, Object b) {
				return a == b;
			}

			public int hashCode(Object element) {
				return element.hashCode();
			}
		});
		tableViewer.setContentProvider(new RefUpdateContentProvider());
		tableViewer.setInput(null);
	}

