	@Test
	public void testGetFilters() throws Exception {
		when(prefStore
				.getString(eq(getRepoSpecificPrefKeyForConfiguredFilters())))
						.thenReturn("Mock:test:filter");
		when(prefStore
				.getString(eq(getRepoSpecificPrefKeyForSelectedFilters())))
						.thenReturn("HEAD:test");
		Set<RefFilter> result = refFilterHelper.getRefFilters();

		List<Matcher<? super RefFilter>> expected = new ArrayList<>();
		expected.add(newRefFilterMatcher("HEAD", true, true));
		expected.add(
				newRefFilterMatcher("refs/**/${git_branch}", true, false));
		expected.add(newRefFilterMatcher("refs/heads/**", true, false));
		expected.add(newRefFilterMatcher("refs/remotes/**", true, false));
		expected.add(newRefFilterMatcher("refs/tags/**", true, false));
		expected.add(newRefFilterMatcher("Mock", false, false));
		expected.add(newRefFilterMatcher("test", false, true));
		expected.add(newRefFilterMatcher("filter", false, false));

		assertThat("Expected different filters", result,
				containsInAnyOrder(expected));
	}

