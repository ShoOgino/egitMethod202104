	@Test
	public void testSelectExactlyAllBranchesAndTags() throws Exception {
		Set<RefFilter> testSet = new HashSet<>();
		testSet.add(newRefFilter("HEAD", true, false));
		testSet.add(newRefFilter("refs/**/[CURRENT-BRANCH]", true,
				false));
		testSet.add(newRefFilter("refs/heads/**", true, true));
		testSet.add(newRefFilter("refs/remotes/**", true, false));
		testSet.add(newRefFilter("refs/tags/**", true, false));
		testSet.add(newRefFilter("Mock", false, false));
		testSet.add(newRefFilter("test", false, false));
		testSet.add(newRefFilter("filter", false, true));

		List<Matcher<? super RefFilter>> expected = new ArrayList<>();
		expected.add(newRefFilterMatcher("HEAD", true, true));
		expected.add(
				newRefFilterMatcher("refs/**/[CURRENT-BRANCH]", true, false));
		expected.add(newRefFilterMatcher("refs/heads/**", true, true));
		expected.add(newRefFilterMatcher("refs/remotes/**", true, true));
		expected.add(newRefFilterMatcher("refs/tags/**", true, true));
		expected.add(newRefFilterMatcher("Mock", false, false));
		expected.add(newRefFilterMatcher("test", false, false));
		expected.add(newRefFilterMatcher("filter", false, false));

		refFilterHelper.selectExactlyAllBranchesAndTags(testSet);
		assertThat("Expected different filters", testSet,
				containsInAnyOrder(expected));
	}

