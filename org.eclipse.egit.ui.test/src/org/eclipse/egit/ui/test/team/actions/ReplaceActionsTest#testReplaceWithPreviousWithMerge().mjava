	@Test
	public void testReplaceWithPreviousWithMerge() throws Exception {
		Repository repo = lookupRepository(repositoryFile);
		Git git = new Git(repo);

		git.checkout().setCreateBranch(true).setName("side").call();
		touch(PROJ1, "folder/test.txt", "side");
		RevCommit sideCommit = git.commit().setAll(true)
				.setMessage("Side commit").call();

		git.checkout().setName("master").call();
		touch(PROJ1, "folder/test2.txt", "master");
		git.commit().setAll(true).setMessage("Master commit").call();

		git.merge().include(sideCommit).call();

		String contentAfterMerge = getTestFileContent();
		assertEquals("side", contentAfterMerge);

		String menuLabel = util
				.getPluginLocalizedValue("replaceWithPreviousVersionAction.label");
		clickReplaceWith(menuLabel);
		bot.shell(UIText.DiscardChangesAction_confirmActionTitle).bot()
				.button(IDialogConstants.OK_LABEL).click();
		SWTBotShell selectDialog = bot
				.shell(UIText.CommitSelectDialog_WindowTitle);
		assertEquals(2, selectDialog.bot().table().rowCount());
		selectDialog.close();
		// we have closed, so nothing should have changed
		String contentAfterClose = getTestFileContent();
		assertEquals(contentAfterMerge, contentAfterClose);

		clickReplaceWith(menuLabel);
		bot.shell(UIText.DiscardChangesAction_confirmActionTitle).bot()
				.button(IDialogConstants.OK_LABEL).click();
		selectDialog = bot.shell(UIText.CommitSelectDialog_WindowTitle);
		// Select first parent, which should be the master commit
		selectDialog.bot().table().select(0);
		executeReplace(selectDialog);

		String replacedContent = getTestFileContent();
		assertThat(replacedContent, not(contentAfterMerge));
	}

