	@Test public void shouldExchangeCompareEditorSidesBetweenIncomingAndOutgoingChangesInWorkspaceModel()
			throws Exception {
		// given
		resetRepositoryToCreateInitialTag(PROJ1);
		makeChangesAndCommit(PROJ1);

		// compare HEAD against tag
		launchSynchronization(SynchronizeWithAction_localRepoName, HEAD,
				SynchronizeWithAction_tagsName, INITIAL_TAG, false);
		SWTBotEditor compEditor = getCompareEditorForFileInWorkspaceModel();
		SWTBot outgoingCompare = compEditor.bot();
		// save left value from compare editor
		String outgoingLeft = outgoingCompare.styledText(0).getText();
		// save right value from compare editor
		String outgoingRight = outgoingCompare.styledText(1).getText();
		compEditor.close();

		// when
		// compare tag against HEAD
		launchSynchronization(SynchronizeWithAction_tagsName, INITIAL_TAG,
				SynchronizeWithAction_localRepoName, HEAD, false);

		// then
		SWTBot incomingComp = getCompareEditorForFileInWorkspaceModel()
				.bot();
		String incomingLeft = incomingComp.styledText(0).getText();
		String incomingRight = incomingComp.styledText(1).getText();
		// right side from compare editor should be equal with left
		assertThat(outgoingLeft, equalTo(incomingRight));
		// left side from compare editor should be equal with right
		assertThat(outgoingRight, equalTo(incomingLeft));
	}

