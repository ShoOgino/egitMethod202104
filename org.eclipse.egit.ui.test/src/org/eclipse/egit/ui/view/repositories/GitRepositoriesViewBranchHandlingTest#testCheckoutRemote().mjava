	@Test
	public void testCheckoutRemote() throws Exception {
		Repository repo = lookupRepository(clonedRepositoryFile);
		BranchOperation bop = new BranchOperation(repo, "refs/heads/master");
		bop.execute(null);

		assertEquals("master", repo.getBranch());
		SWTBotTree tree = getOrOpenView().bot().tree();

		SWTBotTreeItem item = myRepoViewUtil.getLocalBranchesItem(tree,
				clonedRepositoryFile).expand();

		touchAndSubmit(null);
		refreshAndWait();

		item = TestUtil.expandAndWait(myRepoViewUtil.getRemoteBranchesItem(tree,
				clonedRepositoryFile));
		List<String> children = item.getNodes();
		assertEquals("Wrong number of remote children", 3, children.size());

		item.getNode("origin/stable").select();
		ContextMenuHelper.clickContextMenuSync(tree,
				myUtil.getPluginLocalizedValue("CheckoutCommand"));
		TestUtil.joinJobs(JobFamilies.CHECKOUT);
		refreshAndWait();

		GitLightweightDecorator.refresh();

		assertTrue("Branch should not be symbolic",
				ObjectId.isId(lookupRepository(clonedRepositoryFile)
						.getBranch()));

		// now let's try to create a local branch from the remote one
		item = myRepoViewUtil.getRemoteBranchesItem(tree, clonedRepositoryFile);
		TestUtil.expandAndWait(item).getNode("origin/stable").select();
		ContextMenuHelper.clickContextMenu(tree,
				myUtil.getPluginLocalizedValue("CreateBranchCommand"));

		SWTBotShell createPage = bot
				.shell(UIText.CreateBranchWizard_NewBranchTitle);
		createPage.activate();
		assertEquals("Wrong suggested branch name", "stable", createPage.bot()
				.textWithId("BranchName").getText());
		createPage.close();
		// checkout master again

		item = myRepoViewUtil.getLocalBranchesItem(tree, clonedRepositoryFile);
		TestUtil.expandAndWait(item).getNode("master").select();
		ContextMenuHelper.clickContextMenu(tree,
				myUtil.getPluginLocalizedValue("CheckoutCommand"));
		TestUtil.joinJobs(JobFamilies.CHECKOUT);
		refreshAndWait();
	}

