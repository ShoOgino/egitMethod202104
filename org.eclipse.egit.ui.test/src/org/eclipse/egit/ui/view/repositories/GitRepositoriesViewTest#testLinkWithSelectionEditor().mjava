	/**
	 * Link with editor, both ways
	 *
	 * @throws Exception
	 */
	@Test
	@Ignore("'Link with Selection' does not activate editor on selection change (bug 409722).")
	public void testLinkWithSelectionEditor() throws Exception {
		deleteAllProjects();
		shareProjects(repositoryFile);
		SWTBotTree tree = getOrOpenView().bot().tree();
		myRepoViewUtil.getRootItem(tree, repositoryFile).select();
		// the selection should be root
		assertTrue(tree.selection().get(0, 0).startsWith(REPO1));

		SWTBotView view = TestUtil.showExplorerView();
		SWTBotTree projectExplorerTree = view.bot().tree();

		SWTBotTreeItem item = TestUtil
				.expandAndWait(getProjectItem(projectExplorerTree, PROJ1));
		item = TestUtil.expandAndWait(item.getNode(FOLDER)).getNode(FILE1);
		view.show();
		item.doubleClick();

		item = TestUtil
				.expandAndWait(getProjectItem(projectExplorerTree, PROJ1));
		item = TestUtil.expandAndWait(item.getNode(FOLDER)).getNode(FILE2);
		view.show();
		item.doubleClick();
		// now we should have two editors

		// the selection should be still be root
		assertTrue(tree.selection().get(0, 0).startsWith(REPO1));

		// activate the link with selection
		toggleLinkWithSelection();

		bot.editorByTitle(FILE2).show();
		// the selection should have changed to the latest editor
		TestUtil.waitUntilTreeHasSelectedNodeWithText(bot, tree, FILE2, 10000);

		bot.editorByTitle(FILE1).show();
		// selection should have changed
		TestUtil.waitUntilTreeHasSelectedNodeWithText(bot, tree, FILE1, 10000);

		// deactivate the link with editor
		toggleLinkWithSelection();

		bot.editorByTitle(FILE2).show();
		// the selection should be still be test.txt
		TestUtil.waitUntilTreeHasSelectedNodeWithText(bot, tree, FILE1, 10000);

		bot.editorByTitle(FILE1).show();

		item = TestUtil.expandAndWait(
				myRepoViewUtil.getWorkdirItem(tree, repositoryFile));
		item = TestUtil.expandAndWait(item.getNode(PROJ1));
		item = TestUtil.expandAndWait(item.getNode(FOLDER));
		item.getNode(FILE2).select();

		// the editor should still be test.txt
		assertEquals(FILE1, bot.activeEditor().getTitle());

		// activate again
		toggleLinkWithSelection();

		// make sure focus is here
		// tried to remove this waitInUI but failed.
		// tried setting focus, waiting for focus, joining RepositoriesView
		// refresh job
		waitInUI();
		item = TestUtil.expandAndWait(
				myRepoViewUtil.getWorkdirItem(tree, repositoryFile));
		item = TestUtil.expandAndWait(item.getNode(PROJ1));
		item = TestUtil.expandAndWait(item.getNode(FOLDER));
		item.getNode(FILE2).select();
		TestUtil.waitUntilEditorIsActive(bot, bot.editorByTitle(FILE2), 10000);

		item = TestUtil.expandAndWait(
				myRepoViewUtil.getWorkdirItem(tree, repositoryFile));
		item = TestUtil.expandAndWait(item.getNode(PROJ1));
		item = TestUtil.expandAndWait(item.getNode(FOLDER));
		item.getNode(FILE1).select();
		TestUtil.waitUntilEditorIsActive(bot, bot.editorByTitle(FILE1), 10000);

		// deactivate the link with editor
		toggleLinkWithSelection();

		item = TestUtil.expandAndWait(
				myRepoViewUtil.getWorkdirItem(tree, repositoryFile));
		item = TestUtil.expandAndWait(item.getNode(PROJ1));
		item = TestUtil.expandAndWait(item.getNode(FOLDER));
		item.getNode(FILE2).select();
		TestUtil.waitUntilEditorIsActive(bot, bot.editorByTitle(FILE1), 10000);
	}

