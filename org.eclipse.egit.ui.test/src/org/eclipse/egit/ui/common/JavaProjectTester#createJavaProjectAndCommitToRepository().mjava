	public IJavaProject createJavaProjectAndCommitToRepository()
			throws Exception {
		Repository myRepository = testCase
				.createLocalTestRepository(LocalRepositoryTestCase.REPO1);
		File gitDir = myRepository.getDirectory();
		IJavaProject jProject = createJavaProject(myRepository,
				JAVA_PROJECT_NAME);
		IProject project = jProject.getProject();
		try {
			new ConnectProviderOperation(project, gitDir).execute(null);
		} catch (Exception e) {
			Activator.logError("Failed to connect project to repository", e);
		}
		testCase.assertConnected(project);
		// Check in at least the java file
		IFolder folder = project.getFolder(SRC_FOLDER_NAME)
				.getFolder(PACKAGE_NAME);
		IFile file = folder.getFile(JAVA_FILE_NAME);

		IFile[] committableFiles = new IFile[] { file };
		ArrayList<IFile> untracked = new ArrayList<>();
		untracked.addAll(Arrays.asList(committableFiles));
		// commit to master
		CommitOperation op = new CommitOperation(committableFiles, untracked,
				TestUtil.TESTAUTHOR, TestUtil.TESTCOMMITTER, "Initial commit");
		op.execute(null);

		// Make sure cache entry is already listening for changes
		IndexDiffCache cache = Activator.getDefault().getIndexDiffCache();
		cache.getIndexDiffCacheEntry(Activator.getDefault().getRepositoryCache()
				.lookupRepository(gitDir));
		return jProject;
	}

