	@Test
	public void testFeatureCheckoutConflicts() throws Exception {
		Repository repository = testRepository.getRepository();
		GitFlowRepository gfRepo = init("testFeatureCheckoutConflicts\n\nfirst commit\n");

		// setup something we can modify later
		IFile file = testUtils.addFileToProject(project.getProject(),
				"folder1/file1.txt", "Hello world");
		testRepository.connect(project.getProject());
		testRepository.trackAllFiles(project.getProject());
		testRepository.commit("Initial commit");

		new FeatureStartOperation(gfRepo, MY_FEATURE).execute(null);
		// modify on first branch
		testUtils.changeContentOfFile(project.getProject(), file,
				"Hello Feature");
		testRepository.addToIndex(file);
		testRepository.commit("Feature commit");
		new BranchOperation(repository, gfRepo.getConfig().getDevelop()).execute(null);
		assertEquals(gfRepo.getConfig().getDevelopFull(), repository.getFullBranch());

		// modify on second branch
		testUtils.changeContentOfFile(project.getProject(), file,
				"Hello Develop");
		testRepository.addToIndex(file);

		FeatureCheckoutOperation featureCheckoutOperation = new FeatureCheckoutOperation(
				gfRepo, MY_FEATURE);
		featureCheckoutOperation.execute(null);

		assertEquals(Status.CONFLICTS, featureCheckoutOperation.getResult()
				.getStatus());
		assertEquals(gfRepo.getConfig().getDevelopFull(), repository.getFullBranch());
	}

