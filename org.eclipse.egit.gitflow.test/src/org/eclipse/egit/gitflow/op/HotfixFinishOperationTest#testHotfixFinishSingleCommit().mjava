	@Test
	public void testHotfixFinishSingleCommit() throws Exception {
		testRepository
				.createInitialCommit("testHotfixFinish\n\nfirst commit\n");

		Repository repository = testRepository.getRepository();
		new InitOperation(repository).execute(null);
		GitFlowRepository gfRepo = new GitFlowRepository(repository);

		new HotfixStartOperation(gfRepo, MY_HOTFIX).execute(null);

		RevCommit branchCommit = testRepository
				.createInitialCommit("testHotfixFinish\n\nbranch commit\n");

		new HotfixFinishOperation(gfRepo).execute(null);

		assertEquals(gfRepo.getConfig().getDevelopFull(), repository.getFullBranch());

		String branchName = gfRepo.getConfig().getHotfixBranchName(MY_HOTFIX);

		// tag created?
		RevCommit taggedCommit = gfRepo.findCommitForTag(MY_HOTFIX);
		assertEquals(formatMergeCommitMessage(branchName), taggedCommit.getShortMessage());

		// branch removed?
		assertEquals(findBranch(repository, branchName), null);

		RevCommit developHead = gfRepo.findHead(DEVELOP);
		assertNotEquals(branchCommit, developHead);

		RevCommit masterHead = gfRepo.findHead(MY_MASTER);
		assertEquals(formatMergeCommitMessage(branchName), masterHead.getShortMessage());
	}

