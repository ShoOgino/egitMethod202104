	@Test
	public void testReleaseFinish() throws Exception {
		testRepository
				.createInitialCommit("testReleaseFinish\n\nfirst commit\n");

		Repository repository = testRepository.getRepository();
		new InitOperation(repository, DEVELOP, MASTER, FEATURE_PREFIX,
				RELEASE_PREFIX, HOTFIX_PREFIX, MY_VERSION_TAG).execute(null);
		GitFlowRepository gfRepo = new GitFlowRepository(repository);

		new ReleaseStartOperation(gfRepo, MY_RELEASE).execute(null);
		RevCommit branchCommit = testRepository
				.createInitialCommit("testReleaseFinish\n\nbranch commit\n");
		new ReleaseFinishOperation(gfRepo).execute(null);
		assertEquals(gfRepo.getConfig().getDevelopFull(), repository.getFullBranch());

		String branchName = gfRepo.getConfig().getReleaseBranchName(MY_RELEASE);
		// tag created?
		assertEquals(branchCommit,
				gfRepo.findCommitForTag(MY_VERSION_TAG + MY_RELEASE));
		// branch removed?
		assertEquals(findBranch(repository, branchName), null);

		RevCommit developHead = gfRepo.findHead();
		assertEquals(branchCommit, developHead);

		RevCommit masterHead = gfRepo.findHead(MY_MASTER);
		assertEquals(branchCommit, masterHead);
	}

